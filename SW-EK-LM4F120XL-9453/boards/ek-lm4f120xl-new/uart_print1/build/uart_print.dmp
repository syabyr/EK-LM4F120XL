
uart_print:     file format elf32-littlearm


Disassembly of section .text:

00000000 <g_pfnVectors>:
       0:	ac 0a 00 20 85 02 00 00 f1 02 00 00 f7 02 00 00     ... ............
      10:	fd 02 00 00 fd 02 00 00 fd 02 00 00 00 00 00 00     ................
	...
      2c:	fd 02 00 00 fd 02 00 00 00 00 00 00 fd 02 00 00     ................
      3c:	fd 02 00 00 fd 02 00 00 fd 02 00 00 fd 02 00 00     ................
      4c:	fd 02 00 00 fd 02 00 00 05 03 00 00 fd 02 00 00     ................
      5c:	fd 02 00 00 fd 02 00 00 fd 02 00 00 fd 02 00 00     ................
      6c:	fd 02 00 00 fd 02 00 00 fd 02 00 00 fd 02 00 00     ................
      7c:	fd 02 00 00 fd 02 00 00 fd 02 00 00 fd 02 00 00     ................
      8c:	fd 02 00 00 fd 02 00 00 fd 02 00 00 fd 02 00 00     ................
      9c:	fd 02 00 00 fd 02 00 00 fd 02 00 00 fd 02 00 00     ................
      ac:	fd 02 00 00 fd 02 00 00 fd 02 00 00 fd 02 00 00     ................
      bc:	fd 02 00 00 fd 02 00 00 fd 02 00 00 fd 02 00 00     ................
      cc:	fd 02 00 00 fd 02 00 00 fd 02 00 00 fd 02 00 00     ................
      dc:	fd 02 00 00 fd 02 00 00 fd 02 00 00 fd 02 00 00     ................
      ec:	fd 02 00 00 fd 02 00 00 fd 02 00 00 fd 02 00 00     ................
      fc:	fd 02 00 00 fd 02 00 00 fd 02 00 00 fd 02 00 00     ................
     10c:	fd 02 00 00 fd 02 00 00 fd 02 00 00 fd 02 00 00     ................
     11c:	fd 02 00 00 fd 02 00 00 fd 02 00 00 fd 02 00 00     ................
     12c:	fd 02 00 00 fd 02 00 00 fd 02 00 00 fd 02 00 00     ................
     13c:	fd 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     14c:	00 00 00 00 fd 02 00 00 fd 02 00 00 fd 02 00 00     ................
     15c:	fd 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     1b0:	fd 02 00 00 fd 02 00 00 fd 02 00 00 fd 02 00 00     ................
     1c0:	fd 02 00 00 fd 02 00 00 fd 02 00 00 fd 02 00 00     ................
     1d0:	fd 02 00 00 fd 02 00 00 fd 02 00 00 fd 02 00 00     ................
     1e0:	fd 02 00 00 fd 02 00 00 fd 02 00 00 fd 02 00 00     ................
     1f0:	fd 02 00 00 fd 02 00 00 fd 02 00 00 fd 02 00 00     ................
     200:	fd 02 00 00 fd 02 00 00 fd 02 00 00 00 00 00 00     ................
     210:	fd 02 00 00 fd 02 00 00 fd 02 00 00 fd 02 00 00     ................
     220:	fd 02 00 00 fd 02 00 00 fd 02 00 00 fd 02 00 00     ................
     230:	fd 02 00 00 fd 02 00 00 fd 02 00 00 fd 02 00 00     ................
     240:	fd 02 00 00 fd 02 00 00 fd 02 00 00 fd 02 00 00     ................
     250:	fd 02 00 00 fd 02 00 00 fd 02 00 00 fd 02 00 00     ................
     260:	fd 02 00 00 fd 02 00 00 fd 02 00 00                 ............

0000026c <_init>:
     26c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     26e:	bf00      	nop
     270:	bcf8      	pop	{r3, r4, r5, r6, r7}
     272:	bc08      	pop	{r3}
     274:	469e      	mov	lr, r3
     276:	4770      	bx	lr

00000278 <_fini>:
     278:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     27a:	bf00      	nop
     27c:	bcf8      	pop	{r3, r4, r5, r6, r7}
     27e:	bc08      	pop	{r3}
     280:	469e      	mov	lr, r3
     282:	4770      	bx	lr

00000284 <ResetISR>:
// application.
//
//*****************************************************************************
void
ResetISR(void)
{
     284:	b580      	push	{r7, lr}
     286:	b082      	sub	sp, #8
     288:	af00      	add	r7, sp, #0
    unsigned long *pulSrc, *pulDest;

    //
    // Copy the data segment initializers from flash to SRAM.
    //
    pulSrc = &_etext;
     28a:	4b13      	ldr	r3, [pc, #76]	; (2d8 <zero_loop+0x24>)
     28c:	607b      	str	r3, [r7, #4]
    for(pulDest = &_data; pulDest < &_edata; )
     28e:	4b13      	ldr	r3, [pc, #76]	; (2dc <zero_loop+0x28>)
     290:	603b      	str	r3, [r7, #0]
     292:	e007      	b.n	2a4 <ResetISR+0x20>
    {
        *pulDest++ = *pulSrc++;
     294:	687a      	ldr	r2, [r7, #4]
     296:	1d13      	adds	r3, r2, #4
     298:	607b      	str	r3, [r7, #4]
     29a:	683b      	ldr	r3, [r7, #0]
     29c:	1d19      	adds	r1, r3, #4
     29e:	6039      	str	r1, [r7, #0]
     2a0:	6812      	ldr	r2, [r2, #0]
     2a2:	601a      	str	r2, [r3, #0]
    for(pulDest = &_data; pulDest < &_edata; )
     2a4:	683b      	ldr	r3, [r7, #0]
     2a6:	4a0e      	ldr	r2, [pc, #56]	; (2e0 <zero_loop+0x2c>)
     2a8:	4293      	cmp	r3, r2
     2aa:	d3f3      	bcc.n	294 <ResetISR+0x10>
    }

    //
    // Zero fill the bss segment.
    //
    __asm("    ldr     r0, =_bss\n"
     2ac:	480e      	ldr	r0, [pc, #56]	; (2e8 <zero_loop+0x34>)
     2ae:	490f      	ldr	r1, [pc, #60]	; (2ec <zero_loop+0x38>)
     2b0:	f04f 0200 	mov.w	r2, #0

000002b4 <zero_loop>:
     2b4:	4288      	cmp	r0, r1
     2b6:	bfb8      	it	lt
     2b8:	f840 2b04 	strlt.w	r2, [r0], #4
     2bc:	dbfa      	blt.n	2b4 <zero_loop>
    // APIs must be done here prior to the floating-point unit being enabled.
    //
    // Note that this does not use DriverLib since it might not be included in
    // this project.
    //
    HWREG(NVIC_CPAC) = ((HWREG(NVIC_CPAC) &
     2be:	4b09      	ldr	r3, [pc, #36]	; (2e4 <zero_loop+0x30>)
     2c0:	681b      	ldr	r3, [r3, #0]
     2c2:	4a08      	ldr	r2, [pc, #32]	; (2e4 <zero_loop+0x30>)
                         ~(NVIC_CPAC_CP10_M | NVIC_CPAC_CP11_M)) |
                        NVIC_CPAC_CP10_FULL | NVIC_CPAC_CP11_FULL);
     2c4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
    HWREG(NVIC_CPAC) = ((HWREG(NVIC_CPAC) &
     2c8:	6013      	str	r3, [r2, #0]

    //
    // Call the application's entry point.
    //
    main();
     2ca:	f000 f8e1 	bl	490 <main>
}
     2ce:	bf00      	nop
     2d0:	3708      	adds	r7, #8
     2d2:	46bd      	mov	sp, r7
     2d4:	bd80      	pop	{r7, pc}
     2d6:	bf00      	nop
     2d8:	000039b8 	.word	0x000039b8
     2dc:	20000000 	.word	0x20000000
     2e0:	200009ac 	.word	0x200009ac
     2e4:	e000ed88 	.word	0xe000ed88
     2e8:	200009ac 	.word	0x200009ac
     2ec:	20000ae4 	.word	0x20000ae4

000002f0 <NmiSR>:
// by a debugger.
//
//*****************************************************************************
static void
NmiSR(void)
{
     2f0:	b480      	push	{r7}
     2f2:	af00      	add	r7, sp, #0
    //
    // Enter an infinite loop.
    //
    while(1)
     2f4:	e7fe      	b.n	2f4 <NmiSR+0x4>

000002f6 <FaultISR>:
// for examination by a debugger.
//
//*****************************************************************************
static void
FaultISR(void)
{
     2f6:	b480      	push	{r7}
     2f8:	af00      	add	r7, sp, #0
    //
    // Enter an infinite loop.
    //
    while(1)
     2fa:	e7fe      	b.n	2fa <FaultISR+0x4>

000002fc <IntDefaultHandler>:
// for examination by a debugger.
//
//*****************************************************************************
static void
IntDefaultHandler(void)
{
     2fc:	b480      	push	{r7}
     2fe:	af00      	add	r7, sp, #0
    //
    // Go into an infinite loop.
    //
    while(1)
     300:	e7fe      	b.n	300 <IntDefaultHandler+0x4>
	...

00000304 <UARTIntHandler>:
// The UART interrupt handler.
//
//*****************************************************************************
void
UARTIntHandler(void)
{
     304:	b590      	push	{r4, r7, lr}
     306:	b083      	sub	sp, #12
     308:	af00      	add	r7, sp, #0
    unsigned long ulStatus;

    //
    // Get the interrrupt status.
    //
    ulStatus = ROM_UARTIntStatus(UART0_BASE, true);
     30a:	4b21      	ldr	r3, [pc, #132]	; (390 <UARTIntHandler+0x8c>)
     30c:	681b      	ldr	r3, [r3, #0]
     30e:	334c      	adds	r3, #76	; 0x4c
     310:	681b      	ldr	r3, [r3, #0]
     312:	2101      	movs	r1, #1
     314:	481f      	ldr	r0, [pc, #124]	; (394 <UARTIntHandler+0x90>)
     316:	4798      	blx	r3
     318:	6078      	str	r0, [r7, #4]

    //
    // Clear the asserted interrupts.
    //
    ROM_UARTIntClear(UART0_BASE, ulStatus);
     31a:	4b1d      	ldr	r3, [pc, #116]	; (390 <UARTIntHandler+0x8c>)
     31c:	681b      	ldr	r3, [r3, #0]
     31e:	3350      	adds	r3, #80	; 0x50
     320:	681b      	ldr	r3, [r3, #0]
     322:	6879      	ldr	r1, [r7, #4]
     324:	481b      	ldr	r0, [pc, #108]	; (394 <UARTIntHandler+0x90>)
     326:	4798      	blx	r3

    //
    // Loop while there are characters in the receive FIFO.
    //
    while(ROM_UARTCharsAvail(UART0_BASE))
     328:	e023      	b.n	372 <UARTIntHandler+0x6e>
    {
        //
        // Read the next character from the UART and write it back to the UART.
        //
        ROM_UARTCharPutNonBlocking(UART0_BASE,
     32a:	4b19      	ldr	r3, [pc, #100]	; (390 <UARTIntHandler+0x8c>)
     32c:	681b      	ldr	r3, [r3, #0]
     32e:	333c      	adds	r3, #60	; 0x3c
     330:	681b      	ldr	r3, [r3, #0]
     332:	461c      	mov	r4, r3
                                   ROM_UARTCharGetNonBlocking(UART0_BASE));
     334:	4b16      	ldr	r3, [pc, #88]	; (390 <UARTIntHandler+0x8c>)
     336:	681b      	ldr	r3, [r3, #0]
     338:	3334      	adds	r3, #52	; 0x34
     33a:	681b      	ldr	r3, [r3, #0]
     33c:	4815      	ldr	r0, [pc, #84]	; (394 <UARTIntHandler+0x90>)
     33e:	4798      	blx	r3
     340:	4603      	mov	r3, r0
        ROM_UARTCharPutNonBlocking(UART0_BASE,
     342:	b2db      	uxtb	r3, r3
     344:	4619      	mov	r1, r3
     346:	4813      	ldr	r0, [pc, #76]	; (394 <UARTIntHandler+0x90>)
     348:	47a0      	blx	r4
        
        //
        // Blink the LED to show a character transfer is occuring.
        //
        GPIOPinWrite(GPIO_PORTF_BASE, GPIO_PIN_2, GPIO_PIN_2);
     34a:	2204      	movs	r2, #4
     34c:	2104      	movs	r1, #4
     34e:	4812      	ldr	r0, [pc, #72]	; (398 <UARTIntHandler+0x94>)
     350:	f002 fff2 	bl	3338 <GPIOPinWrite>
        
        //
        // Delay for 1 millisecond.  Each SysCtlDelay is about 3 clocks.
        //
        SysCtlDelay(SysCtlClockGet() / (1000 * 3));
     354:	f003 f84e 	bl	33f4 <SysCtlClockGet>
     358:	4603      	mov	r3, r0
     35a:	4a10      	ldr	r2, [pc, #64]	; (39c <UARTIntHandler+0x98>)
     35c:	fba2 2303 	umull	r2, r3, r2, r3
     360:	099b      	lsrs	r3, r3, #6
     362:	4618      	mov	r0, r3
     364:	f003 f840 	bl	33e8 <SysCtlDelay>
        
        //
        // Turn off the LED
        //
        GPIOPinWrite(GPIO_PORTF_BASE, GPIO_PIN_2, 0);
     368:	2200      	movs	r2, #0
     36a:	2104      	movs	r1, #4
     36c:	480a      	ldr	r0, [pc, #40]	; (398 <UARTIntHandler+0x94>)
     36e:	f002 ffe3 	bl	3338 <GPIOPinWrite>
    while(ROM_UARTCharsAvail(UART0_BASE))
     372:	4b07      	ldr	r3, [pc, #28]	; (390 <UARTIntHandler+0x8c>)
     374:	681b      	ldr	r3, [r3, #0]
     376:	332c      	adds	r3, #44	; 0x2c
     378:	681b      	ldr	r3, [r3, #0]
     37a:	4806      	ldr	r0, [pc, #24]	; (394 <UARTIntHandler+0x90>)
     37c:	4798      	blx	r3
     37e:	4603      	mov	r3, r0
     380:	2b00      	cmp	r3, #0
     382:	d1d2      	bne.n	32a <UARTIntHandler+0x26>
        
    }
}
     384:	bf00      	nop
     386:	bf00      	nop
     388:	370c      	adds	r7, #12
     38a:	46bd      	mov	sp, r7
     38c:	bd90      	pop	{r4, r7, pc}
     38e:	bf00      	nop
     390:	01000014 	.word	0x01000014
     394:	4000c000 	.word	0x4000c000
     398:	40025000 	.word	0x40025000
     39c:	057619f1 	.word	0x057619f1

000003a0 <UARTSend>:
// Send a string to the UART.
//
//*****************************************************************************
void
UARTSend(const unsigned char *pucBuffer, unsigned long ulCount)
{
     3a0:	b590      	push	{r4, r7, lr}
     3a2:	b083      	sub	sp, #12
     3a4:	af00      	add	r7, sp, #0
     3a6:	6078      	str	r0, [r7, #4]
     3a8:	6039      	str	r1, [r7, #0]
    //
    // Loop while there are more characters to send.
    //
    while(ulCount--)
     3aa:	e00a      	b.n	3c2 <UARTSend+0x22>
    {
        //
        // Write the next character to the UART.
        //
        //ROM_UARTCharPutNonBlocking(UART0_BASE, *pucBuffer++);
        ROM_UARTCharPut(UART0_BASE, *pucBuffer++);
     3ac:	4b0a      	ldr	r3, [pc, #40]	; (3d8 <UARTSend+0x38>)
     3ae:	681b      	ldr	r3, [r3, #0]
     3b0:	681b      	ldr	r3, [r3, #0]
     3b2:	461c      	mov	r4, r3
     3b4:	687b      	ldr	r3, [r7, #4]
     3b6:	1c5a      	adds	r2, r3, #1
     3b8:	607a      	str	r2, [r7, #4]
     3ba:	781b      	ldrb	r3, [r3, #0]
     3bc:	4619      	mov	r1, r3
     3be:	4807      	ldr	r0, [pc, #28]	; (3dc <UARTSend+0x3c>)
     3c0:	47a0      	blx	r4
    while(ulCount--)
     3c2:	683b      	ldr	r3, [r7, #0]
     3c4:	1e5a      	subs	r2, r3, #1
     3c6:	603a      	str	r2, [r7, #0]
     3c8:	2b00      	cmp	r3, #0
     3ca:	d1ef      	bne.n	3ac <UARTSend+0xc>
    }
}
     3cc:	bf00      	nop
     3ce:	bf00      	nop
     3d0:	370c      	adds	r7, #12
     3d2:	46bd      	mov	sp, r7
     3d4:	bd90      	pop	{r4, r7, pc}
     3d6:	bf00      	nop
     3d8:	01000014 	.word	0x01000014
     3dc:	4000c000 	.word	0x4000c000

000003e0 <_write>:


#ifdef __GNUC__
int _write(int fd, char *ptr, int len)
{
     3e0:	b580      	push	{r7, lr}
     3e2:	b084      	sub	sp, #16
     3e4:	af00      	add	r7, sp, #0
     3e6:	60f8      	str	r0, [r7, #12]
     3e8:	60b9      	str	r1, [r7, #8]
     3ea:	607a      	str	r2, [r7, #4]
  UARTSend((unsigned char *)ptr, len);
     3ec:	687b      	ldr	r3, [r7, #4]
     3ee:	4619      	mov	r1, r3
     3f0:	68b8      	ldr	r0, [r7, #8]
     3f2:	f7ff ffd5 	bl	3a0 <UARTSend>
  return len;
     3f6:	687b      	ldr	r3, [r7, #4]
}
     3f8:	4618      	mov	r0, r3
     3fa:	3710      	adds	r7, #16
     3fc:	46bd      	mov	sp, r7
     3fe:	bd80      	pop	{r7, pc}

00000400 <_sbrk>:
#endif

caddr_t _sbrk(int incr) 
{
     400:	b480      	push	{r7}
     402:	b083      	sub	sp, #12
     404:	af00      	add	r7, sp, #0
     406:	6078      	str	r0, [r7, #4]
    return (caddr_t) 0;
     408:	2300      	movs	r3, #0
}
     40a:	4618      	mov	r0, r3
     40c:	370c      	adds	r7, #12
     40e:	46bd      	mov	sp, r7
     410:	f85d 7b04 	ldr.w	r7, [sp], #4
     414:	4770      	bx	lr

00000416 <_close>:
int _close(int file) 
{ 
     416:	b480      	push	{r7}
     418:	b083      	sub	sp, #12
     41a:	af00      	add	r7, sp, #0
     41c:	6078      	str	r0, [r7, #4]
    return -1; 
     41e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
     422:	4618      	mov	r0, r3
     424:	370c      	adds	r7, #12
     426:	46bd      	mov	sp, r7
     428:	f85d 7b04 	ldr.w	r7, [sp], #4
     42c:	4770      	bx	lr

0000042e <_fstat>:
int _fstat(int file, struct stat *st) 
{ 
     42e:	b480      	push	{r7}
     430:	b083      	sub	sp, #12
     432:	af00      	add	r7, sp, #0
     434:	6078      	str	r0, [r7, #4]
     436:	6039      	str	r1, [r7, #0]
    return 0;
     438:	2300      	movs	r3, #0
}
     43a:	4618      	mov	r0, r3
     43c:	370c      	adds	r7, #12
     43e:	46bd      	mov	sp, r7
     440:	f85d 7b04 	ldr.w	r7, [sp], #4
     444:	4770      	bx	lr

00000446 <_isatty>:
int _isatty(int file) 
{ 
     446:	b480      	push	{r7}
     448:	b083      	sub	sp, #12
     44a:	af00      	add	r7, sp, #0
     44c:	6078      	str	r0, [r7, #4]
    return 1; 
     44e:	2301      	movs	r3, #1
}
     450:	4618      	mov	r0, r3
     452:	370c      	adds	r7, #12
     454:	46bd      	mov	sp, r7
     456:	f85d 7b04 	ldr.w	r7, [sp], #4
     45a:	4770      	bx	lr

0000045c <_lseek>:
int _lseek(int file, int ptr, int dir) 
{ 
     45c:	b480      	push	{r7}
     45e:	b085      	sub	sp, #20
     460:	af00      	add	r7, sp, #0
     462:	60f8      	str	r0, [r7, #12]
     464:	60b9      	str	r1, [r7, #8]
     466:	607a      	str	r2, [r7, #4]
    return 0; 
     468:	2300      	movs	r3, #0
}
     46a:	4618      	mov	r0, r3
     46c:	3714      	adds	r7, #20
     46e:	46bd      	mov	sp, r7
     470:	f85d 7b04 	ldr.w	r7, [sp], #4
     474:	4770      	bx	lr

00000476 <_read>:
int _read(int file, char *ptr, int len) 
{ 
     476:	b480      	push	{r7}
     478:	b085      	sub	sp, #20
     47a:	af00      	add	r7, sp, #0
     47c:	60f8      	str	r0, [r7, #12]
     47e:	60b9      	str	r1, [r7, #8]
     480:	607a      	str	r2, [r7, #4]
    return 0;
     482:	2300      	movs	r3, #0
}
     484:	4618      	mov	r0, r3
     486:	3714      	adds	r7, #20
     488:	46bd      	mov	sp, r7
     48a:	f85d 7b04 	ldr.w	r7, [sp], #4
     48e:	4770      	bx	lr

00000490 <main>:
// This example demonstrates how to send a string of data to the UART.
//
//*****************************************************************************
int
main(void)
{
     490:	b590      	push	{r4, r7, lr}
     492:	b083      	sub	sp, #12
     494:	af00      	add	r7, sp, #0
    //
    // Enable lazy stacking for interrupt handlers.  This allows floating-point
    // instructions to be used within interrupt handlers, but at the expense of
    // extra stack usage.
    //
    ROM_FPUEnable();
     496:	4b38      	ldr	r3, [pc, #224]	; (578 <main+0xe8>)
     498:	681b      	ldr	r3, [r3, #0]
     49a:	681b      	ldr	r3, [r3, #0]
     49c:	4798      	blx	r3
    ROM_FPULazyStackingEnable();
     49e:	4b36      	ldr	r3, [pc, #216]	; (578 <main+0xe8>)
     4a0:	681b      	ldr	r3, [r3, #0]
     4a2:	3310      	adds	r3, #16
     4a4:	681b      	ldr	r3, [r3, #0]
     4a6:	4798      	blx	r3

    //
    // Set the clocking to run directly from the crystal.
    //
    ROM_SysCtlClockSet(SYSCTL_SYSDIV_1 | SYSCTL_USE_OSC | SYSCTL_OSC_MAIN |
     4a8:	4b34      	ldr	r3, [pc, #208]	; (57c <main+0xec>)
     4aa:	681b      	ldr	r3, [r3, #0]
     4ac:	335c      	adds	r3, #92	; 0x5c
     4ae:	681b      	ldr	r3, [r3, #0]
     4b0:	4833      	ldr	r0, [pc, #204]	; (580 <main+0xf0>)
     4b2:	4798      	blx	r3
                       SYSCTL_XTAL_16MHZ);

    //
    // Enable the GPIO port that is used for the on-board LED.
    //
    ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOF);
     4b4:	4b31      	ldr	r3, [pc, #196]	; (57c <main+0xec>)
     4b6:	681b      	ldr	r3, [r3, #0]
     4b8:	3318      	adds	r3, #24
     4ba:	681b      	ldr	r3, [r3, #0]
     4bc:	4831      	ldr	r0, [pc, #196]	; (584 <main+0xf4>)
     4be:	4798      	blx	r3

    //
    // Enable the GPIO pins for the LED (PF2).  
    //
    ROM_GPIOPinTypeGPIOOutput(GPIO_PORTF_BASE, GPIO_PIN_2);
     4c0:	4b31      	ldr	r3, [pc, #196]	; (588 <main+0xf8>)
     4c2:	681b      	ldr	r3, [r3, #0]
     4c4:	333c      	adds	r3, #60	; 0x3c
     4c6:	681b      	ldr	r3, [r3, #0]
     4c8:	2104      	movs	r1, #4
     4ca:	4830      	ldr	r0, [pc, #192]	; (58c <main+0xfc>)
     4cc:	4798      	blx	r3

    //
    // Enable the peripherals used by this example.
    //
    ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_UART0);
     4ce:	4b2b      	ldr	r3, [pc, #172]	; (57c <main+0xec>)
     4d0:	681b      	ldr	r3, [r3, #0]
     4d2:	3318      	adds	r3, #24
     4d4:	681b      	ldr	r3, [r3, #0]
     4d6:	482e      	ldr	r0, [pc, #184]	; (590 <main+0x100>)
     4d8:	4798      	blx	r3
    ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOA);
     4da:	4b28      	ldr	r3, [pc, #160]	; (57c <main+0xec>)
     4dc:	681b      	ldr	r3, [r3, #0]
     4de:	3318      	adds	r3, #24
     4e0:	681b      	ldr	r3, [r3, #0]
     4e2:	482c      	ldr	r0, [pc, #176]	; (594 <main+0x104>)
     4e4:	4798      	blx	r3

    //
    // Enable processor interrupts.
    //
    ROM_IntMasterEnable();
     4e6:	4b2c      	ldr	r3, [pc, #176]	; (598 <main+0x108>)
     4e8:	681b      	ldr	r3, [r3, #0]
     4ea:	3304      	adds	r3, #4
     4ec:	681b      	ldr	r3, [r3, #0]
     4ee:	4798      	blx	r3

    //
    // Set GPIO A0 and A1 as UART pins.
    //
    GPIOPinConfigure(GPIO_PA0_U0RX);
     4f0:	2001      	movs	r0, #1
     4f2:	f002 ff37 	bl	3364 <GPIOPinConfigure>
    GPIOPinConfigure(GPIO_PA1_U0TX);
     4f6:	f240 4001 	movw	r0, #1025	; 0x401
     4fa:	f002 ff33 	bl	3364 <GPIOPinConfigure>
    ROM_GPIOPinTypeUART(GPIO_PORTA_BASE, GPIO_PIN_0 | GPIO_PIN_1);
     4fe:	4b22      	ldr	r3, [pc, #136]	; (588 <main+0xf8>)
     500:	681b      	ldr	r3, [r3, #0]
     502:	3354      	adds	r3, #84	; 0x54
     504:	681b      	ldr	r3, [r3, #0]
     506:	2103      	movs	r1, #3
     508:	f04f 2040 	mov.w	r0, #1073758208	; 0x40004000
     50c:	4798      	blx	r3

    //
    // Configure the UART for 115,200, 8-N-1 operation.
    //
    ROM_UARTConfigSetExpClk(UART0_BASE, ROM_SysCtlClockGet(), 115200,
     50e:	4b23      	ldr	r3, [pc, #140]	; (59c <main+0x10c>)
     510:	681b      	ldr	r3, [r3, #0]
     512:	3314      	adds	r3, #20
     514:	681b      	ldr	r3, [r3, #0]
     516:	461c      	mov	r4, r3
     518:	4b18      	ldr	r3, [pc, #96]	; (57c <main+0xec>)
     51a:	681b      	ldr	r3, [r3, #0]
     51c:	3360      	adds	r3, #96	; 0x60
     51e:	681b      	ldr	r3, [r3, #0]
     520:	4798      	blx	r3
     522:	4601      	mov	r1, r0
     524:	2360      	movs	r3, #96	; 0x60
     526:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
     52a:	481d      	ldr	r0, [pc, #116]	; (5a0 <main+0x110>)
     52c:	47a0      	blx	r4
                             UART_CONFIG_PAR_NONE));

    //
    // Enable the UART interrupt.
    //
    ROM_IntEnable(INT_UART0);
     52e:	4b1a      	ldr	r3, [pc, #104]	; (598 <main+0x108>)
     530:	681b      	ldr	r3, [r3, #0]
     532:	681b      	ldr	r3, [r3, #0]
     534:	2015      	movs	r0, #21
     536:	4798      	blx	r3
    ROM_UARTIntEnable(UART0_BASE, UART_INT_RX | UART_INT_RT);
     538:	4b18      	ldr	r3, [pc, #96]	; (59c <main+0x10c>)
     53a:	681b      	ldr	r3, [r3, #0]
     53c:	3344      	adds	r3, #68	; 0x44
     53e:	681b      	ldr	r3, [r3, #0]
     540:	2150      	movs	r1, #80	; 0x50
     542:	4817      	ldr	r0, [pc, #92]	; (5a0 <main+0x110>)
     544:	4798      	blx	r3

    //
    // Prompt for text to be entered.
    //
    UARTSend((unsigned char *)"\033[2JEnter text: \r\n", 18);
     546:	2112      	movs	r1, #18
     548:	4816      	ldr	r0, [pc, #88]	; (5a4 <main+0x114>)
     54a:	f7ff ff29 	bl	3a0 <UARTSend>


    printf("helloworld.\r\n");
     54e:	4816      	ldr	r0, [pc, #88]	; (5a8 <main+0x118>)
     550:	f000 f830 	bl	5b4 <iprintf>
    unsigned long freq=ROM_SysCtlClockGet();
     554:	4b09      	ldr	r3, [pc, #36]	; (57c <main+0xec>)
     556:	681b      	ldr	r3, [r3, #0]
     558:	3360      	adds	r3, #96	; 0x60
     55a:	681b      	ldr	r3, [r3, #0]
     55c:	4798      	blx	r3
     55e:	6078      	str	r0, [r7, #4]
    // Loop forever echoing data through the UART.
    //
    while(1)
    {

        printf("helloworld.\r\n");
     560:	4811      	ldr	r0, [pc, #68]	; (5a8 <main+0x118>)
     562:	f000 f827 	bl	5b4 <iprintf>
        //SysCtlDelay(2000000);
        //printf("\r\n");
        //printf("freq:%ldHz\r\n\r\n",freq);
        printf("freq:%ldHz\r\n",freq);
     566:	6879      	ldr	r1, [r7, #4]
     568:	4810      	ldr	r0, [pc, #64]	; (5ac <main+0x11c>)
     56a:	f000 f823 	bl	5b4 <iprintf>
        //printf("\r\n");
        //printf("helloworld.\r\n");
        //printf("freq:%dHz\r\n\r\n",100);
        SysCtlDelay(2000000);
     56e:	4810      	ldr	r0, [pc, #64]	; (5b0 <main+0x120>)
     570:	f002 ff3a 	bl	33e8 <SysCtlDelay>
        printf("helloworld.\r\n");
     574:	e7f4      	b.n	560 <main+0xd0>
     576:	bf00      	nop
     578:	01000078 	.word	0x01000078
     57c:	01000044 	.word	0x01000044
     580:	07803d40 	.word	0x07803d40
     584:	20000020 	.word	0x20000020
     588:	01000020 	.word	0x01000020
     58c:	40025000 	.word	0x40025000
     590:	10000001 	.word	0x10000001
     594:	20000001 	.word	0x20000001
     598:	01000048 	.word	0x01000048
     59c:	01000014 	.word	0x01000014
     5a0:	4000c000 	.word	0x4000c000
     5a4:	00003704 	.word	0x00003704
     5a8:	00003718 	.word	0x00003718
     5ac:	00003728 	.word	0x00003728
     5b0:	001e8480 	.word	0x001e8480

000005b4 <iprintf>:
     5b4:	b40f      	push	{r0, r1, r2, r3}
     5b6:	b500      	push	{lr}
     5b8:	4907      	ldr	r1, [pc, #28]	; (5d8 <iprintf+0x24>)
     5ba:	b083      	sub	sp, #12
     5bc:	ab04      	add	r3, sp, #16
     5be:	6808      	ldr	r0, [r1, #0]
     5c0:	f853 2b04 	ldr.w	r2, [r3], #4
     5c4:	6881      	ldr	r1, [r0, #8]
     5c6:	9301      	str	r3, [sp, #4]
     5c8:	f000 f896 	bl	6f8 <_vfiprintf_r>
     5cc:	b003      	add	sp, #12
     5ce:	f85d eb04 	ldr.w	lr, [sp], #4
     5d2:	b004      	add	sp, #16
     5d4:	4770      	bx	lr
     5d6:	bf00      	nop
     5d8:	20000000 	.word	0x20000000

000005dc <memset>:
     5dc:	0783      	lsls	r3, r0, #30
     5de:	b530      	push	{r4, r5, lr}
     5e0:	d048      	beq.n	674 <memset+0x98>
     5e2:	1e54      	subs	r4, r2, #1
     5e4:	2a00      	cmp	r2, #0
     5e6:	d03f      	beq.n	668 <memset+0x8c>
     5e8:	b2ca      	uxtb	r2, r1
     5ea:	4603      	mov	r3, r0
     5ec:	e001      	b.n	5f2 <memset+0x16>
     5ee:	3c01      	subs	r4, #1
     5f0:	d33a      	bcc.n	668 <memset+0x8c>
     5f2:	f803 2b01 	strb.w	r2, [r3], #1
     5f6:	079d      	lsls	r5, r3, #30
     5f8:	d1f9      	bne.n	5ee <memset+0x12>
     5fa:	2c03      	cmp	r4, #3
     5fc:	d92d      	bls.n	65a <memset+0x7e>
     5fe:	b2cd      	uxtb	r5, r1
     600:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
     604:	2c0f      	cmp	r4, #15
     606:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
     60a:	d936      	bls.n	67a <memset+0x9e>
     60c:	f1a4 0210 	sub.w	r2, r4, #16
     610:	f022 0c0f 	bic.w	ip, r2, #15
     614:	f103 0e20 	add.w	lr, r3, #32
     618:	44e6      	add	lr, ip
     61a:	ea4f 1c12 	mov.w	ip, r2, lsr #4
     61e:	f103 0210 	add.w	r2, r3, #16
     622:	e942 5504 	strd	r5, r5, [r2, #-16]
     626:	e942 5502 	strd	r5, r5, [r2, #-8]
     62a:	3210      	adds	r2, #16
     62c:	4572      	cmp	r2, lr
     62e:	d1f8      	bne.n	622 <memset+0x46>
     630:	f10c 0201 	add.w	r2, ip, #1
     634:	f014 0f0c 	tst.w	r4, #12
     638:	eb03 1202 	add.w	r2, r3, r2, lsl #4
     63c:	f004 0c0f 	and.w	ip, r4, #15
     640:	d013      	beq.n	66a <memset+0x8e>
     642:	f1ac 0304 	sub.w	r3, ip, #4
     646:	f023 0303 	bic.w	r3, r3, #3
     64a:	3304      	adds	r3, #4
     64c:	4413      	add	r3, r2
     64e:	f842 5b04 	str.w	r5, [r2], #4
     652:	4293      	cmp	r3, r2
     654:	d1fb      	bne.n	64e <memset+0x72>
     656:	f00c 0403 	and.w	r4, ip, #3
     65a:	b12c      	cbz	r4, 668 <memset+0x8c>
     65c:	b2c9      	uxtb	r1, r1
     65e:	441c      	add	r4, r3
     660:	f803 1b01 	strb.w	r1, [r3], #1
     664:	429c      	cmp	r4, r3
     666:	d1fb      	bne.n	660 <memset+0x84>
     668:	bd30      	pop	{r4, r5, pc}
     66a:	4664      	mov	r4, ip
     66c:	4613      	mov	r3, r2
     66e:	2c00      	cmp	r4, #0
     670:	d1f4      	bne.n	65c <memset+0x80>
     672:	e7f9      	b.n	668 <memset+0x8c>
     674:	4603      	mov	r3, r0
     676:	4614      	mov	r4, r2
     678:	e7bf      	b.n	5fa <memset+0x1e>
     67a:	461a      	mov	r2, r3
     67c:	46a4      	mov	ip, r4
     67e:	e7e0      	b.n	642 <memset+0x66>

00000680 <__sprint_r.part.0>:
     680:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
     684:	6e4b      	ldr	r3, [r1, #100]	; 0x64
     686:	049c      	lsls	r4, r3, #18
     688:	4690      	mov	r8, r2
     68a:	d52d      	bpl.n	6e8 <__sprint_r.part.0+0x68>
     68c:	6893      	ldr	r3, [r2, #8]
     68e:	6812      	ldr	r2, [r2, #0]
     690:	b343      	cbz	r3, 6e4 <__sprint_r.part.0+0x64>
     692:	468b      	mov	fp, r1
     694:	4606      	mov	r6, r0
     696:	f102 0908 	add.w	r9, r2, #8
     69a:	e959 5a02 	ldrd	r5, sl, [r9, #-8]
     69e:	ea5f 079a 	movs.w	r7, sl, lsr #2
     6a2:	d015      	beq.n	6d0 <__sprint_r.part.0+0x50>
     6a4:	3d04      	subs	r5, #4
     6a6:	2400      	movs	r4, #0
     6a8:	e001      	b.n	6ae <__sprint_r.part.0+0x2e>
     6aa:	42a7      	cmp	r7, r4
     6ac:	d00e      	beq.n	6cc <__sprint_r.part.0+0x4c>
     6ae:	f855 1f04 	ldr.w	r1, [r5, #4]!
     6b2:	465a      	mov	r2, fp
     6b4:	4630      	mov	r0, r6
     6b6:	f001 f9e7 	bl	1a88 <_fputwc_r>
     6ba:	1c43      	adds	r3, r0, #1
     6bc:	f104 0401 	add.w	r4, r4, #1
     6c0:	d1f3      	bne.n	6aa <__sprint_r.part.0+0x2a>
     6c2:	2300      	movs	r3, #0
     6c4:	e9c8 3301 	strd	r3, r3, [r8, #4]
     6c8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
     6cc:	f8d8 3008 	ldr.w	r3, [r8, #8]
     6d0:	f02a 0a03 	bic.w	sl, sl, #3
     6d4:	eba3 030a 	sub.w	r3, r3, sl
     6d8:	f8c8 3008 	str.w	r3, [r8, #8]
     6dc:	f109 0908 	add.w	r9, r9, #8
     6e0:	2b00      	cmp	r3, #0
     6e2:	d1da      	bne.n	69a <__sprint_r.part.0+0x1a>
     6e4:	2000      	movs	r0, #0
     6e6:	e7ec      	b.n	6c2 <__sprint_r.part.0+0x42>
     6e8:	f001 fb38 	bl	1d5c <__sfvwrite_r>
     6ec:	2300      	movs	r3, #0
     6ee:	e9c8 3301 	strd	r3, r3, [r8, #4]
     6f2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
     6f6:	bf00      	nop

000006f8 <_vfiprintf_r>:
     6f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
     6fc:	ed2d 8b02 	vpush	{d8}
     700:	b0c5      	sub	sp, #276	; 0x114
     702:	f10d 0a50 	add.w	sl, sp, #80	; 0x50
     706:	4683      	mov	fp, r0
     708:	ee08 1a10 	vmov	s16, r1
     70c:	4616      	mov	r6, r2
     70e:	2100      	movs	r1, #0
     710:	2208      	movs	r2, #8
     712:	4650      	mov	r0, sl
     714:	461c      	mov	r4, r3
     716:	9307      	str	r3, [sp, #28]
     718:	f7ff ff60 	bl	5dc <memset>
     71c:	f1bb 0f00 	cmp.w	fp, #0
     720:	d004      	beq.n	72c <_vfiprintf_r+0x34>
     722:	f8db 3038 	ldr.w	r3, [fp, #56]	; 0x38
     726:	2b00      	cmp	r3, #0
     728:	f000 82a2 	beq.w	c70 <_vfiprintf_r+0x578>
     72c:	ee18 1a10 	vmov	r1, s16
     730:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
     734:	0498      	lsls	r0, r3, #18
     736:	b29a      	uxth	r2, r3
     738:	d407      	bmi.n	74a <_vfiprintf_r+0x52>
     73a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
     73e:	818b      	strh	r3, [r1, #12]
     740:	b29a      	uxth	r2, r3
     742:	6e4b      	ldr	r3, [r1, #100]	; 0x64
     744:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
     748:	664b      	str	r3, [r1, #100]	; 0x64
     74a:	0717      	lsls	r7, r2, #28
     74c:	f140 8105 	bpl.w	95a <_vfiprintf_r+0x262>
     750:	ee18 3a10 	vmov	r3, s16
     754:	691b      	ldr	r3, [r3, #16]
     756:	2b00      	cmp	r3, #0
     758:	f000 80ff 	beq.w	95a <_vfiprintf_r+0x262>
     75c:	f002 021a 	and.w	r2, r2, #26
     760:	2a0a      	cmp	r2, #10
     762:	f000 810a 	beq.w	97a <_vfiprintf_r+0x282>
     766:	2300      	movs	r3, #0
     768:	e9cd 3319 	strd	r3, r3, [sp, #100]	; 0x64
     76c:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
     770:	aa1b      	add	r2, sp, #108	; 0x6c
     772:	930c      	str	r3, [sp, #48]	; 0x30
     774:	9218      	str	r2, [sp, #96]	; 0x60
     776:	4691      	mov	r9, r2
     778:	930b      	str	r3, [sp, #44]	; 0x2c
     77a:	9305      	str	r3, [sp, #20]
     77c:	46b0      	mov	r8, r6
     77e:	4644      	mov	r4, r8
     780:	4ba3      	ldr	r3, [pc, #652]	; (a10 <_vfiprintf_r+0x318>)
     782:	f8d3 50e4 	ldr.w	r5, [r3, #228]	; 0xe4
     786:	f001 fc87 	bl	2098 <__locale_mb_cur_max>
     78a:	4622      	mov	r2, r4
     78c:	4603      	mov	r3, r0
     78e:	a912      	add	r1, sp, #72	; 0x48
     790:	f8cd a000 	str.w	sl, [sp]
     794:	4658      	mov	r0, fp
     796:	47a8      	blx	r5
     798:	2800      	cmp	r0, #0
     79a:	f000 813b 	beq.w	a14 <_vfiprintf_r+0x31c>
     79e:	f2c0 812e 	blt.w	9fe <_vfiprintf_r+0x306>
     7a2:	9a12      	ldr	r2, [sp, #72]	; 0x48
     7a4:	2a25      	cmp	r2, #37	; 0x25
     7a6:	4603      	mov	r3, r0
     7a8:	d001      	beq.n	7ae <_vfiprintf_r+0xb6>
     7aa:	441c      	add	r4, r3
     7ac:	e7e8      	b.n	780 <_vfiprintf_r+0x88>
     7ae:	ebb4 0608 	subs.w	r6, r4, r8
     7b2:	4605      	mov	r5, r0
     7b4:	f040 8132 	bne.w	a1c <_vfiprintf_r+0x324>
     7b8:	2300      	movs	r3, #0
     7ba:	7861      	ldrb	r1, [r4, #1]
     7bc:	f88d 3043 	strb.w	r3, [sp, #67]	; 0x43
     7c0:	f104 0801 	add.w	r8, r4, #1
     7c4:	9306      	str	r3, [sp, #24]
     7c6:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
     7ca:	461e      	mov	r6, r3
     7cc:	242b      	movs	r4, #43	; 0x2b
     7ce:	f108 0801 	add.w	r8, r8, #1
     7d2:	f1a1 0320 	sub.w	r3, r1, #32
     7d6:	2b5a      	cmp	r3, #90	; 0x5a
     7d8:	f200 8150 	bhi.w	a7c <_vfiprintf_r+0x384>
     7dc:	e8df f013 	tbh	[pc, r3, lsl #1]
     7e0:	014e02ef 	.word	0x014e02ef
     7e4:	02ea014e 	.word	0x02ea014e
     7e8:	014e014e 	.word	0x014e014e
     7ec:	006a014e 	.word	0x006a014e
     7f0:	014e014e 	.word	0x014e014e
     7f4:	02c20285 	.word	0x02c20285
     7f8:	0290014e 	.word	0x0290014e
     7fc:	014e02ff 	.word	0x014e02ff
     800:	005b02fa 	.word	0x005b02fa
     804:	005b005b 	.word	0x005b005b
     808:	005b005b 	.word	0x005b005b
     80c:	005b005b 	.word	0x005b005b
     810:	005b005b 	.word	0x005b005b
     814:	014e014e 	.word	0x014e014e
     818:	014e014e 	.word	0x014e014e
     81c:	014e014e 	.word	0x014e014e
     820:	014e014e 	.word	0x014e014e
     824:	0227014e 	.word	0x0227014e
     828:	014e0084 	.word	0x014e0084
     82c:	014e014e 	.word	0x014e014e
     830:	014e014e 	.word	0x014e014e
     834:	014e014e 	.word	0x014e014e
     838:	014e014e 	.word	0x014e014e
     83c:	00dd014e 	.word	0x00dd014e
     840:	014e014e 	.word	0x014e014e
     844:	01fe014e 	.word	0x01fe014e
     848:	02af014e 	.word	0x02af014e
     84c:	014e014e 	.word	0x014e014e
     850:	014e055d 	.word	0x014e055d
     854:	014e014e 	.word	0x014e014e
     858:	014e014e 	.word	0x014e014e
     85c:	014e014e 	.word	0x014e014e
     860:	014e014e 	.word	0x014e014e
     864:	0227014e 	.word	0x0227014e
     868:	014e0086 	.word	0x014e0086
     86c:	014e014e 	.word	0x014e014e
     870:	008602a2 	.word	0x008602a2
     874:	014e007f 	.word	0x014e007f
     878:	014e0295 	.word	0x014e0295
     87c:	00df02d7 	.word	0x00df02d7
     880:	007f02c7 	.word	0x007f02c7
     884:	01fe014e 	.word	0x01fe014e
     888:	053b007c 	.word	0x053b007c
     88c:	014e014e 	.word	0x014e014e
     890:	014e053d 	.word	0x014e053d
     894:	007c      	.short	0x007c
     896:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
     89a:	2200      	movs	r2, #0
     89c:	f818 1b01 	ldrb.w	r1, [r8], #1
     8a0:	eb02 0282 	add.w	r2, r2, r2, lsl #2
     8a4:	eb03 0242 	add.w	r2, r3, r2, lsl #1
     8a8:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
     8ac:	2b09      	cmp	r3, #9
     8ae:	d9f5      	bls.n	89c <_vfiprintf_r+0x1a4>
     8b0:	9206      	str	r2, [sp, #24]
     8b2:	e78e      	b.n	7d2 <_vfiprintf_r+0xda>
     8b4:	4658      	mov	r0, fp
     8b6:	f001 fbf5 	bl	20a4 <_localeconv_r>
     8ba:	6843      	ldr	r3, [r0, #4]
     8bc:	930d      	str	r3, [sp, #52]	; 0x34
     8be:	4618      	mov	r0, r3
     8c0:	f002 fade 	bl	2e80 <strlen>
     8c4:	900e      	str	r0, [sp, #56]	; 0x38
     8c6:	4605      	mov	r5, r0
     8c8:	4658      	mov	r0, fp
     8ca:	f001 fbeb 	bl	20a4 <_localeconv_r>
     8ce:	6883      	ldr	r3, [r0, #8]
     8d0:	930b      	str	r3, [sp, #44]	; 0x2c
     8d2:	2d00      	cmp	r5, #0
     8d4:	f040 84a8 	bne.w	1228 <_vfiprintf_r+0xb30>
     8d8:	f898 1000 	ldrb.w	r1, [r8]
     8dc:	e777      	b.n	7ce <_vfiprintf_r+0xd6>
     8de:	f898 1000 	ldrb.w	r1, [r8]
     8e2:	f046 0620 	orr.w	r6, r6, #32
     8e6:	e772      	b.n	7ce <_vfiprintf_r+0xd6>
     8e8:	f046 0610 	orr.w	r6, r6, #16
     8ec:	06b4      	lsls	r4, r6, #26
     8ee:	f140 815d 	bpl.w	bac <_vfiprintf_r+0x4b4>
     8f2:	9b07      	ldr	r3, [sp, #28]
     8f4:	3307      	adds	r3, #7
     8f6:	f023 0307 	bic.w	r3, r3, #7
     8fa:	461a      	mov	r2, r3
     8fc:	6859      	ldr	r1, [r3, #4]
     8fe:	f852 3b08 	ldr.w	r3, [r2], #8
     902:	9207      	str	r2, [sp, #28]
     904:	460a      	mov	r2, r1
     906:	2900      	cmp	r1, #0
     908:	f2c0 81c9 	blt.w	c9e <_vfiprintf_r+0x5a6>
     90c:	1c79      	adds	r1, r7, #1
     90e:	f000 8573 	beq.w	13f8 <_vfiprintf_r+0xd00>
     912:	f026 0180 	bic.w	r1, r6, #128	; 0x80
     916:	9103      	str	r1, [sp, #12]
     918:	ea53 0102 	orrs.w	r1, r3, r2
     91c:	f000 842d 	beq.w	117a <_vfiprintf_r+0xa82>
     920:	2b0a      	cmp	r3, #10
     922:	f172 0100 	sbcs.w	r1, r2, #0
     926:	f080 8512 	bcs.w	134e <_vfiprintf_r+0xc56>
     92a:	3330      	adds	r3, #48	; 0x30
     92c:	f88d 310f 	strb.w	r3, [sp, #271]	; 0x10f
     930:	9e03      	ldr	r6, [sp, #12]
     932:	2301      	movs	r3, #1
     934:	9304      	str	r3, [sp, #16]
     936:	f20d 140f 	addw	r4, sp, #271	; 0x10f
     93a:	9b04      	ldr	r3, [sp, #16]
     93c:	42bb      	cmp	r3, r7
     93e:	bfb8      	it	lt
     940:	463b      	movlt	r3, r7
     942:	9303      	str	r3, [sp, #12]
     944:	2300      	movs	r3, #0
     946:	9308      	str	r3, [sp, #32]
     948:	f89d 3043 	ldrb.w	r3, [sp, #67]	; 0x43
     94c:	2b00      	cmp	r3, #0
     94e:	f000 80a3 	beq.w	a98 <_vfiprintf_r+0x3a0>
     952:	9b03      	ldr	r3, [sp, #12]
     954:	3301      	adds	r3, #1
     956:	9303      	str	r3, [sp, #12]
     958:	e09e      	b.n	a98 <_vfiprintf_r+0x3a0>
     95a:	ee18 1a10 	vmov	r1, s16
     95e:	4658      	mov	r0, fp
     960:	f000 feaa 	bl	16b8 <__swsetup_r>
     964:	2800      	cmp	r0, #0
     966:	f040 8615 	bne.w	1594 <_vfiprintf_r+0xe9c>
     96a:	ee18 3a10 	vmov	r3, s16
     96e:	899a      	ldrh	r2, [r3, #12]
     970:	f002 021a 	and.w	r2, r2, #26
     974:	2a0a      	cmp	r2, #10
     976:	f47f aef6 	bne.w	766 <_vfiprintf_r+0x6e>
     97a:	ee18 3a10 	vmov	r3, s16
     97e:	f9b3 300e 	ldrsh.w	r3, [r3, #14]
     982:	2b00      	cmp	r3, #0
     984:	f6ff aeef 	blt.w	766 <_vfiprintf_r+0x6e>
     988:	ee18 1a10 	vmov	r1, s16
     98c:	4623      	mov	r3, r4
     98e:	4632      	mov	r2, r6
     990:	4658      	mov	r0, fp
     992:	f000 fe29 	bl	15e8 <__sbprintf>
     996:	9005      	str	r0, [sp, #20]
     998:	e067      	b.n	a6a <_vfiprintf_r+0x372>
     99a:	f046 0610 	orr.w	r6, r6, #16
     99e:	f016 0220 	ands.w	r2, r6, #32
     9a2:	f000 810e 	beq.w	bc2 <_vfiprintf_r+0x4ca>
     9a6:	9b07      	ldr	r3, [sp, #28]
     9a8:	3307      	adds	r3, #7
     9aa:	f023 0307 	bic.w	r3, r3, #7
     9ae:	4619      	mov	r1, r3
     9b0:	685a      	ldr	r2, [r3, #4]
     9b2:	f851 3b08 	ldr.w	r3, [r1], #8
     9b6:	9107      	str	r1, [sp, #28]
     9b8:	f426 6180 	bic.w	r1, r6, #1024	; 0x400
     9bc:	9103      	str	r1, [sp, #12]
     9be:	2100      	movs	r1, #0
     9c0:	2000      	movs	r0, #0
     9c2:	f88d 0043 	strb.w	r0, [sp, #67]	; 0x43
     9c6:	1c78      	adds	r0, r7, #1
     9c8:	f000 8176 	beq.w	cb8 <_vfiprintf_r+0x5c0>
     9cc:	9803      	ldr	r0, [sp, #12]
     9ce:	f020 0680 	bic.w	r6, r0, #128	; 0x80
     9d2:	ea53 0002 	orrs.w	r0, r3, r2
     9d6:	f040 8315 	bne.w	1004 <_vfiprintf_r+0x90c>
     9da:	2f00      	cmp	r7, #0
     9dc:	f040 850f 	bne.w	13fe <_vfiprintf_r+0xd06>
     9e0:	2900      	cmp	r1, #0
     9e2:	f040 83ce 	bne.w	1182 <_vfiprintf_r+0xa8a>
     9e6:	9b03      	ldr	r3, [sp, #12]
     9e8:	f013 0301 	ands.w	r3, r3, #1
     9ec:	9304      	str	r3, [sp, #16]
     9ee:	f000 8401 	beq.w	11f4 <_vfiprintf_r+0xafc>
     9f2:	2330      	movs	r3, #48	; 0x30
     9f4:	f88d 310f 	strb.w	r3, [sp, #271]	; 0x10f
     9f8:	f20d 140f 	addw	r4, sp, #271	; 0x10f
     9fc:	e79d      	b.n	93a <_vfiprintf_r+0x242>
     9fe:	2208      	movs	r2, #8
     a00:	2100      	movs	r1, #0
     a02:	4650      	mov	r0, sl
     a04:	f7ff fdea 	bl	5dc <memset>
     a08:	2301      	movs	r3, #1
     a0a:	441c      	add	r4, r3
     a0c:	e6b8      	b.n	780 <_vfiprintf_r+0x88>
     a0e:	bf00      	nop
     a10:	20000430 	.word	0x20000430
     a14:	ebb4 0608 	subs.w	r6, r4, r8
     a18:	4605      	mov	r5, r0
     a1a:	d01b      	beq.n	a54 <_vfiprintf_r+0x35c>
     a1c:	9b19      	ldr	r3, [sp, #100]	; 0x64
     a1e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
     a20:	3301      	adds	r3, #1
     a22:	4432      	add	r2, r6
     a24:	2b07      	cmp	r3, #7
     a26:	e9c9 8600 	strd	r8, r6, [r9]
     a2a:	921a      	str	r2, [sp, #104]	; 0x68
     a2c:	9319      	str	r3, [sp, #100]	; 0x64
     a2e:	dd22      	ble.n	a76 <_vfiprintf_r+0x37e>
     a30:	2a00      	cmp	r2, #0
     a32:	f000 839e 	beq.w	1172 <_vfiprintf_r+0xa7a>
     a36:	ee18 1a10 	vmov	r1, s16
     a3a:	aa18      	add	r2, sp, #96	; 0x60
     a3c:	4658      	mov	r0, fp
     a3e:	f7ff fe1f 	bl	680 <__sprint_r.part.0>
     a42:	b958      	cbnz	r0, a5c <_vfiprintf_r+0x364>
     a44:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
     a48:	9b05      	ldr	r3, [sp, #20]
     a4a:	4433      	add	r3, r6
     a4c:	9305      	str	r3, [sp, #20]
     a4e:	2d00      	cmp	r5, #0
     a50:	f47f aeb2 	bne.w	7b8 <_vfiprintf_r+0xc0>
     a54:	9b1a      	ldr	r3, [sp, #104]	; 0x68
     a56:	2b00      	cmp	r3, #0
     a58:	f040 8571 	bne.w	153e <_vfiprintf_r+0xe46>
     a5c:	ee18 3a10 	vmov	r3, s16
     a60:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
     a64:	0658      	lsls	r0, r3, #25
     a66:	f100 8595 	bmi.w	1594 <_vfiprintf_r+0xe9c>
     a6a:	9805      	ldr	r0, [sp, #20]
     a6c:	b045      	add	sp, #276	; 0x114
     a6e:	ecbd 8b02 	vpop	{d8}
     a72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
     a76:	f109 0908 	add.w	r9, r9, #8
     a7a:	e7e5      	b.n	a48 <_vfiprintf_r+0x350>
     a7c:	2900      	cmp	r1, #0
     a7e:	d0e9      	beq.n	a54 <_vfiprintf_r+0x35c>
     a80:	2300      	movs	r3, #0
     a82:	f88d 3043 	strb.w	r3, [sp, #67]	; 0x43
     a86:	2301      	movs	r3, #1
     a88:	e9cd 3303 	strd	r3, r3, [sp, #12]
     a8c:	f88d 10ac 	strb.w	r1, [sp, #172]	; 0xac
     a90:	ac2b      	add	r4, sp, #172	; 0xac
     a92:	2300      	movs	r3, #0
     a94:	9308      	str	r3, [sp, #32]
     a96:	461f      	mov	r7, r3
     a98:	f016 0302 	ands.w	r3, r6, #2
     a9c:	9309      	str	r3, [sp, #36]	; 0x24
     a9e:	d002      	beq.n	aa6 <_vfiprintf_r+0x3ae>
     aa0:	9b03      	ldr	r3, [sp, #12]
     aa2:	3302      	adds	r3, #2
     aa4:	9303      	str	r3, [sp, #12]
     aa6:	f016 0384 	ands.w	r3, r6, #132	; 0x84
     aaa:	930a      	str	r3, [sp, #40]	; 0x28
     aac:	d105      	bne.n	aba <_vfiprintf_r+0x3c2>
     aae:	9b06      	ldr	r3, [sp, #24]
     ab0:	9a03      	ldr	r2, [sp, #12]
     ab2:	1a9d      	subs	r5, r3, r2
     ab4:	2d00      	cmp	r5, #0
     ab6:	f300 82a7 	bgt.w	1008 <_vfiprintf_r+0x910>
     aba:	e9dd 2319 	ldrd	r2, r3, [sp, #100]	; 0x64
     abe:	1c50      	adds	r0, r2, #1
     ac0:	f89d 1043 	ldrb.w	r1, [sp, #67]	; 0x43
     ac4:	b181      	cbz	r1, ae8 <_vfiprintf_r+0x3f0>
     ac6:	2201      	movs	r2, #1
     ac8:	3301      	adds	r3, #1
     aca:	f8c9 2004 	str.w	r2, [r9, #4]
     ace:	2807      	cmp	r0, #7
     ad0:	f10d 0243 	add.w	r2, sp, #67	; 0x43
     ad4:	e9cd 0319 	strd	r0, r3, [sp, #100]	; 0x64
     ad8:	f8c9 2000 	str.w	r2, [r9]
     adc:	f300 8275 	bgt.w	fca <_vfiprintf_r+0x8d2>
     ae0:	4602      	mov	r2, r0
     ae2:	f109 0908 	add.w	r9, r9, #8
     ae6:	3001      	adds	r0, #1
     ae8:	9909      	ldr	r1, [sp, #36]	; 0x24
     aea:	b1e9      	cbz	r1, b28 <_vfiprintf_r+0x430>
     aec:	aa11      	add	r2, sp, #68	; 0x44
     aee:	3302      	adds	r3, #2
     af0:	f8c9 2000 	str.w	r2, [r9]
     af4:	2807      	cmp	r0, #7
     af6:	f04f 0202 	mov.w	r2, #2
     afa:	e9cd 0319 	strd	r0, r3, [sp, #100]	; 0x64
     afe:	f8c9 2004 	str.w	r2, [r9, #4]
     b02:	f340 827a 	ble.w	ffa <_vfiprintf_r+0x902>
     b06:	2b00      	cmp	r3, #0
     b08:	f000 8351 	beq.w	11ae <_vfiprintf_r+0xab6>
     b0c:	ee18 1a10 	vmov	r1, s16
     b10:	aa18      	add	r2, sp, #96	; 0x60
     b12:	4658      	mov	r0, fp
     b14:	f7ff fdb4 	bl	680 <__sprint_r.part.0>
     b18:	2800      	cmp	r0, #0
     b1a:	f040 8247 	bne.w	fac <_vfiprintf_r+0x8b4>
     b1e:	e9dd 2319 	ldrd	r2, r3, [sp, #100]	; 0x64
     b22:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
     b26:	1c50      	adds	r0, r2, #1
     b28:	990a      	ldr	r1, [sp, #40]	; 0x28
     b2a:	2980      	cmp	r1, #128	; 0x80
     b2c:	f000 819c 	beq.w	e68 <_vfiprintf_r+0x770>
     b30:	9904      	ldr	r1, [sp, #16]
     b32:	1a7d      	subs	r5, r7, r1
     b34:	2d00      	cmp	r5, #0
     b36:	f300 81ee 	bgt.w	f16 <_vfiprintf_r+0x81e>
     b3a:	9a04      	ldr	r2, [sp, #16]
     b3c:	f8c9 4000 	str.w	r4, [r9]
     b40:	4413      	add	r3, r2
     b42:	2807      	cmp	r0, #7
     b44:	e9cd 0319 	strd	r0, r3, [sp, #100]	; 0x64
     b48:	f8c9 2004 	str.w	r2, [r9, #4]
     b4c:	f340 8186 	ble.w	e5c <_vfiprintf_r+0x764>
     b50:	2b00      	cmp	r3, #0
     b52:	f000 82a3 	beq.w	109c <_vfiprintf_r+0x9a4>
     b56:	ee18 1a10 	vmov	r1, s16
     b5a:	aa18      	add	r2, sp, #96	; 0x60
     b5c:	4658      	mov	r0, fp
     b5e:	f7ff fd8f 	bl	680 <__sprint_r.part.0>
     b62:	2800      	cmp	r0, #0
     b64:	f040 8222 	bne.w	fac <_vfiprintf_r+0x8b4>
     b68:	9b1a      	ldr	r3, [sp, #104]	; 0x68
     b6a:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
     b6e:	0774      	lsls	r4, r6, #29
     b70:	d505      	bpl.n	b7e <_vfiprintf_r+0x486>
     b72:	9a06      	ldr	r2, [sp, #24]
     b74:	9903      	ldr	r1, [sp, #12]
     b76:	1a54      	subs	r4, r2, r1
     b78:	2c00      	cmp	r4, #0
     b7a:	f300 8299 	bgt.w	10b0 <_vfiprintf_r+0x9b8>
     b7e:	e9dd 2105 	ldrd	r2, r1, [sp, #20]
     b82:	9803      	ldr	r0, [sp, #12]
     b84:	4281      	cmp	r1, r0
     b86:	bfac      	ite	ge
     b88:	1852      	addge	r2, r2, r1
     b8a:	1812      	addlt	r2, r2, r0
     b8c:	9205      	str	r2, [sp, #20]
     b8e:	2b00      	cmp	r3, #0
     b90:	f040 8203 	bne.w	f9a <_vfiprintf_r+0x8a2>
     b94:	9908      	ldr	r1, [sp, #32]
     b96:	2300      	movs	r3, #0
     b98:	9319      	str	r3, [sp, #100]	; 0x64
     b9a:	2900      	cmp	r1, #0
     b9c:	f000 8161 	beq.w	e62 <_vfiprintf_r+0x76a>
     ba0:	4658      	mov	r0, fp
     ba2:	f000 ffd5 	bl	1b50 <_free_r>
     ba6:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
     baa:	e5e8      	b.n	77e <_vfiprintf_r+0x86>
     bac:	06f0      	lsls	r0, r6, #27
     bae:	9a07      	ldr	r2, [sp, #28]
     bb0:	d46d      	bmi.n	c8e <_vfiprintf_r+0x596>
     bb2:	0671      	lsls	r1, r6, #25
     bb4:	d568      	bpl.n	c88 <_vfiprintf_r+0x590>
     bb6:	f932 3b04 	ldrsh.w	r3, [r2], #4
     bba:	9207      	str	r2, [sp, #28]
     bbc:	17da      	asrs	r2, r3, #31
     bbe:	4611      	mov	r1, r2
     bc0:	e6a1      	b.n	906 <_vfiprintf_r+0x20e>
     bc2:	f016 0310 	ands.w	r3, r6, #16
     bc6:	9907      	ldr	r1, [sp, #28]
     bc8:	d15a      	bne.n	c80 <_vfiprintf_r+0x588>
     bca:	f016 0040 	ands.w	r0, r6, #64	; 0x40
     bce:	d053      	beq.n	c78 <_vfiprintf_r+0x580>
     bd0:	461a      	mov	r2, r3
     bd2:	f851 3b04 	ldr.w	r3, [r1], #4
     bd6:	9107      	str	r1, [sp, #28]
     bd8:	b29b      	uxth	r3, r3
     bda:	e6ed      	b.n	9b8 <_vfiprintf_r+0x2c0>
     bdc:	9b07      	ldr	r3, [sp, #28]
     bde:	461a      	mov	r2, r3
     be0:	2300      	movs	r3, #0
     be2:	f88d 3043 	strb.w	r3, [sp, #67]	; 0x43
     be6:	4613      	mov	r3, r2
     be8:	f853 4b04 	ldr.w	r4, [r3], #4
     bec:	9303      	str	r3, [sp, #12]
     bee:	2c00      	cmp	r4, #0
     bf0:	f000 8413 	beq.w	141a <_vfiprintf_r+0xd22>
     bf4:	2953      	cmp	r1, #83	; 0x53
     bf6:	f000 836c 	beq.w	12d2 <_vfiprintf_r+0xbda>
     bfa:	f016 0510 	ands.w	r5, r6, #16
     bfe:	f040 8368 	bne.w	12d2 <_vfiprintf_r+0xbda>
     c02:	1c7b      	adds	r3, r7, #1
     c04:	f000 84b6 	beq.w	1574 <_vfiprintf_r+0xe7c>
     c08:	463a      	mov	r2, r7
     c0a:	4629      	mov	r1, r5
     c0c:	4620      	mov	r0, r4
     c0e:	f001 fd87 	bl	2720 <memchr>
     c12:	9008      	str	r0, [sp, #32]
     c14:	2800      	cmp	r0, #0
     c16:	f000 84a2 	beq.w	155e <_vfiprintf_r+0xe66>
     c1a:	1b03      	subs	r3, r0, r4
     c1c:	9a03      	ldr	r2, [sp, #12]
     c1e:	9304      	str	r3, [sp, #16]
     c20:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
     c24:	462f      	mov	r7, r5
     c26:	9207      	str	r2, [sp, #28]
     c28:	9303      	str	r3, [sp, #12]
     c2a:	9508      	str	r5, [sp, #32]
     c2c:	e68c      	b.n	948 <_vfiprintf_r+0x250>
     c2e:	2943      	cmp	r1, #67	; 0x43
     c30:	d002      	beq.n	c38 <_vfiprintf_r+0x540>
     c32:	06f5      	lsls	r5, r6, #27
     c34:	f140 8334 	bpl.w	12a0 <_vfiprintf_r+0xba8>
     c38:	9d07      	ldr	r5, [sp, #28]
     c3a:	2208      	movs	r2, #8
     c3c:	2100      	movs	r1, #0
     c3e:	a816      	add	r0, sp, #88	; 0x58
     c40:	ac2b      	add	r4, sp, #172	; 0xac
     c42:	f7ff fccb 	bl	5dc <memset>
     c46:	ab16      	add	r3, sp, #88	; 0x58
     c48:	f855 2b04 	ldr.w	r2, [r5], #4
     c4c:	4621      	mov	r1, r4
     c4e:	4658      	mov	r0, fp
     c50:	f000 fd00 	bl	1654 <_wcrtomb_r>
     c54:	4603      	mov	r3, r0
     c56:	3301      	adds	r3, #1
     c58:	9004      	str	r0, [sp, #16]
     c5a:	f000 84a2 	beq.w	15a2 <_vfiprintf_r+0xeaa>
     c5e:	9b04      	ldr	r3, [sp, #16]
     c60:	9507      	str	r5, [sp, #28]
     c62:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
     c66:	9303      	str	r3, [sp, #12]
     c68:	2300      	movs	r3, #0
     c6a:	f88d 3043 	strb.w	r3, [sp, #67]	; 0x43
     c6e:	e710      	b.n	a92 <_vfiprintf_r+0x39a>
     c70:	4658      	mov	r0, fp
     c72:	f000 feab 	bl	19cc <__sinit>
     c76:	e559      	b.n	72c <_vfiprintf_r+0x34>
     c78:	f416 7200 	ands.w	r2, r6, #512	; 0x200
     c7c:	f040 8438 	bne.w	14f0 <_vfiprintf_r+0xdf8>
     c80:	f851 3b04 	ldr.w	r3, [r1], #4
     c84:	9107      	str	r1, [sp, #28]
     c86:	e697      	b.n	9b8 <_vfiprintf_r+0x2c0>
     c88:	05b3      	lsls	r3, r6, #22
     c8a:	f100 8438 	bmi.w	14fe <_vfiprintf_r+0xe06>
     c8e:	f852 3b04 	ldr.w	r3, [r2], #4
     c92:	9207      	str	r2, [sp, #28]
     c94:	17da      	asrs	r2, r3, #31
     c96:	4611      	mov	r1, r2
     c98:	2900      	cmp	r1, #0
     c9a:	f6bf ae37 	bge.w	90c <_vfiprintf_r+0x214>
     c9e:	425b      	negs	r3, r3
     ca0:	f04f 002d 	mov.w	r0, #45	; 0x2d
     ca4:	eb62 0242 	sbc.w	r2, r2, r2, lsl #1
     ca8:	f88d 0043 	strb.w	r0, [sp, #67]	; 0x43
     cac:	1c78      	adds	r0, r7, #1
     cae:	9603      	str	r6, [sp, #12]
     cb0:	f04f 0101 	mov.w	r1, #1
     cb4:	f47f ae8a 	bne.w	9cc <_vfiprintf_r+0x2d4>
     cb8:	2901      	cmp	r1, #1
     cba:	f43f ae31 	beq.w	920 <_vfiprintf_r+0x228>
     cbe:	2902      	cmp	r1, #2
     cc0:	ac44      	add	r4, sp, #272	; 0x110
     cc2:	f040 80a5 	bne.w	e10 <_vfiprintf_r+0x718>
     cc6:	980c      	ldr	r0, [sp, #48]	; 0x30
     cc8:	f003 010f 	and.w	r1, r3, #15
     ccc:	091b      	lsrs	r3, r3, #4
     cce:	5c41      	ldrb	r1, [r0, r1]
     cd0:	f804 1d01 	strb.w	r1, [r4, #-1]!
     cd4:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
     cd8:	0912      	lsrs	r2, r2, #4
     cda:	ea53 0102 	orrs.w	r1, r3, r2
     cde:	d1f3      	bne.n	cc8 <_vfiprintf_r+0x5d0>
     ce0:	9e03      	ldr	r6, [sp, #12]
     ce2:	ab44      	add	r3, sp, #272	; 0x110
     ce4:	1b1b      	subs	r3, r3, r4
     ce6:	9304      	str	r3, [sp, #16]
     ce8:	e627      	b.n	93a <_vfiprintf_r+0x242>
     cea:	9b07      	ldr	r3, [sp, #28]
     cec:	f853 2b04 	ldr.w	r2, [r3], #4
     cf0:	9206      	str	r2, [sp, #24]
     cf2:	2a00      	cmp	r2, #0
     cf4:	f280 8279 	bge.w	11ea <_vfiprintf_r+0xaf2>
     cf8:	9a06      	ldr	r2, [sp, #24]
     cfa:	4252      	negs	r2, r2
     cfc:	e9cd 2306 	strd	r2, r3, [sp, #24]
     d00:	f898 1000 	ldrb.w	r1, [r8]
     d04:	f046 0604 	orr.w	r6, r6, #4
     d08:	e561      	b.n	7ce <_vfiprintf_r+0xd6>
     d0a:	f898 1000 	ldrb.w	r1, [r8]
     d0e:	296c      	cmp	r1, #108	; 0x6c
     d10:	bf03      	ittte	eq
     d12:	f898 1001 	ldrbeq.w	r1, [r8, #1]
     d16:	f046 0620 	orreq.w	r6, r6, #32
     d1a:	f108 0801 	addeq.w	r8, r8, #1
     d1e:	f046 0610 	orrne.w	r6, r6, #16
     d22:	e554      	b.n	7ce <_vfiprintf_r+0xd6>
     d24:	f898 1000 	ldrb.w	r1, [r8]
     d28:	2968      	cmp	r1, #104	; 0x68
     d2a:	bf03      	ittte	eq
     d2c:	f898 1001 	ldrbeq.w	r1, [r8, #1]
     d30:	f446 7600 	orreq.w	r6, r6, #512	; 0x200
     d34:	f108 0801 	addeq.w	r8, r8, #1
     d38:	f046 0640 	orrne.w	r6, r6, #64	; 0x40
     d3c:	e547      	b.n	7ce <_vfiprintf_r+0xd6>
     d3e:	f046 0310 	orr.w	r3, r6, #16
     d42:	9303      	str	r3, [sp, #12]
     d44:	9b03      	ldr	r3, [sp, #12]
     d46:	f013 0220 	ands.w	r2, r3, #32
     d4a:	f000 821f 	beq.w	118c <_vfiprintf_r+0xa94>
     d4e:	9b07      	ldr	r3, [sp, #28]
     d50:	3307      	adds	r3, #7
     d52:	f023 0307 	bic.w	r3, r3, #7
     d56:	4619      	mov	r1, r3
     d58:	685a      	ldr	r2, [r3, #4]
     d5a:	f851 3b08 	ldr.w	r3, [r1], #8
     d5e:	9107      	str	r1, [sp, #28]
     d60:	2101      	movs	r1, #1
     d62:	e62d      	b.n	9c0 <_vfiprintf_r+0x2c8>
     d64:	f898 1000 	ldrb.w	r1, [r8]
     d68:	f88d 4043 	strb.w	r4, [sp, #67]	; 0x43
     d6c:	e52f      	b.n	7ce <_vfiprintf_r+0xd6>
     d6e:	9a07      	ldr	r2, [sp, #28]
     d70:	f046 0302 	orr.w	r3, r6, #2
     d74:	9303      	str	r3, [sp, #12]
     d76:	f852 3b04 	ldr.w	r3, [r2], #4
     d7a:	9207      	str	r2, [sp, #28]
     d7c:	f647 0230 	movw	r2, #30768	; 0x7830
     d80:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
     d84:	4aa5      	ldr	r2, [pc, #660]	; (101c <_vfiprintf_r+0x924>)
     d86:	920c      	str	r2, [sp, #48]	; 0x30
     d88:	2102      	movs	r1, #2
     d8a:	2200      	movs	r2, #0
     d8c:	e618      	b.n	9c0 <_vfiprintf_r+0x2c8>
     d8e:	06b7      	lsls	r7, r6, #26
     d90:	f100 8240 	bmi.w	1214 <_vfiprintf_r+0xb1c>
     d94:	06f5      	lsls	r5, r6, #27
     d96:	f100 8338 	bmi.w	140a <_vfiprintf_r+0xd12>
     d9a:	0674      	lsls	r4, r6, #25
     d9c:	f100 83c7 	bmi.w	152e <_vfiprintf_r+0xe36>
     da0:	05b0      	lsls	r0, r6, #22
     da2:	f140 8332 	bpl.w	140a <_vfiprintf_r+0xd12>
     da6:	9b07      	ldr	r3, [sp, #28]
     da8:	9905      	ldr	r1, [sp, #20]
     daa:	f853 2b04 	ldr.w	r2, [r3], #4
     dae:	9307      	str	r3, [sp, #28]
     db0:	7011      	strb	r1, [r2, #0]
     db2:	e4e4      	b.n	77e <_vfiprintf_r+0x86>
     db4:	f898 1000 	ldrb.w	r1, [r8]
     db8:	f046 0601 	orr.w	r6, r6, #1
     dbc:	e507      	b.n	7ce <_vfiprintf_r+0xd6>
     dbe:	f89d 3043 	ldrb.w	r3, [sp, #67]	; 0x43
     dc2:	2b00      	cmp	r3, #0
     dc4:	f47f ad88 	bne.w	8d8 <_vfiprintf_r+0x1e0>
     dc8:	2320      	movs	r3, #32
     dca:	f898 1000 	ldrb.w	r1, [r8]
     dce:	f88d 3043 	strb.w	r3, [sp, #67]	; 0x43
     dd2:	e4fc      	b.n	7ce <_vfiprintf_r+0xd6>
     dd4:	f898 1000 	ldrb.w	r1, [r8]
     dd8:	f046 0680 	orr.w	r6, r6, #128	; 0x80
     ddc:	e4f7      	b.n	7ce <_vfiprintf_r+0xd6>
     dde:	4642      	mov	r2, r8
     de0:	f812 1b01 	ldrb.w	r1, [r2], #1
     de4:	292a      	cmp	r1, #42	; 0x2a
     de6:	f000 83e8 	beq.w	15ba <_vfiprintf_r+0xec2>
     dea:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
     dee:	2b09      	cmp	r3, #9
     df0:	4690      	mov	r8, r2
     df2:	f04f 0700 	mov.w	r7, #0
     df6:	f63f acec 	bhi.w	7d2 <_vfiprintf_r+0xda>
     dfa:	f818 1b01 	ldrb.w	r1, [r8], #1
     dfe:	eb07 0787 	add.w	r7, r7, r7, lsl #2
     e02:	eb03 0747 	add.w	r7, r3, r7, lsl #1
     e06:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
     e0a:	2b09      	cmp	r3, #9
     e0c:	d9f5      	bls.n	dfa <_vfiprintf_r+0x702>
     e0e:	e4e0      	b.n	7d2 <_vfiprintf_r+0xda>
     e10:	f003 0107 	and.w	r1, r3, #7
     e14:	08db      	lsrs	r3, r3, #3
     e16:	ea43 7342 	orr.w	r3, r3, r2, lsl #29
     e1a:	08d2      	lsrs	r2, r2, #3
     e1c:	3130      	adds	r1, #48	; 0x30
     e1e:	ea53 0502 	orrs.w	r5, r3, r2
     e22:	4620      	mov	r0, r4
     e24:	f804 1d01 	strb.w	r1, [r4, #-1]!
     e28:	d1f2      	bne.n	e10 <_vfiprintf_r+0x718>
     e2a:	9e03      	ldr	r6, [sp, #12]
     e2c:	07f3      	lsls	r3, r6, #31
     e2e:	f57f af58 	bpl.w	ce2 <_vfiprintf_r+0x5ea>
     e32:	2930      	cmp	r1, #48	; 0x30
     e34:	f43f af54 	beq.w	ce0 <_vfiprintf_r+0x5e8>
     e38:	2330      	movs	r3, #48	; 0x30
     e3a:	3802      	subs	r0, #2
     e3c:	f804 3c01 	strb.w	r3, [r4, #-1]
     e40:	ab44      	add	r3, sp, #272	; 0x110
     e42:	1a1b      	subs	r3, r3, r0
     e44:	9e03      	ldr	r6, [sp, #12]
     e46:	9304      	str	r3, [sp, #16]
     e48:	4604      	mov	r4, r0
     e4a:	e576      	b.n	93a <_vfiprintf_r+0x242>
     e4c:	9b04      	ldr	r3, [sp, #16]
     e4e:	941b      	str	r4, [sp, #108]	; 0x6c
     e50:	2201      	movs	r2, #1
     e52:	931c      	str	r3, [sp, #112]	; 0x70
     e54:	931a      	str	r3, [sp, #104]	; 0x68
     e56:	9219      	str	r2, [sp, #100]	; 0x64
     e58:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
     e5c:	f109 0908 	add.w	r9, r9, #8
     e60:	e685      	b.n	b6e <_vfiprintf_r+0x476>
     e62:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
     e66:	e48a      	b.n	77e <_vfiprintf_r+0x86>
     e68:	9906      	ldr	r1, [sp, #24]
     e6a:	9d03      	ldr	r5, [sp, #12]
     e6c:	1b4d      	subs	r5, r1, r5
     e6e:	2d00      	cmp	r5, #0
     e70:	f77f ae5e 	ble.w	b30 <_vfiprintf_r+0x438>
     e74:	2d10      	cmp	r5, #16
     e76:	f340 8392 	ble.w	159e <_vfiprintf_r+0xea6>
     e7a:	9409      	str	r4, [sp, #36]	; 0x24
     e7c:	ee18 4a10 	vmov	r4, s16
     e80:	e007      	b.n	e92 <_vfiprintf_r+0x79a>
     e82:	f102 0c02 	add.w	ip, r2, #2
     e86:	f109 0908 	add.w	r9, r9, #8
     e8a:	4602      	mov	r2, r0
     e8c:	3d10      	subs	r5, #16
     e8e:	2d10      	cmp	r5, #16
     e90:	dd1e      	ble.n	ed0 <_vfiprintf_r+0x7d8>
     e92:	4963      	ldr	r1, [pc, #396]	; (1020 <_vfiprintf_r+0x928>)
     e94:	f8c9 1000 	str.w	r1, [r9]
     e98:	1c50      	adds	r0, r2, #1
     e9a:	3310      	adds	r3, #16
     e9c:	2110      	movs	r1, #16
     e9e:	2807      	cmp	r0, #7
     ea0:	e9cd 0319 	strd	r0, r3, [sp, #100]	; 0x64
     ea4:	f8c9 1004 	str.w	r1, [r9, #4]
     ea8:	ddeb      	ble.n	e82 <_vfiprintf_r+0x78a>
     eaa:	aa18      	add	r2, sp, #96	; 0x60
     eac:	2b00      	cmp	r3, #0
     eae:	f000 8086 	beq.w	fbe <_vfiprintf_r+0x8c6>
     eb2:	4621      	mov	r1, r4
     eb4:	4658      	mov	r0, fp
     eb6:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
     eba:	f7ff fbe1 	bl	680 <__sprint_r.part.0>
     ebe:	2800      	cmp	r0, #0
     ec0:	d174      	bne.n	fac <_vfiprintf_r+0x8b4>
     ec2:	e9dd 2319 	ldrd	r2, r3, [sp, #100]	; 0x64
     ec6:	3d10      	subs	r5, #16
     ec8:	2d10      	cmp	r5, #16
     eca:	f102 0c01 	add.w	ip, r2, #1
     ece:	dce0      	bgt.n	e92 <_vfiprintf_r+0x79a>
     ed0:	9c09      	ldr	r4, [sp, #36]	; 0x24
     ed2:	4a53      	ldr	r2, [pc, #332]	; (1020 <_vfiprintf_r+0x928>)
     ed4:	f8c9 5004 	str.w	r5, [r9, #4]
     ed8:	442b      	add	r3, r5
     eda:	f1bc 0f07 	cmp.w	ip, #7
     ede:	e9cd c319 	strd	ip, r3, [sp, #100]	; 0x64
     ee2:	f8c9 2000 	str.w	r2, [r9]
     ee6:	f340 8188 	ble.w	11fa <_vfiprintf_r+0xb02>
     eea:	2b00      	cmp	r3, #0
     eec:	f000 82fa 	beq.w	14e4 <_vfiprintf_r+0xdec>
     ef0:	ee18 1a10 	vmov	r1, s16
     ef4:	aa18      	add	r2, sp, #96	; 0x60
     ef6:	4658      	mov	r0, fp
     ef8:	f7ff fbc2 	bl	680 <__sprint_r.part.0>
     efc:	2800      	cmp	r0, #0
     efe:	d155      	bne.n	fac <_vfiprintf_r+0x8b4>
     f00:	9904      	ldr	r1, [sp, #16]
     f02:	e9dd 2319 	ldrd	r2, r3, [sp, #100]	; 0x64
     f06:	1a7d      	subs	r5, r7, r1
     f08:	2d00      	cmp	r5, #0
     f0a:	f102 0001 	add.w	r0, r2, #1
     f0e:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
     f12:	f77f ae12 	ble.w	b3a <_vfiprintf_r+0x442>
     f16:	2d10      	cmp	r5, #16
     f18:	dd2b      	ble.n	f72 <_vfiprintf_r+0x87a>
     f1a:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
     f1e:	2710      	movs	r7, #16
     f20:	46b0      	mov	r8, r6
     f22:	4626      	mov	r6, r4
     f24:	ee18 4a10 	vmov	r4, s16
     f28:	e006      	b.n	f38 <_vfiprintf_r+0x840>
     f2a:	1c90      	adds	r0, r2, #2
     f2c:	f109 0908 	add.w	r9, r9, #8
     f30:	460a      	mov	r2, r1
     f32:	3d10      	subs	r5, #16
     f34:	2d10      	cmp	r5, #16
     f36:	dd18      	ble.n	f6a <_vfiprintf_r+0x872>
     f38:	1c51      	adds	r1, r2, #1
     f3a:	4839      	ldr	r0, [pc, #228]	; (1020 <_vfiprintf_r+0x928>)
     f3c:	3310      	adds	r3, #16
     f3e:	2907      	cmp	r1, #7
     f40:	e9c9 0700 	strd	r0, r7, [r9]
     f44:	e9cd 1319 	strd	r1, r3, [sp, #100]	; 0x64
     f48:	ddef      	ble.n	f2a <_vfiprintf_r+0x832>
     f4a:	aa18      	add	r2, sp, #96	; 0x60
     f4c:	4621      	mov	r1, r4
     f4e:	b1fb      	cbz	r3, f90 <_vfiprintf_r+0x898>
     f50:	4658      	mov	r0, fp
     f52:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
     f56:	f7ff fb93 	bl	680 <__sprint_r.part.0>
     f5a:	bb38      	cbnz	r0, fac <_vfiprintf_r+0x8b4>
     f5c:	e9dd 2319 	ldrd	r2, r3, [sp, #100]	; 0x64
     f60:	3d10      	subs	r5, #16
     f62:	2d10      	cmp	r5, #16
     f64:	f102 0001 	add.w	r0, r2, #1
     f68:	dce6      	bgt.n	f38 <_vfiprintf_r+0x840>
     f6a:	4634      	mov	r4, r6
     f6c:	4646      	mov	r6, r8
     f6e:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
     f72:	4a2b      	ldr	r2, [pc, #172]	; (1020 <_vfiprintf_r+0x928>)
     f74:	f8c9 5004 	str.w	r5, [r9, #4]
     f78:	442b      	add	r3, r5
     f7a:	2807      	cmp	r0, #7
     f7c:	e9cd 0319 	strd	r0, r3, [sp, #100]	; 0x64
     f80:	f8c9 2000 	str.w	r2, [r9]
     f84:	f300 80e3 	bgt.w	114e <_vfiprintf_r+0xa56>
     f88:	f109 0908 	add.w	r9, r9, #8
     f8c:	3001      	adds	r0, #1
     f8e:	e5d4      	b.n	b3a <_vfiprintf_r+0x442>
     f90:	2001      	movs	r0, #1
     f92:	461a      	mov	r2, r3
     f94:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
     f98:	e7cb      	b.n	f32 <_vfiprintf_r+0x83a>
     f9a:	ee18 1a10 	vmov	r1, s16
     f9e:	aa18      	add	r2, sp, #96	; 0x60
     fa0:	4658      	mov	r0, fp
     fa2:	f7ff fb6d 	bl	680 <__sprint_r.part.0>
     fa6:	2800      	cmp	r0, #0
     fa8:	f43f adf4 	beq.w	b94 <_vfiprintf_r+0x49c>
     fac:	9b08      	ldr	r3, [sp, #32]
     fae:	2b00      	cmp	r3, #0
     fb0:	f43f ad54 	beq.w	a5c <_vfiprintf_r+0x364>
     fb4:	9908      	ldr	r1, [sp, #32]
     fb6:	4658      	mov	r0, fp
     fb8:	f000 fdca 	bl	1b50 <_free_r>
     fbc:	e54e      	b.n	a5c <_vfiprintf_r+0x364>
     fbe:	f04f 0c01 	mov.w	ip, #1
     fc2:	461a      	mov	r2, r3
     fc4:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
     fc8:	e760      	b.n	e8c <_vfiprintf_r+0x794>
     fca:	2b00      	cmp	r3, #0
     fcc:	f000 80f4 	beq.w	11b8 <_vfiprintf_r+0xac0>
     fd0:	ee18 1a10 	vmov	r1, s16
     fd4:	aa18      	add	r2, sp, #96	; 0x60
     fd6:	4658      	mov	r0, fp
     fd8:	f7ff fb52 	bl	680 <__sprint_r.part.0>
     fdc:	2800      	cmp	r0, #0
     fde:	d1e5      	bne.n	fac <_vfiprintf_r+0x8b4>
     fe0:	e9dd 2319 	ldrd	r2, r3, [sp, #100]	; 0x64
     fe4:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
     fe8:	1c50      	adds	r0, r2, #1
     fea:	e57d      	b.n	ae8 <_vfiprintf_r+0x3f0>
     fec:	2302      	movs	r3, #2
     fee:	aa11      	add	r2, sp, #68	; 0x44
     ff0:	931c      	str	r3, [sp, #112]	; 0x70
     ff2:	921b      	str	r2, [sp, #108]	; 0x6c
     ff4:	2001      	movs	r0, #1
     ff6:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
     ffa:	4602      	mov	r2, r0
     ffc:	f109 0908 	add.w	r9, r9, #8
    1000:	1c50      	adds	r0, r2, #1
    1002:	e591      	b.n	b28 <_vfiprintf_r+0x430>
    1004:	9603      	str	r6, [sp, #12]
    1006:	e657      	b.n	cb8 <_vfiprintf_r+0x5c0>
    1008:	2d10      	cmp	r5, #16
    100a:	f340 82af 	ble.w	156c <_vfiprintf_r+0xe74>
    100e:	940f      	str	r4, [sp, #60]	; 0x3c
    1010:	e9dd 0319 	ldrd	r0, r3, [sp, #100]	; 0x64
    1014:	ee18 4a10 	vmov	r4, s16
    1018:	e00c      	b.n	1034 <_vfiprintf_r+0x93c>
    101a:	bf00      	nop
    101c:	0000374c 	.word	0x0000374c
    1020:	00003778 	.word	0x00003778
    1024:	f100 0c02 	add.w	ip, r0, #2
    1028:	f109 0908 	add.w	r9, r9, #8
    102c:	4610      	mov	r0, r2
    102e:	3d10      	subs	r5, #16
    1030:	2d10      	cmp	r5, #16
    1032:	dd1c      	ble.n	106e <_vfiprintf_r+0x976>
    1034:	49ad      	ldr	r1, [pc, #692]	; (12ec <_vfiprintf_r+0xbf4>)
    1036:	f8c9 1000 	str.w	r1, [r9]
    103a:	1c42      	adds	r2, r0, #1
    103c:	3310      	adds	r3, #16
    103e:	2110      	movs	r1, #16
    1040:	2a07      	cmp	r2, #7
    1042:	e9cd 2319 	strd	r2, r3, [sp, #100]	; 0x64
    1046:	f8c9 1004 	str.w	r1, [r9, #4]
    104a:	ddeb      	ble.n	1024 <_vfiprintf_r+0x92c>
    104c:	aa18      	add	r2, sp, #96	; 0x60
    104e:	b1fb      	cbz	r3, 1090 <_vfiprintf_r+0x998>
    1050:	4621      	mov	r1, r4
    1052:	4658      	mov	r0, fp
    1054:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    1058:	f7ff fb12 	bl	680 <__sprint_r.part.0>
    105c:	2800      	cmp	r0, #0
    105e:	d1a5      	bne.n	fac <_vfiprintf_r+0x8b4>
    1060:	e9dd 0319 	ldrd	r0, r3, [sp, #100]	; 0x64
    1064:	3d10      	subs	r5, #16
    1066:	2d10      	cmp	r5, #16
    1068:	f100 0c01 	add.w	ip, r0, #1
    106c:	dce2      	bgt.n	1034 <_vfiprintf_r+0x93c>
    106e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
    1070:	4662      	mov	r2, ip
    1072:	499e      	ldr	r1, [pc, #632]	; (12ec <_vfiprintf_r+0xbf4>)
    1074:	f8c9 5004 	str.w	r5, [r9, #4]
    1078:	442b      	add	r3, r5
    107a:	2a07      	cmp	r2, #7
    107c:	e9cd 2319 	strd	r2, r3, [sp, #100]	; 0x64
    1080:	f8c9 1000 	str.w	r1, [r9]
    1084:	f300 80a0 	bgt.w	11c8 <_vfiprintf_r+0xad0>
    1088:	f109 0908 	add.w	r9, r9, #8
    108c:	1c50      	adds	r0, r2, #1
    108e:	e517      	b.n	ac0 <_vfiprintf_r+0x3c8>
    1090:	4618      	mov	r0, r3
    1092:	f04f 0c01 	mov.w	ip, #1
    1096:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    109a:	e7c8      	b.n	102e <_vfiprintf_r+0x936>
    109c:	0775      	lsls	r5, r6, #29
    109e:	9319      	str	r3, [sp, #100]	; 0x64
    10a0:	d54c      	bpl.n	113c <_vfiprintf_r+0xa44>
    10a2:	9a06      	ldr	r2, [sp, #24]
    10a4:	9903      	ldr	r1, [sp, #12]
    10a6:	1a54      	subs	r4, r2, r1
    10a8:	2c00      	cmp	r4, #0
    10aa:	dd47      	ble.n	113c <_vfiprintf_r+0xa44>
    10ac:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    10b0:	2c10      	cmp	r4, #16
    10b2:	f340 826c 	ble.w	158e <_vfiprintf_r+0xe96>
    10b6:	9919      	ldr	r1, [sp, #100]	; 0x64
    10b8:	ee18 6a10 	vmov	r6, s16
    10bc:	2510      	movs	r5, #16
    10be:	e006      	b.n	10ce <_vfiprintf_r+0x9d6>
    10c0:	1c88      	adds	r0, r1, #2
    10c2:	f109 0908 	add.w	r9, r9, #8
    10c6:	4611      	mov	r1, r2
    10c8:	3c10      	subs	r4, #16
    10ca:	2c10      	cmp	r4, #16
    10cc:	dd1a      	ble.n	1104 <_vfiprintf_r+0xa0c>
    10ce:	1c4a      	adds	r2, r1, #1
    10d0:	4886      	ldr	r0, [pc, #536]	; (12ec <_vfiprintf_r+0xbf4>)
    10d2:	3310      	adds	r3, #16
    10d4:	2a07      	cmp	r2, #7
    10d6:	e9c9 0500 	strd	r0, r5, [r9]
    10da:	e9cd 2319 	strd	r2, r3, [sp, #100]	; 0x64
    10de:	ddef      	ble.n	10c0 <_vfiprintf_r+0x9c8>
    10e0:	aa18      	add	r2, sp, #96	; 0x60
    10e2:	b333      	cbz	r3, 1132 <_vfiprintf_r+0xa3a>
    10e4:	4631      	mov	r1, r6
    10e6:	4658      	mov	r0, fp
    10e8:	f7ff faca 	bl	680 <__sprint_r.part.0>
    10ec:	2800      	cmp	r0, #0
    10ee:	f47f af5d 	bne.w	fac <_vfiprintf_r+0x8b4>
    10f2:	e9dd 1319 	ldrd	r1, r3, [sp, #100]	; 0x64
    10f6:	3c10      	subs	r4, #16
    10f8:	2c10      	cmp	r4, #16
    10fa:	f101 0001 	add.w	r0, r1, #1
    10fe:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    1102:	dce4      	bgt.n	10ce <_vfiprintf_r+0x9d6>
    1104:	4a79      	ldr	r2, [pc, #484]	; (12ec <_vfiprintf_r+0xbf4>)
    1106:	f8c9 4004 	str.w	r4, [r9, #4]
    110a:	4423      	add	r3, r4
    110c:	2807      	cmp	r0, #7
    110e:	e9cd 0319 	strd	r0, r3, [sp, #100]	; 0x64
    1112:	f8c9 2000 	str.w	r2, [r9]
    1116:	f77f ad32 	ble.w	b7e <_vfiprintf_r+0x486>
    111a:	b17b      	cbz	r3, 113c <_vfiprintf_r+0xa44>
    111c:	ee18 1a10 	vmov	r1, s16
    1120:	aa18      	add	r2, sp, #96	; 0x60
    1122:	4658      	mov	r0, fp
    1124:	f7ff faac 	bl	680 <__sprint_r.part.0>
    1128:	2800      	cmp	r0, #0
    112a:	f47f af3f 	bne.w	fac <_vfiprintf_r+0x8b4>
    112e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    1130:	e525      	b.n	b7e <_vfiprintf_r+0x486>
    1132:	2001      	movs	r0, #1
    1134:	4619      	mov	r1, r3
    1136:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    113a:	e7c5      	b.n	10c8 <_vfiprintf_r+0x9d0>
    113c:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
    1140:	9903      	ldr	r1, [sp, #12]
    1142:	428a      	cmp	r2, r1
    1144:	bfac      	ite	ge
    1146:	189b      	addge	r3, r3, r2
    1148:	185b      	addlt	r3, r3, r1
    114a:	9305      	str	r3, [sp, #20]
    114c:	e522      	b.n	b94 <_vfiprintf_r+0x49c>
    114e:	2b00      	cmp	r3, #0
    1150:	f43f ae7c 	beq.w	e4c <_vfiprintf_r+0x754>
    1154:	ee18 1a10 	vmov	r1, s16
    1158:	aa18      	add	r2, sp, #96	; 0x60
    115a:	4658      	mov	r0, fp
    115c:	f7ff fa90 	bl	680 <__sprint_r.part.0>
    1160:	2800      	cmp	r0, #0
    1162:	f47f af23 	bne.w	fac <_vfiprintf_r+0x8b4>
    1166:	9819      	ldr	r0, [sp, #100]	; 0x64
    1168:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    116a:	3001      	adds	r0, #1
    116c:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    1170:	e4e3      	b.n	b3a <_vfiprintf_r+0x442>
    1172:	9219      	str	r2, [sp, #100]	; 0x64
    1174:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    1178:	e466      	b.n	a48 <_vfiprintf_r+0x350>
    117a:	2f00      	cmp	r7, #0
    117c:	f47f abd5 	bne.w	92a <_vfiprintf_r+0x232>
    1180:	9e03      	ldr	r6, [sp, #12]
    1182:	2700      	movs	r7, #0
    1184:	9704      	str	r7, [sp, #16]
    1186:	ac44      	add	r4, sp, #272	; 0x110
    1188:	f7ff bbd7 	b.w	93a <_vfiprintf_r+0x242>
    118c:	9b03      	ldr	r3, [sp, #12]
    118e:	f013 0310 	ands.w	r3, r3, #16
    1192:	d138      	bne.n	1206 <_vfiprintf_r+0xb0e>
    1194:	9a03      	ldr	r2, [sp, #12]
    1196:	f012 0040 	ands.w	r0, r2, #64	; 0x40
    119a:	f000 8149 	beq.w	1430 <_vfiprintf_r+0xd38>
    119e:	9907      	ldr	r1, [sp, #28]
    11a0:	461a      	mov	r2, r3
    11a2:	f851 3b04 	ldr.w	r3, [r1], #4
    11a6:	9107      	str	r1, [sp, #28]
    11a8:	b29b      	uxth	r3, r3
    11aa:	2101      	movs	r1, #1
    11ac:	e408      	b.n	9c0 <_vfiprintf_r+0x2c8>
    11ae:	2001      	movs	r0, #1
    11b0:	461a      	mov	r2, r3
    11b2:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    11b6:	e4b7      	b.n	b28 <_vfiprintf_r+0x430>
    11b8:	9a09      	ldr	r2, [sp, #36]	; 0x24
    11ba:	2a00      	cmp	r2, #0
    11bc:	d143      	bne.n	1246 <_vfiprintf_r+0xb4e>
    11be:	461a      	mov	r2, r3
    11c0:	2001      	movs	r0, #1
    11c2:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    11c6:	e4af      	b.n	b28 <_vfiprintf_r+0x430>
    11c8:	2b00      	cmp	r3, #0
    11ca:	d074      	beq.n	12b6 <_vfiprintf_r+0xbbe>
    11cc:	ee18 1a10 	vmov	r1, s16
    11d0:	aa18      	add	r2, sp, #96	; 0x60
    11d2:	4658      	mov	r0, fp
    11d4:	f7ff fa54 	bl	680 <__sprint_r.part.0>
    11d8:	2800      	cmp	r0, #0
    11da:	f47f aee7 	bne.w	fac <_vfiprintf_r+0x8b4>
    11de:	e9dd 2319 	ldrd	r2, r3, [sp, #100]	; 0x64
    11e2:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    11e6:	1c50      	adds	r0, r2, #1
    11e8:	e46a      	b.n	ac0 <_vfiprintf_r+0x3c8>
    11ea:	f898 1000 	ldrb.w	r1, [r8]
    11ee:	9307      	str	r3, [sp, #28]
    11f0:	f7ff baed 	b.w	7ce <_vfiprintf_r+0xd6>
    11f4:	ac44      	add	r4, sp, #272	; 0x110
    11f6:	f7ff bba0 	b.w	93a <_vfiprintf_r+0x242>
    11fa:	f109 0908 	add.w	r9, r9, #8
    11fe:	f10c 0001 	add.w	r0, ip, #1
    1202:	4662      	mov	r2, ip
    1204:	e494      	b.n	b30 <_vfiprintf_r+0x438>
    1206:	9907      	ldr	r1, [sp, #28]
    1208:	f851 3b04 	ldr.w	r3, [r1], #4
    120c:	9107      	str	r1, [sp, #28]
    120e:	2101      	movs	r1, #1
    1210:	f7ff bbd6 	b.w	9c0 <_vfiprintf_r+0x2c8>
    1214:	9b07      	ldr	r3, [sp, #28]
    1216:	9805      	ldr	r0, [sp, #20]
    1218:	f853 1b04 	ldr.w	r1, [r3], #4
    121c:	9307      	str	r3, [sp, #28]
    121e:	17c2      	asrs	r2, r0, #31
    1220:	e9c1 0200 	strd	r0, r2, [r1]
    1224:	f7ff baab 	b.w	77e <_vfiprintf_r+0x86>
    1228:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    122a:	2b00      	cmp	r3, #0
    122c:	f43f ab54 	beq.w	8d8 <_vfiprintf_r+0x1e0>
    1230:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    1232:	781b      	ldrb	r3, [r3, #0]
    1234:	2b00      	cmp	r3, #0
    1236:	f43f ab4f 	beq.w	8d8 <_vfiprintf_r+0x1e0>
    123a:	f898 1000 	ldrb.w	r1, [r8]
    123e:	f446 6680 	orr.w	r6, r6, #1024	; 0x400
    1242:	f7ff bac4 	b.w	7ce <_vfiprintf_r+0xd6>
    1246:	aa11      	add	r2, sp, #68	; 0x44
    1248:	2302      	movs	r3, #2
    124a:	921b      	str	r2, [sp, #108]	; 0x6c
    124c:	931c      	str	r3, [sp, #112]	; 0x70
    124e:	2201      	movs	r2, #1
    1250:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    1254:	e6d2      	b.n	ffc <_vfiprintf_r+0x904>
    1256:	9603      	str	r6, [sp, #12]
    1258:	e574      	b.n	d44 <_vfiprintf_r+0x64c>
    125a:	4b25      	ldr	r3, [pc, #148]	; (12f0 <_vfiprintf_r+0xbf8>)
    125c:	930c      	str	r3, [sp, #48]	; 0x30
    125e:	f016 0220 	ands.w	r2, r6, #32
    1262:	d05f      	beq.n	1324 <_vfiprintf_r+0xc2c>
    1264:	9b07      	ldr	r3, [sp, #28]
    1266:	3307      	adds	r3, #7
    1268:	f023 0307 	bic.w	r3, r3, #7
    126c:	4618      	mov	r0, r3
    126e:	685a      	ldr	r2, [r3, #4]
    1270:	f850 3b08 	ldr.w	r3, [r0], #8
    1274:	9007      	str	r0, [sp, #28]
    1276:	07f4      	lsls	r4, r6, #31
    1278:	d509      	bpl.n	128e <_vfiprintf_r+0xb96>
    127a:	ea53 0002 	orrs.w	r0, r3, r2
    127e:	d006      	beq.n	128e <_vfiprintf_r+0xb96>
    1280:	f88d 1045 	strb.w	r1, [sp, #69]	; 0x45
    1284:	2130      	movs	r1, #48	; 0x30
    1286:	f046 0602 	orr.w	r6, r6, #2
    128a:	f88d 1044 	strb.w	r1, [sp, #68]	; 0x44
    128e:	f426 6180 	bic.w	r1, r6, #1024	; 0x400
    1292:	9103      	str	r1, [sp, #12]
    1294:	2102      	movs	r1, #2
    1296:	f7ff bb93 	b.w	9c0 <_vfiprintf_r+0x2c8>
    129a:	4b16      	ldr	r3, [pc, #88]	; (12f4 <_vfiprintf_r+0xbfc>)
    129c:	930c      	str	r3, [sp, #48]	; 0x30
    129e:	e7de      	b.n	125e <_vfiprintf_r+0xb66>
    12a0:	9b07      	ldr	r3, [sp, #28]
    12a2:	2101      	movs	r1, #1
    12a4:	f853 2b04 	ldr.w	r2, [r3], #4
    12a8:	9103      	str	r1, [sp, #12]
    12aa:	f88d 20ac 	strb.w	r2, [sp, #172]	; 0xac
    12ae:	9307      	str	r3, [sp, #28]
    12b0:	9104      	str	r1, [sp, #16]
    12b2:	ac2b      	add	r4, sp, #172	; 0xac
    12b4:	e4d8      	b.n	c68 <_vfiprintf_r+0x570>
    12b6:	f89d 2043 	ldrb.w	r2, [sp, #67]	; 0x43
    12ba:	2a00      	cmp	r2, #0
    12bc:	f040 812c 	bne.w	1518 <_vfiprintf_r+0xe20>
    12c0:	9a09      	ldr	r2, [sp, #36]	; 0x24
    12c2:	2a00      	cmp	r2, #0
    12c4:	f47f ae92 	bne.w	fec <_vfiprintf_r+0x8f4>
    12c8:	461a      	mov	r2, r3
    12ca:	2001      	movs	r0, #1
    12cc:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    12d0:	e42e      	b.n	b30 <_vfiprintf_r+0x438>
    12d2:	2100      	movs	r1, #0
    12d4:	2208      	movs	r2, #8
    12d6:	a816      	add	r0, sp, #88	; 0x58
    12d8:	9413      	str	r4, [sp, #76]	; 0x4c
    12da:	f7ff f97f 	bl	5dc <memset>
    12de:	1c79      	adds	r1, r7, #1
    12e0:	f000 80b6 	beq.w	1450 <_vfiprintf_r+0xd58>
    12e4:	2500      	movs	r5, #0
    12e6:	9407      	str	r4, [sp, #28]
    12e8:	462c      	mov	r4, r5
    12ea:	e012      	b.n	1312 <_vfiprintf_r+0xc1a>
    12ec:	00003768 	.word	0x00003768
    12f0:	0000374c 	.word	0x0000374c
    12f4:	00003738 	.word	0x00003738
    12f8:	a92b      	add	r1, sp, #172	; 0xac
    12fa:	4658      	mov	r0, fp
    12fc:	f000 f9aa 	bl	1654 <_wcrtomb_r>
    1300:	1c42      	adds	r2, r0, #1
    1302:	4420      	add	r0, r4
    1304:	f000 814d 	beq.w	15a2 <_vfiprintf_r+0xeaa>
    1308:	42b8      	cmp	r0, r7
    130a:	dc08      	bgt.n	131e <_vfiprintf_r+0xc26>
    130c:	f000 8152 	beq.w	15b4 <_vfiprintf_r+0xebc>
    1310:	4604      	mov	r4, r0
    1312:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    1314:	5952      	ldr	r2, [r2, r5]
    1316:	ab16      	add	r3, sp, #88	; 0x58
    1318:	3504      	adds	r5, #4
    131a:	2a00      	cmp	r2, #0
    131c:	d1ec      	bne.n	12f8 <_vfiprintf_r+0xc00>
    131e:	9404      	str	r4, [sp, #16]
    1320:	9c07      	ldr	r4, [sp, #28]
    1322:	e0a3      	b.n	146c <_vfiprintf_r+0xd74>
    1324:	f016 0310 	ands.w	r3, r6, #16
    1328:	9807      	ldr	r0, [sp, #28]
    132a:	d10c      	bne.n	1346 <_vfiprintf_r+0xc4e>
    132c:	f016 0440 	ands.w	r4, r6, #64	; 0x40
    1330:	d005      	beq.n	133e <_vfiprintf_r+0xc46>
    1332:	461a      	mov	r2, r3
    1334:	f850 3b04 	ldr.w	r3, [r0], #4
    1338:	9007      	str	r0, [sp, #28]
    133a:	b29b      	uxth	r3, r3
    133c:	e79b      	b.n	1276 <_vfiprintf_r+0xb7e>
    133e:	f416 7200 	ands.w	r2, r6, #512	; 0x200
    1342:	f040 80e3 	bne.w	150c <_vfiprintf_r+0xe14>
    1346:	f850 3b04 	ldr.w	r3, [r0], #4
    134a:	9007      	str	r0, [sp, #28]
    134c:	e793      	b.n	1276 <_vfiprintf_r+0xb7e>
    134e:	9903      	ldr	r1, [sp, #12]
    1350:	9704      	str	r7, [sp, #16]
    1352:	ac44      	add	r4, sp, #272	; 0x110
    1354:	469e      	mov	lr, r3
    1356:	ee08 ba90 	vmov	s17, fp
    135a:	f401 6680 	and.w	r6, r1, #1024	; 0x400
    135e:	f04f 0c00 	mov.w	ip, #0
    1362:	4623      	mov	r3, r4
    1364:	e006      	b.n	1374 <_vfiprintf_r+0xc7c>
    1366:	f1be 0f0a 	cmp.w	lr, #10
    136a:	f172 0200 	sbcs.w	r2, r2, #0
    136e:	d339      	bcc.n	13e4 <_vfiprintf_r+0xcec>
    1370:	46a6      	mov	lr, r4
    1372:	462a      	mov	r2, r5
    1374:	499a      	ldr	r1, [pc, #616]	; (15e0 <_vfiprintf_r+0xee8>)
    1376:	eb1e 0002 	adds.w	r0, lr, r2
    137a:	f140 0000 	adc.w	r0, r0, #0
    137e:	460f      	mov	r7, r1
    1380:	fba1 1400 	umull	r1, r4, r1, r0
    1384:	f024 0103 	bic.w	r1, r4, #3
    1388:	eb01 0194 	add.w	r1, r1, r4, lsr #2
    138c:	1a40      	subs	r0, r0, r1
    138e:	ebbe 0100 	subs.w	r1, lr, r0
    1392:	f04f 35cc 	mov.w	r5, #3435973836	; 0xcccccccc
    1396:	f162 0400 	sbc.w	r4, r2, #0
    139a:	fb05 f501 	mul.w	r5, r5, r1
    139e:	fb07 5504 	mla	r5, r7, r4, r5
    13a2:	fba1 4107 	umull	r4, r1, r1, r7
    13a6:	440d      	add	r5, r1
    13a8:	2705      	movs	r7, #5
    13aa:	f004 0101 	and.w	r1, r4, #1
    13ae:	fba1 1b07 	umull	r1, fp, r1, r7
    13b2:	1809      	adds	r1, r1, r0
    13b4:	0864      	lsrs	r4, r4, #1
    13b6:	3130      	adds	r1, #48	; 0x30
    13b8:	f803 1c01 	strb.w	r1, [r3, #-1]
    13bc:	ea44 74c5 	orr.w	r4, r4, r5, lsl #31
    13c0:	f10c 0c01 	add.w	ip, ip, #1
    13c4:	3b01      	subs	r3, #1
    13c6:	086d      	lsrs	r5, r5, #1
    13c8:	2e00      	cmp	r6, #0
    13ca:	d0cc      	beq.n	1366 <_vfiprintf_r+0xc6e>
    13cc:	990b      	ldr	r1, [sp, #44]	; 0x2c
    13ce:	7809      	ldrb	r1, [r1, #0]
    13d0:	4561      	cmp	r1, ip
    13d2:	d1c8      	bne.n	1366 <_vfiprintf_r+0xc6e>
    13d4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
    13d8:	d0c5      	beq.n	1366 <_vfiprintf_r+0xc6e>
    13da:	f1be 0f0a 	cmp.w	lr, #10
    13de:	f172 0200 	sbcs.w	r2, r2, #0
    13e2:	d267      	bcs.n	14b4 <_vfiprintf_r+0xdbc>
    13e4:	461c      	mov	r4, r3
    13e6:	ab44      	add	r3, sp, #272	; 0x110
    13e8:	1b1b      	subs	r3, r3, r4
    13ea:	9f04      	ldr	r7, [sp, #16]
    13ec:	9e03      	ldr	r6, [sp, #12]
    13ee:	9304      	str	r3, [sp, #16]
    13f0:	ee18 ba90 	vmov	fp, s17
    13f4:	f7ff baa1 	b.w	93a <_vfiprintf_r+0x242>
    13f8:	9603      	str	r6, [sp, #12]
    13fa:	f7ff ba91 	b.w	920 <_vfiprintf_r+0x228>
    13fe:	2901      	cmp	r1, #1
    1400:	9603      	str	r6, [sp, #12]
    1402:	f47f ac5c 	bne.w	cbe <_vfiprintf_r+0x5c6>
    1406:	f7ff ba90 	b.w	92a <_vfiprintf_r+0x232>
    140a:	9b07      	ldr	r3, [sp, #28]
    140c:	9905      	ldr	r1, [sp, #20]
    140e:	f853 2b04 	ldr.w	r2, [r3], #4
    1412:	6011      	str	r1, [r2, #0]
    1414:	9307      	str	r3, [sp, #28]
    1416:	f7ff b9b2 	b.w	77e <_vfiprintf_r+0x86>
    141a:	2f06      	cmp	r7, #6
    141c:	463b      	mov	r3, r7
    141e:	9a03      	ldr	r2, [sp, #12]
    1420:	4c70      	ldr	r4, [pc, #448]	; (15e4 <_vfiprintf_r+0xeec>)
    1422:	9207      	str	r2, [sp, #28]
    1424:	bf28      	it	cs
    1426:	2306      	movcs	r3, #6
    1428:	9304      	str	r3, [sp, #16]
    142a:	9303      	str	r3, [sp, #12]
    142c:	f7ff bb31 	b.w	a92 <_vfiprintf_r+0x39a>
    1430:	9b03      	ldr	r3, [sp, #12]
    1432:	9907      	ldr	r1, [sp, #28]
    1434:	f413 7200 	ands.w	r2, r3, #512	; 0x200
    1438:	bf14      	ite	ne
    143a:	f851 3b04 	ldrne.w	r3, [r1], #4
    143e:	f851 3b04 	ldreq.w	r3, [r1], #4
    1442:	9107      	str	r1, [sp, #28]
    1444:	bf1c      	itt	ne
    1446:	4602      	movne	r2, r0
    1448:	b2db      	uxtbne	r3, r3
    144a:	2101      	movs	r1, #1
    144c:	f7ff bab8 	b.w	9c0 <_vfiprintf_r+0x2c8>
    1450:	ab16      	add	r3, sp, #88	; 0x58
    1452:	9300      	str	r3, [sp, #0]
    1454:	2300      	movs	r3, #0
    1456:	4619      	mov	r1, r3
    1458:	aa13      	add	r2, sp, #76	; 0x4c
    145a:	4658      	mov	r0, fp
    145c:	f000 f920 	bl	16a0 <_wcsrtombs_r>
    1460:	4603      	mov	r3, r0
    1462:	3301      	adds	r3, #1
    1464:	9004      	str	r0, [sp, #16]
    1466:	f000 809c 	beq.w	15a2 <_vfiprintf_r+0xeaa>
    146a:	9413      	str	r4, [sp, #76]	; 0x4c
    146c:	9b04      	ldr	r3, [sp, #16]
    146e:	2b00      	cmp	r3, #0
    1470:	d030      	beq.n	14d4 <_vfiprintf_r+0xddc>
    1472:	2b63      	cmp	r3, #99	; 0x63
    1474:	dc6b      	bgt.n	154e <_vfiprintf_r+0xe56>
    1476:	2300      	movs	r3, #0
    1478:	9308      	str	r3, [sp, #32]
    147a:	ac2b      	add	r4, sp, #172	; 0xac
    147c:	2208      	movs	r2, #8
    147e:	2100      	movs	r1, #0
    1480:	a816      	add	r0, sp, #88	; 0x58
    1482:	f7ff f8ab 	bl	5dc <memset>
    1486:	9d04      	ldr	r5, [sp, #16]
    1488:	ab16      	add	r3, sp, #88	; 0x58
    148a:	9300      	str	r3, [sp, #0]
    148c:	aa13      	add	r2, sp, #76	; 0x4c
    148e:	462b      	mov	r3, r5
    1490:	4621      	mov	r1, r4
    1492:	4658      	mov	r0, fp
    1494:	f000 f904 	bl	16a0 <_wcsrtombs_r>
    1498:	4285      	cmp	r5, r0
    149a:	f040 8099 	bne.w	15d0 <_vfiprintf_r+0xed8>
    149e:	9b03      	ldr	r3, [sp, #12]
    14a0:	9a04      	ldr	r2, [sp, #16]
    14a2:	9307      	str	r3, [sp, #28]
    14a4:	2300      	movs	r3, #0
    14a6:	54a3      	strb	r3, [r4, r2]
    14a8:	461f      	mov	r7, r3
    14aa:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
    14ae:	9303      	str	r3, [sp, #12]
    14b0:	f7ff ba4a 	b.w	948 <_vfiprintf_r+0x250>
    14b4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    14b6:	990d      	ldr	r1, [sp, #52]	; 0x34
    14b8:	1a9b      	subs	r3, r3, r2
    14ba:	4618      	mov	r0, r3
    14bc:	9308      	str	r3, [sp, #32]
    14be:	f001 fd4d 	bl	2f5c <strncpy>
    14c2:	990b      	ldr	r1, [sp, #44]	; 0x2c
    14c4:	9b08      	ldr	r3, [sp, #32]
    14c6:	784a      	ldrb	r2, [r1, #1]
    14c8:	b10a      	cbz	r2, 14ce <_vfiprintf_r+0xdd6>
    14ca:	3101      	adds	r1, #1
    14cc:	910b      	str	r1, [sp, #44]	; 0x2c
    14ce:	f04f 0c00 	mov.w	ip, #0
    14d2:	e74d      	b.n	1370 <_vfiprintf_r+0xc78>
    14d4:	9b03      	ldr	r3, [sp, #12]
    14d6:	9307      	str	r3, [sp, #28]
    14d8:	9b04      	ldr	r3, [sp, #16]
    14da:	9303      	str	r3, [sp, #12]
    14dc:	461f      	mov	r7, r3
    14de:	9308      	str	r3, [sp, #32]
    14e0:	f7ff ba32 	b.w	948 <_vfiprintf_r+0x250>
    14e4:	2001      	movs	r0, #1
    14e6:	461a      	mov	r2, r3
    14e8:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    14ec:	f7ff bb20 	b.w	b30 <_vfiprintf_r+0x438>
    14f0:	f851 3b04 	ldr.w	r3, [r1], #4
    14f4:	9107      	str	r1, [sp, #28]
    14f6:	4602      	mov	r2, r0
    14f8:	b2db      	uxtb	r3, r3
    14fa:	f7ff ba5d 	b.w	9b8 <_vfiprintf_r+0x2c0>
    14fe:	f912 3b04 	ldrsb.w	r3, [r2], #4
    1502:	9207      	str	r2, [sp, #28]
    1504:	17da      	asrs	r2, r3, #31
    1506:	4611      	mov	r1, r2
    1508:	f7ff b9fd 	b.w	906 <_vfiprintf_r+0x20e>
    150c:	f850 3b04 	ldr.w	r3, [r0], #4
    1510:	9007      	str	r0, [sp, #28]
    1512:	4622      	mov	r2, r4
    1514:	b2db      	uxtb	r3, r3
    1516:	e6ae      	b.n	1276 <_vfiprintf_r+0xb7e>
    1518:	2301      	movs	r3, #1
    151a:	931c      	str	r3, [sp, #112]	; 0x70
    151c:	2001      	movs	r0, #1
    151e:	f10d 0343 	add.w	r3, sp, #67	; 0x43
    1522:	931b      	str	r3, [sp, #108]	; 0x6c
    1524:	f10d 096c 	add.w	r9, sp, #108	; 0x6c
    1528:	4603      	mov	r3, r0
    152a:	f7ff bad9 	b.w	ae0 <_vfiprintf_r+0x3e8>
    152e:	9b07      	ldr	r3, [sp, #28]
    1530:	9905      	ldr	r1, [sp, #20]
    1532:	f853 2b04 	ldr.w	r2, [r3], #4
    1536:	9307      	str	r3, [sp, #28]
    1538:	8011      	strh	r1, [r2, #0]
    153a:	f7ff b920 	b.w	77e <_vfiprintf_r+0x86>
    153e:	ee18 1a10 	vmov	r1, s16
    1542:	aa18      	add	r2, sp, #96	; 0x60
    1544:	4658      	mov	r0, fp
    1546:	f7ff f89b 	bl	680 <__sprint_r.part.0>
    154a:	f7ff ba87 	b.w	a5c <_vfiprintf_r+0x364>
    154e:	1c59      	adds	r1, r3, #1
    1550:	4658      	mov	r0, fp
    1552:	f000 fe1b 	bl	218c <_malloc_r>
    1556:	4604      	mov	r4, r0
    1558:	b318      	cbz	r0, 15a2 <_vfiprintf_r+0xeaa>
    155a:	9008      	str	r0, [sp, #32]
    155c:	e78e      	b.n	147c <_vfiprintf_r+0xd84>
    155e:	9b03      	ldr	r3, [sp, #12]
    1560:	9307      	str	r3, [sp, #28]
    1562:	e9cd 7703 	strd	r7, r7, [sp, #12]
    1566:	9f08      	ldr	r7, [sp, #32]
    1568:	f7ff b9ee 	b.w	948 <_vfiprintf_r+0x250>
    156c:	9a19      	ldr	r2, [sp, #100]	; 0x64
    156e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    1570:	3201      	adds	r2, #1
    1572:	e57e      	b.n	1072 <_vfiprintf_r+0x97a>
    1574:	9b03      	ldr	r3, [sp, #12]
    1576:	9307      	str	r3, [sp, #28]
    1578:	4620      	mov	r0, r4
    157a:	f001 fc81 	bl	2e80 <strlen>
    157e:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
    1582:	462f      	mov	r7, r5
    1584:	9004      	str	r0, [sp, #16]
    1586:	9303      	str	r3, [sp, #12]
    1588:	9508      	str	r5, [sp, #32]
    158a:	f7ff b9dd 	b.w	948 <_vfiprintf_r+0x250>
    158e:	9819      	ldr	r0, [sp, #100]	; 0x64
    1590:	3001      	adds	r0, #1
    1592:	e5b7      	b.n	1104 <_vfiprintf_r+0xa0c>
    1594:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    1598:	9305      	str	r3, [sp, #20]
    159a:	f7ff ba66 	b.w	a6a <_vfiprintf_r+0x372>
    159e:	4684      	mov	ip, r0
    15a0:	e497      	b.n	ed2 <_vfiprintf_r+0x7da>
    15a2:	ee18 2a10 	vmov	r2, s16
    15a6:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
    15aa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    15ae:	8193      	strh	r3, [r2, #12]
    15b0:	f7ff ba58 	b.w	a64 <_vfiprintf_r+0x36c>
    15b4:	9c07      	ldr	r4, [sp, #28]
    15b6:	9704      	str	r7, [sp, #16]
    15b8:	e758      	b.n	146c <_vfiprintf_r+0xd74>
    15ba:	9b07      	ldr	r3, [sp, #28]
    15bc:	f898 1001 	ldrb.w	r1, [r8, #1]
    15c0:	f853 7b04 	ldr.w	r7, [r3], #4
    15c4:	9307      	str	r3, [sp, #28]
    15c6:	4690      	mov	r8, r2
    15c8:	ea47 77e7 	orr.w	r7, r7, r7, asr #31
    15cc:	f7ff b8ff 	b.w	7ce <_vfiprintf_r+0xd6>
    15d0:	ee18 2a10 	vmov	r2, s16
    15d4:	8993      	ldrh	r3, [r2, #12]
    15d6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    15da:	8193      	strh	r3, [r2, #12]
    15dc:	e4e6      	b.n	fac <_vfiprintf_r+0x8b4>
    15de:	bf00      	nop
    15e0:	cccccccd 	.word	0xcccccccd
    15e4:	00003760 	.word	0x00003760

000015e8 <__sbprintf>:
    15e8:	b570      	push	{r4, r5, r6, lr}
    15ea:	460c      	mov	r4, r1
    15ec:	8989      	ldrh	r1, [r1, #12]
    15ee:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
    15f2:	f021 0102 	bic.w	r1, r1, #2
    15f6:	f8ad 100c 	strh.w	r1, [sp, #12]
    15fa:	6e61      	ldr	r1, [r4, #100]	; 0x64
    15fc:	9119      	str	r1, [sp, #100]	; 0x64
    15fe:	89e1      	ldrh	r1, [r4, #14]
    1600:	f8ad 100e 	strh.w	r1, [sp, #14]
    1604:	69e1      	ldr	r1, [r4, #28]
    1606:	9107      	str	r1, [sp, #28]
    1608:	6a61      	ldr	r1, [r4, #36]	; 0x24
    160a:	9109      	str	r1, [sp, #36]	; 0x24
    160c:	a91a      	add	r1, sp, #104	; 0x68
    160e:	9100      	str	r1, [sp, #0]
    1610:	9104      	str	r1, [sp, #16]
    1612:	f44f 6180 	mov.w	r1, #1024	; 0x400
    1616:	9102      	str	r1, [sp, #8]
    1618:	9105      	str	r1, [sp, #20]
    161a:	2100      	movs	r1, #0
    161c:	9106      	str	r1, [sp, #24]
    161e:	4669      	mov	r1, sp
    1620:	4606      	mov	r6, r0
    1622:	f7ff f869 	bl	6f8 <_vfiprintf_r>
    1626:	1e05      	subs	r5, r0, #0
    1628:	db07      	blt.n	163a <__sbprintf+0x52>
    162a:	4669      	mov	r1, sp
    162c:	4630      	mov	r0, r6
    162e:	f000 f945 	bl	18bc <_fflush_r>
    1632:	2800      	cmp	r0, #0
    1634:	bf18      	it	ne
    1636:	f04f 35ff 	movne.w	r5, #4294967295	; 0xffffffff
    163a:	f8bd 300c 	ldrh.w	r3, [sp, #12]
    163e:	065b      	lsls	r3, r3, #25
    1640:	d503      	bpl.n	164a <__sbprintf+0x62>
    1642:	89a3      	ldrh	r3, [r4, #12]
    1644:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    1648:	81a3      	strh	r3, [r4, #12]
    164a:	4628      	mov	r0, r5
    164c:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
    1650:	bd70      	pop	{r4, r5, r6, pc}
    1652:	bf00      	nop

00001654 <_wcrtomb_r>:
    1654:	b570      	push	{r4, r5, r6, lr}
    1656:	4605      	mov	r5, r0
    1658:	b084      	sub	sp, #16
    165a:	b15b      	cbz	r3, 1674 <_wcrtomb_r+0x20>
    165c:	461c      	mov	r4, r3
    165e:	b169      	cbz	r1, 167c <_wcrtomb_r+0x28>
    1660:	4b0e      	ldr	r3, [pc, #56]	; (169c <_wcrtomb_r+0x48>)
    1662:	4628      	mov	r0, r5
    1664:	f8d3 60e0 	ldr.w	r6, [r3, #224]	; 0xe0
    1668:	4623      	mov	r3, r4
    166a:	47b0      	blx	r6
    166c:	1c43      	adds	r3, r0, #1
    166e:	d00f      	beq.n	1690 <_wcrtomb_r+0x3c>
    1670:	b004      	add	sp, #16
    1672:	bd70      	pop	{r4, r5, r6, pc}
    1674:	f500 748a 	add.w	r4, r0, #276	; 0x114
    1678:	2900      	cmp	r1, #0
    167a:	d1f1      	bne.n	1660 <_wcrtomb_r+0xc>
    167c:	4a07      	ldr	r2, [pc, #28]	; (169c <_wcrtomb_r+0x48>)
    167e:	4623      	mov	r3, r4
    1680:	f8d2 60e0 	ldr.w	r6, [r2, #224]	; 0xe0
    1684:	4628      	mov	r0, r5
    1686:	460a      	mov	r2, r1
    1688:	a901      	add	r1, sp, #4
    168a:	47b0      	blx	r6
    168c:	1c43      	adds	r3, r0, #1
    168e:	d1ef      	bne.n	1670 <_wcrtomb_r+0x1c>
    1690:	2200      	movs	r2, #0
    1692:	238a      	movs	r3, #138	; 0x8a
    1694:	6022      	str	r2, [r4, #0]
    1696:	602b      	str	r3, [r5, #0]
    1698:	b004      	add	sp, #16
    169a:	bd70      	pop	{r4, r5, r6, pc}
    169c:	20000430 	.word	0x20000430

000016a0 <_wcsrtombs_r>:
    16a0:	b510      	push	{r4, lr}
    16a2:	b082      	sub	sp, #8
    16a4:	9c04      	ldr	r4, [sp, #16]
    16a6:	e9cd 3400 	strd	r3, r4, [sp]
    16aa:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
    16ae:	f001 fd63 	bl	3178 <_wcsnrtombs_r>
    16b2:	b002      	add	sp, #8
    16b4:	bd10      	pop	{r4, pc}
    16b6:	bf00      	nop

000016b8 <__swsetup_r>:
    16b8:	b538      	push	{r3, r4, r5, lr}
    16ba:	4b33      	ldr	r3, [pc, #204]	; (1788 <__swsetup_r+0xd0>)
    16bc:	681b      	ldr	r3, [r3, #0]
    16be:	4605      	mov	r5, r0
    16c0:	460c      	mov	r4, r1
    16c2:	b10b      	cbz	r3, 16c8 <__swsetup_r+0x10>
    16c4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
    16c6:	b312      	cbz	r2, 170e <__swsetup_r+0x56>
    16c8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    16cc:	0718      	lsls	r0, r3, #28
    16ce:	b29a      	uxth	r2, r3
    16d0:	d525      	bpl.n	171e <__swsetup_r+0x66>
    16d2:	6921      	ldr	r1, [r4, #16]
    16d4:	2900      	cmp	r1, #0
    16d6:	d02d      	beq.n	1734 <__swsetup_r+0x7c>
    16d8:	f012 0001 	ands.w	r0, r2, #1
    16dc:	d007      	beq.n	16ee <__swsetup_r+0x36>
    16de:	2000      	movs	r0, #0
    16e0:	60a0      	str	r0, [r4, #8]
    16e2:	6960      	ldr	r0, [r4, #20]
    16e4:	4240      	negs	r0, r0
    16e6:	61a0      	str	r0, [r4, #24]
    16e8:	b139      	cbz	r1, 16fa <__swsetup_r+0x42>
    16ea:	2000      	movs	r0, #0
    16ec:	bd38      	pop	{r3, r4, r5, pc}
    16ee:	0795      	lsls	r5, r2, #30
    16f0:	bf58      	it	pl
    16f2:	6960      	ldrpl	r0, [r4, #20]
    16f4:	60a0      	str	r0, [r4, #8]
    16f6:	2900      	cmp	r1, #0
    16f8:	d1f7      	bne.n	16ea <__swsetup_r+0x32>
    16fa:	0612      	lsls	r2, r2, #24
    16fc:	bf58      	it	pl
    16fe:	4608      	movpl	r0, r1
    1700:	d5f4      	bpl.n	16ec <__swsetup_r+0x34>
    1702:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    1706:	81a3      	strh	r3, [r4, #12]
    1708:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    170c:	bd38      	pop	{r3, r4, r5, pc}
    170e:	4618      	mov	r0, r3
    1710:	f000 f95c 	bl	19cc <__sinit>
    1714:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    1718:	0718      	lsls	r0, r3, #28
    171a:	b29a      	uxth	r2, r3
    171c:	d4d9      	bmi.n	16d2 <__swsetup_r+0x1a>
    171e:	06d1      	lsls	r1, r2, #27
    1720:	d52a      	bpl.n	1778 <__swsetup_r+0xc0>
    1722:	0752      	lsls	r2, r2, #29
    1724:	d414      	bmi.n	1750 <__swsetup_r+0x98>
    1726:	6921      	ldr	r1, [r4, #16]
    1728:	f043 0308 	orr.w	r3, r3, #8
    172c:	81a3      	strh	r3, [r4, #12]
    172e:	b29a      	uxth	r2, r3
    1730:	2900      	cmp	r1, #0
    1732:	d1d1      	bne.n	16d8 <__swsetup_r+0x20>
    1734:	f402 7020 	and.w	r0, r2, #640	; 0x280
    1738:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
    173c:	d0cc      	beq.n	16d8 <__swsetup_r+0x20>
    173e:	4621      	mov	r1, r4
    1740:	4628      	mov	r0, r5
    1742:	f000 fcb3 	bl	20ac <__smakebuf_r>
    1746:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    174a:	6921      	ldr	r1, [r4, #16]
    174c:	b29a      	uxth	r2, r3
    174e:	e7c3      	b.n	16d8 <__swsetup_r+0x20>
    1750:	6b21      	ldr	r1, [r4, #48]	; 0x30
    1752:	b151      	cbz	r1, 176a <__swsetup_r+0xb2>
    1754:	f104 0240 	add.w	r2, r4, #64	; 0x40
    1758:	4291      	cmp	r1, r2
    175a:	d004      	beq.n	1766 <__swsetup_r+0xae>
    175c:	4628      	mov	r0, r5
    175e:	f000 f9f7 	bl	1b50 <_free_r>
    1762:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    1766:	2200      	movs	r2, #0
    1768:	6322      	str	r2, [r4, #48]	; 0x30
    176a:	6921      	ldr	r1, [r4, #16]
    176c:	2200      	movs	r2, #0
    176e:	e9c4 1200 	strd	r1, r2, [r4]
    1772:	f023 0324 	bic.w	r3, r3, #36	; 0x24
    1776:	e7d7      	b.n	1728 <__swsetup_r+0x70>
    1778:	2209      	movs	r2, #9
    177a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    177e:	602a      	str	r2, [r5, #0]
    1780:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    1784:	81a3      	strh	r3, [r4, #12]
    1786:	bd38      	pop	{r3, r4, r5, pc}
    1788:	20000000 	.word	0x20000000

0000178c <__sflush_r>:
    178c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
    1790:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    1794:	460c      	mov	r4, r1
    1796:	0711      	lsls	r1, r2, #28
    1798:	4680      	mov	r8, r0
    179a:	d447      	bmi.n	182c <__sflush_r+0xa0>
    179c:	6863      	ldr	r3, [r4, #4]
    179e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
    17a2:	2b00      	cmp	r3, #0
    17a4:	81a2      	strh	r2, [r4, #12]
    17a6:	dd5e      	ble.n	1866 <__sflush_r+0xda>
    17a8:	6aa5      	ldr	r5, [r4, #40]	; 0x28
    17aa:	2d00      	cmp	r5, #0
    17ac:	d058      	beq.n	1860 <__sflush_r+0xd4>
    17ae:	2300      	movs	r3, #0
    17b0:	f8d8 6000 	ldr.w	r6, [r8]
    17b4:	f8c8 3000 	str.w	r3, [r8]
    17b8:	b293      	uxth	r3, r2
    17ba:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
    17be:	d156      	bne.n	186e <__sflush_r+0xe2>
    17c0:	2301      	movs	r3, #1
    17c2:	69e1      	ldr	r1, [r4, #28]
    17c4:	4640      	mov	r0, r8
    17c6:	47a8      	blx	r5
    17c8:	1c43      	adds	r3, r0, #1
    17ca:	d067      	beq.n	189c <__sflush_r+0x110>
    17cc:	89a3      	ldrh	r3, [r4, #12]
    17ce:	6aa5      	ldr	r5, [r4, #40]	; 0x28
    17d0:	075f      	lsls	r7, r3, #29
    17d2:	d505      	bpl.n	17e0 <__sflush_r+0x54>
    17d4:	6863      	ldr	r3, [r4, #4]
    17d6:	1ac0      	subs	r0, r0, r3
    17d8:	6b23      	ldr	r3, [r4, #48]	; 0x30
    17da:	b10b      	cbz	r3, 17e0 <__sflush_r+0x54>
    17dc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    17de:	1ac0      	subs	r0, r0, r3
    17e0:	69e1      	ldr	r1, [r4, #28]
    17e2:	4602      	mov	r2, r0
    17e4:	2300      	movs	r3, #0
    17e6:	4640      	mov	r0, r8
    17e8:	47a8      	blx	r5
    17ea:	1c41      	adds	r1, r0, #1
    17ec:	d141      	bne.n	1872 <__sflush_r+0xe6>
    17ee:	f8d8 3000 	ldr.w	r3, [r8]
    17f2:	2b00      	cmp	r3, #0
    17f4:	d03d      	beq.n	1872 <__sflush_r+0xe6>
    17f6:	2b1d      	cmp	r3, #29
    17f8:	d001      	beq.n	17fe <__sflush_r+0x72>
    17fa:	2b16      	cmp	r3, #22
    17fc:	d156      	bne.n	18ac <__sflush_r+0x120>
    17fe:	89a3      	ldrh	r3, [r4, #12]
    1800:	6922      	ldr	r2, [r4, #16]
    1802:	6022      	str	r2, [r4, #0]
    1804:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
    1808:	2100      	movs	r1, #0
    180a:	6061      	str	r1, [r4, #4]
    180c:	81a3      	strh	r3, [r4, #12]
    180e:	6b21      	ldr	r1, [r4, #48]	; 0x30
    1810:	f8c8 6000 	str.w	r6, [r8]
    1814:	b321      	cbz	r1, 1860 <__sflush_r+0xd4>
    1816:	f104 0340 	add.w	r3, r4, #64	; 0x40
    181a:	4299      	cmp	r1, r3
    181c:	d002      	beq.n	1824 <__sflush_r+0x98>
    181e:	4640      	mov	r0, r8
    1820:	f000 f996 	bl	1b50 <_free_r>
    1824:	2000      	movs	r0, #0
    1826:	6320      	str	r0, [r4, #48]	; 0x30
    1828:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    182c:	6926      	ldr	r6, [r4, #16]
    182e:	b1be      	cbz	r6, 1860 <__sflush_r+0xd4>
    1830:	b293      	uxth	r3, r2
    1832:	6825      	ldr	r5, [r4, #0]
    1834:	6026      	str	r6, [r4, #0]
    1836:	079a      	lsls	r2, r3, #30
    1838:	bf0c      	ite	eq
    183a:	6963      	ldreq	r3, [r4, #20]
    183c:	2300      	movne	r3, #0
    183e:	1bad      	subs	r5, r5, r6
    1840:	60a3      	str	r3, [r4, #8]
    1842:	e00b      	b.n	185c <__sflush_r+0xd0>
    1844:	462b      	mov	r3, r5
    1846:	4632      	mov	r2, r6
    1848:	69e1      	ldr	r1, [r4, #28]
    184a:	6a67      	ldr	r7, [r4, #36]	; 0x24
    184c:	4640      	mov	r0, r8
    184e:	47b8      	blx	r7
    1850:	f1b0 0c00 	subs.w	ip, r0, #0
    1854:	eba5 050c 	sub.w	r5, r5, ip
    1858:	4466      	add	r6, ip
    185a:	dd17      	ble.n	188c <__sflush_r+0x100>
    185c:	2d00      	cmp	r5, #0
    185e:	dcf1      	bgt.n	1844 <__sflush_r+0xb8>
    1860:	2000      	movs	r0, #0
    1862:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    1866:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    1868:	2b00      	cmp	r3, #0
    186a:	dc9d      	bgt.n	17a8 <__sflush_r+0x1c>
    186c:	e7f8      	b.n	1860 <__sflush_r+0xd4>
    186e:	6d20      	ldr	r0, [r4, #80]	; 0x50
    1870:	e7ae      	b.n	17d0 <__sflush_r+0x44>
    1872:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    1876:	6922      	ldr	r2, [r4, #16]
    1878:	6022      	str	r2, [r4, #0]
    187a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
    187e:	81a3      	strh	r3, [r4, #12]
    1880:	2200      	movs	r2, #0
    1882:	04db      	lsls	r3, r3, #19
    1884:	6062      	str	r2, [r4, #4]
    1886:	d5c2      	bpl.n	180e <__sflush_r+0x82>
    1888:	6520      	str	r0, [r4, #80]	; 0x50
    188a:	e7c0      	b.n	180e <__sflush_r+0x82>
    188c:	89a3      	ldrh	r3, [r4, #12]
    188e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    1892:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    1896:	81a3      	strh	r3, [r4, #12]
    1898:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    189c:	f8d8 3000 	ldr.w	r3, [r8]
    18a0:	2b00      	cmp	r3, #0
    18a2:	d093      	beq.n	17cc <__sflush_r+0x40>
    18a4:	2b1d      	cmp	r3, #29
    18a6:	d006      	beq.n	18b6 <__sflush_r+0x12a>
    18a8:	2b16      	cmp	r3, #22
    18aa:	d004      	beq.n	18b6 <__sflush_r+0x12a>
    18ac:	89a3      	ldrh	r3, [r4, #12]
    18ae:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    18b2:	81a3      	strh	r3, [r4, #12]
    18b4:	e7d5      	b.n	1862 <__sflush_r+0xd6>
    18b6:	f8c8 6000 	str.w	r6, [r8]
    18ba:	e7d1      	b.n	1860 <__sflush_r+0xd4>

000018bc <_fflush_r>:
    18bc:	b538      	push	{r3, r4, r5, lr}
    18be:	460d      	mov	r5, r1
    18c0:	4604      	mov	r4, r0
    18c2:	b108      	cbz	r0, 18c8 <_fflush_r+0xc>
    18c4:	6b83      	ldr	r3, [r0, #56]	; 0x38
    18c6:	b11b      	cbz	r3, 18d0 <_fflush_r+0x14>
    18c8:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
    18cc:	b930      	cbnz	r0, 18dc <_fflush_r+0x20>
    18ce:	bd38      	pop	{r3, r4, r5, pc}
    18d0:	f000 f87c 	bl	19cc <__sinit>
    18d4:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
    18d8:	2800      	cmp	r0, #0
    18da:	d0f8      	beq.n	18ce <_fflush_r+0x12>
    18dc:	4629      	mov	r1, r5
    18de:	4620      	mov	r0, r4
    18e0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    18e4:	f7ff bf52 	b.w	178c <__sflush_r>

000018e8 <_cleanup_r>:
    18e8:	4901      	ldr	r1, [pc, #4]	; (18f0 <_cleanup_r+0x8>)
    18ea:	f000 bbb1 	b.w	2050 <_fwalk_reent>
    18ee:	bf00      	nop
    18f0:	00003209 	.word	0x00003209

000018f4 <__sinit.part.0>:
    18f4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    18f8:	4a2d      	ldr	r2, [pc, #180]	; (19b0 <__sinit.part.0+0xbc>)
    18fa:	6846      	ldr	r6, [r0, #4]
    18fc:	63c2      	str	r2, [r0, #60]	; 0x3c
    18fe:	2400      	movs	r4, #0
    1900:	2303      	movs	r3, #3
    1902:	e9c0 43b8 	strd	r4, r3, [r0, #736]	; 0x2e0
    1906:	4607      	mov	r7, r0
    1908:	f500 723b 	add.w	r2, r0, #748	; 0x2ec
    190c:	2304      	movs	r3, #4
    190e:	f8c0 22e8 	str.w	r2, [r0, #744]	; 0x2e8
    1912:	4621      	mov	r1, r4
    1914:	e9c6 4302 	strd	r4, r3, [r6, #8]
    1918:	2208      	movs	r2, #8
    191a:	e9c6 4400 	strd	r4, r4, [r6]
    191e:	e9c6 4404 	strd	r4, r4, [r6, #16]
    1922:	6674      	str	r4, [r6, #100]	; 0x64
    1924:	61b4      	str	r4, [r6, #24]
    1926:	f106 005c 	add.w	r0, r6, #92	; 0x5c
    192a:	f7fe fe57 	bl	5dc <memset>
    192e:	f8df b08c 	ldr.w	fp, [pc, #140]	; 19bc <__sinit.part.0+0xc8>
    1932:	68bd      	ldr	r5, [r7, #8]
    1934:	f8df a088 	ldr.w	sl, [pc, #136]	; 19c0 <__sinit.part.0+0xcc>
    1938:	f8df 9088 	ldr.w	r9, [pc, #136]	; 19c4 <__sinit.part.0+0xd0>
    193c:	f8df 8088 	ldr.w	r8, [pc, #136]	; 19c8 <__sinit.part.0+0xd4>
    1940:	4b1c      	ldr	r3, [pc, #112]	; (19b4 <__sinit.part.0+0xc0>)
    1942:	f8c6 a024 	str.w	sl, [r6, #36]	; 0x24
    1946:	e9c6 6b07 	strd	r6, fp, [r6, #28]
    194a:	f8c6 9028 	str.w	r9, [r6, #40]	; 0x28
    194e:	f8c6 802c 	str.w	r8, [r6, #44]	; 0x2c
    1952:	2208      	movs	r2, #8
    1954:	60eb      	str	r3, [r5, #12]
    1956:	e9c5 4400 	strd	r4, r4, [r5]
    195a:	e9c5 4404 	strd	r4, r4, [r5, #16]
    195e:	666c      	str	r4, [r5, #100]	; 0x64
    1960:	60ac      	str	r4, [r5, #8]
    1962:	61ac      	str	r4, [r5, #24]
    1964:	4621      	mov	r1, r4
    1966:	f105 005c 	add.w	r0, r5, #92	; 0x5c
    196a:	f7fe fe37 	bl	5dc <memset>
    196e:	e9c5 5b07 	strd	r5, fp, [r5, #28]
    1972:	e9c5 a909 	strd	sl, r9, [r5, #36]	; 0x24
    1976:	f8c5 802c 	str.w	r8, [r5, #44]	; 0x2c
    197a:	68fd      	ldr	r5, [r7, #12]
    197c:	4b0e      	ldr	r3, [pc, #56]	; (19b8 <__sinit.part.0+0xc4>)
    197e:	60eb      	str	r3, [r5, #12]
    1980:	e9c5 4400 	strd	r4, r4, [r5]
    1984:	e9c5 4404 	strd	r4, r4, [r5, #16]
    1988:	666c      	str	r4, [r5, #100]	; 0x64
    198a:	60ac      	str	r4, [r5, #8]
    198c:	61ac      	str	r4, [r5, #24]
    198e:	4621      	mov	r1, r4
    1990:	2208      	movs	r2, #8
    1992:	f105 005c 	add.w	r0, r5, #92	; 0x5c
    1996:	f7fe fe21 	bl	5dc <memset>
    199a:	2301      	movs	r3, #1
    199c:	e9c5 5b07 	strd	r5, fp, [r5, #28]
    19a0:	e9c5 980a 	strd	r9, r8, [r5, #40]	; 0x28
    19a4:	f8c5 a024 	str.w	sl, [r5, #36]	; 0x24
    19a8:	63bb      	str	r3, [r7, #56]	; 0x38
    19aa:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    19ae:	bf00      	nop
    19b0:	000018e9 	.word	0x000018e9
    19b4:	00010009 	.word	0x00010009
    19b8:	00020012 	.word	0x00020012
    19bc:	00002df1 	.word	0x00002df1
    19c0:	00002e15 	.word	0x00002e15
    19c4:	00002e55 	.word	0x00002e55
    19c8:	00002e75 	.word	0x00002e75

000019cc <__sinit>:
    19cc:	6b83      	ldr	r3, [r0, #56]	; 0x38
    19ce:	b103      	cbz	r3, 19d2 <__sinit+0x6>
    19d0:	4770      	bx	lr
    19d2:	f7ff bf8f 	b.w	18f4 <__sinit.part.0>
    19d6:	bf00      	nop

000019d8 <__sfp_lock_acquire>:
    19d8:	4770      	bx	lr
    19da:	bf00      	nop

000019dc <__sfp_lock_release>:
    19dc:	4770      	bx	lr
    19de:	bf00      	nop

000019e0 <__fputwc>:
    19e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    19e4:	b082      	sub	sp, #8
    19e6:	4682      	mov	sl, r0
    19e8:	4688      	mov	r8, r1
    19ea:	4614      	mov	r4, r2
    19ec:	f000 fb54 	bl	2098 <__locale_mb_cur_max>
    19f0:	2801      	cmp	r0, #1
    19f2:	d103      	bne.n	19fc <__fputwc+0x1c>
    19f4:	f108 33ff 	add.w	r3, r8, #4294967295	; 0xffffffff
    19f8:	2bfe      	cmp	r3, #254	; 0xfe
    19fa:	d936      	bls.n	1a6a <__fputwc+0x8a>
    19fc:	4642      	mov	r2, r8
    19fe:	f104 035c 	add.w	r3, r4, #92	; 0x5c
    1a02:	a901      	add	r1, sp, #4
    1a04:	4650      	mov	r0, sl
    1a06:	f7ff fe25 	bl	1654 <_wcrtomb_r>
    1a0a:	1c42      	adds	r2, r0, #1
    1a0c:	4606      	mov	r6, r0
    1a0e:	d032      	beq.n	1a76 <__fputwc+0x96>
    1a10:	b330      	cbz	r0, 1a60 <__fputwc+0x80>
    1a12:	f89d c004 	ldrb.w	ip, [sp, #4]
    1a16:	f10d 0905 	add.w	r9, sp, #5
    1a1a:	2500      	movs	r5, #0
    1a1c:	e009      	b.n	1a32 <__fputwc+0x52>
    1a1e:	6823      	ldr	r3, [r4, #0]
    1a20:	1c5a      	adds	r2, r3, #1
    1a22:	6022      	str	r2, [r4, #0]
    1a24:	f883 c000 	strb.w	ip, [r3]
    1a28:	3501      	adds	r5, #1
    1a2a:	42b5      	cmp	r5, r6
    1a2c:	d218      	bcs.n	1a60 <__fputwc+0x80>
    1a2e:	f819 cb01 	ldrb.w	ip, [r9], #1
    1a32:	68a3      	ldr	r3, [r4, #8]
    1a34:	3b01      	subs	r3, #1
    1a36:	2b00      	cmp	r3, #0
    1a38:	60a3      	str	r3, [r4, #8]
    1a3a:	daf0      	bge.n	1a1e <__fputwc+0x3e>
    1a3c:	69a7      	ldr	r7, [r4, #24]
    1a3e:	42bb      	cmp	r3, r7
    1a40:	4661      	mov	r1, ip
    1a42:	4622      	mov	r2, r4
    1a44:	4650      	mov	r0, sl
    1a46:	db02      	blt.n	1a4e <__fputwc+0x6e>
    1a48:	f1bc 0f0a 	cmp.w	ip, #10
    1a4c:	d1e7      	bne.n	1a1e <__fputwc+0x3e>
    1a4e:	f001 fab7 	bl	2fc0 <__swbuf_r>
    1a52:	1c43      	adds	r3, r0, #1
    1a54:	d1e8      	bne.n	1a28 <__fputwc+0x48>
    1a56:	4606      	mov	r6, r0
    1a58:	4630      	mov	r0, r6
    1a5a:	b002      	add	sp, #8
    1a5c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    1a60:	4646      	mov	r6, r8
    1a62:	4630      	mov	r0, r6
    1a64:	b002      	add	sp, #8
    1a66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    1a6a:	fa5f fc88 	uxtb.w	ip, r8
    1a6e:	f88d c004 	strb.w	ip, [sp, #4]
    1a72:	4606      	mov	r6, r0
    1a74:	e7cf      	b.n	1a16 <__fputwc+0x36>
    1a76:	89a3      	ldrh	r3, [r4, #12]
    1a78:	4630      	mov	r0, r6
    1a7a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    1a7e:	81a3      	strh	r3, [r4, #12]
    1a80:	b002      	add	sp, #8
    1a82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    1a86:	bf00      	nop

00001a88 <_fputwc_r>:
    1a88:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
    1a8c:	f413 5f00 	tst.w	r3, #8192	; 0x2000
    1a90:	d10b      	bne.n	1aaa <_fputwc_r+0x22>
    1a92:	b410      	push	{r4}
    1a94:	6e54      	ldr	r4, [r2, #100]	; 0x64
    1a96:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
    1a9a:	f444 5400 	orr.w	r4, r4, #8192	; 0x2000
    1a9e:	6654      	str	r4, [r2, #100]	; 0x64
    1aa0:	8193      	strh	r3, [r2, #12]
    1aa2:	f85d 4b04 	ldr.w	r4, [sp], #4
    1aa6:	f7ff bf9b 	b.w	19e0 <__fputwc>
    1aaa:	f7ff bf99 	b.w	19e0 <__fputwc>
    1aae:	bf00      	nop

00001ab0 <_malloc_trim_r>:
    1ab0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1ab2:	4f24      	ldr	r7, [pc, #144]	; (1b44 <_malloc_trim_r+0x94>)
    1ab4:	460c      	mov	r4, r1
    1ab6:	4606      	mov	r6, r0
    1ab8:	f000 ff98 	bl	29ec <__malloc_lock>
    1abc:	68bb      	ldr	r3, [r7, #8]
    1abe:	685d      	ldr	r5, [r3, #4]
    1ac0:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
    1ac4:	310f      	adds	r1, #15
    1ac6:	f025 0503 	bic.w	r5, r5, #3
    1aca:	194b      	adds	r3, r1, r5
    1acc:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
    1ad0:	f023 030f 	bic.w	r3, r3, #15
    1ad4:	f5a3 5480 	sub.w	r4, r3, #4096	; 0x1000
    1ad8:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
    1adc:	db07      	blt.n	1aee <_malloc_trim_r+0x3e>
    1ade:	2100      	movs	r1, #0
    1ae0:	4630      	mov	r0, r6
    1ae2:	f001 f973 	bl	2dcc <_sbrk_r>
    1ae6:	68bb      	ldr	r3, [r7, #8]
    1ae8:	442b      	add	r3, r5
    1aea:	4298      	cmp	r0, r3
    1aec:	d004      	beq.n	1af8 <_malloc_trim_r+0x48>
    1aee:	4630      	mov	r0, r6
    1af0:	f000 ff7e 	bl	29f0 <__malloc_unlock>
    1af4:	2000      	movs	r0, #0
    1af6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1af8:	4261      	negs	r1, r4
    1afa:	4630      	mov	r0, r6
    1afc:	f001 f966 	bl	2dcc <_sbrk_r>
    1b00:	3001      	adds	r0, #1
    1b02:	d00d      	beq.n	1b20 <_malloc_trim_r+0x70>
    1b04:	4a10      	ldr	r2, [pc, #64]	; (1b48 <_malloc_trim_r+0x98>)
    1b06:	68bb      	ldr	r3, [r7, #8]
    1b08:	1b2d      	subs	r5, r5, r4
    1b0a:	f045 0501 	orr.w	r5, r5, #1
    1b0e:	605d      	str	r5, [r3, #4]
    1b10:	6813      	ldr	r3, [r2, #0]
    1b12:	4630      	mov	r0, r6
    1b14:	1b1b      	subs	r3, r3, r4
    1b16:	6013      	str	r3, [r2, #0]
    1b18:	f000 ff6a 	bl	29f0 <__malloc_unlock>
    1b1c:	2001      	movs	r0, #1
    1b1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1b20:	2100      	movs	r1, #0
    1b22:	4630      	mov	r0, r6
    1b24:	f001 f952 	bl	2dcc <_sbrk_r>
    1b28:	68ba      	ldr	r2, [r7, #8]
    1b2a:	1a83      	subs	r3, r0, r2
    1b2c:	2b0f      	cmp	r3, #15
    1b2e:	ddde      	ble.n	1aee <_malloc_trim_r+0x3e>
    1b30:	f043 0301 	orr.w	r3, r3, #1
    1b34:	6053      	str	r3, [r2, #4]
    1b36:	4b05      	ldr	r3, [pc, #20]	; (1b4c <_malloc_trim_r+0x9c>)
    1b38:	4903      	ldr	r1, [pc, #12]	; (1b48 <_malloc_trim_r+0x98>)
    1b3a:	681b      	ldr	r3, [r3, #0]
    1b3c:	1ac0      	subs	r0, r0, r3
    1b3e:	6008      	str	r0, [r1, #0]
    1b40:	e7d5      	b.n	1aee <_malloc_trim_r+0x3e>
    1b42:	bf00      	nop
    1b44:	2000059c 	.word	0x2000059c
    1b48:	20000aac 	.word	0x20000aac
    1b4c:	200009a4 	.word	0x200009a4

00001b50 <_free_r>:
    1b50:	2900      	cmp	r1, #0
    1b52:	d061      	beq.n	1c18 <_free_r+0xc8>
    1b54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1b56:	460c      	mov	r4, r1
    1b58:	4606      	mov	r6, r0
    1b5a:	f000 ff47 	bl	29ec <__malloc_lock>
    1b5e:	f854 2c04 	ldr.w	r2, [r4, #-4]
    1b62:	4f7b      	ldr	r7, [pc, #492]	; (1d50 <_free_r+0x200>)
    1b64:	f1a4 0508 	sub.w	r5, r4, #8
    1b68:	f022 0101 	bic.w	r1, r2, #1
    1b6c:	eb05 0c01 	add.w	ip, r5, r1
    1b70:	68b8      	ldr	r0, [r7, #8]
    1b72:	f8dc 3004 	ldr.w	r3, [ip, #4]
    1b76:	4560      	cmp	r0, ip
    1b78:	f023 0303 	bic.w	r3, r3, #3
    1b7c:	f000 808b 	beq.w	1c96 <_free_r+0x146>
    1b80:	07d2      	lsls	r2, r2, #31
    1b82:	f8cc 3004 	str.w	r3, [ip, #4]
    1b86:	d432      	bmi.n	1bee <_free_r+0x9e>
    1b88:	f854 2c08 	ldr.w	r2, [r4, #-8]
    1b8c:	1aad      	subs	r5, r5, r2
    1b8e:	4411      	add	r1, r2
    1b90:	68aa      	ldr	r2, [r5, #8]
    1b92:	f107 0008 	add.w	r0, r7, #8
    1b96:	4282      	cmp	r2, r0
    1b98:	d06a      	beq.n	1c70 <_free_r+0x120>
    1b9a:	eb0c 0403 	add.w	r4, ip, r3
    1b9e:	f8d4 e004 	ldr.w	lr, [r4, #4]
    1ba2:	68ec      	ldr	r4, [r5, #12]
    1ba4:	60d4      	str	r4, [r2, #12]
    1ba6:	f01e 0f01 	tst.w	lr, #1
    1baa:	60a2      	str	r2, [r4, #8]
    1bac:	f000 8097 	beq.w	1cde <_free_r+0x18e>
    1bb0:	f041 0301 	orr.w	r3, r1, #1
    1bb4:	606b      	str	r3, [r5, #4]
    1bb6:	f8cc 1000 	str.w	r1, [ip]
    1bba:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
    1bbe:	d235      	bcs.n	1c2c <_free_r+0xdc>
    1bc0:	6878      	ldr	r0, [r7, #4]
    1bc2:	08cb      	lsrs	r3, r1, #3
    1bc4:	2201      	movs	r2, #1
    1bc6:	0949      	lsrs	r1, r1, #5
    1bc8:	3301      	adds	r3, #1
    1bca:	408a      	lsls	r2, r1
    1bcc:	4302      	orrs	r2, r0
    1bce:	f857 1033 	ldr.w	r1, [r7, r3, lsl #3]
    1bd2:	607a      	str	r2, [r7, #4]
    1bd4:	eb07 02c3 	add.w	r2, r7, r3, lsl #3
    1bd8:	3a08      	subs	r2, #8
    1bda:	e9c5 1202 	strd	r1, r2, [r5, #8]
    1bde:	f847 5033 	str.w	r5, [r7, r3, lsl #3]
    1be2:	60cd      	str	r5, [r1, #12]
    1be4:	4630      	mov	r0, r6
    1be6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    1bea:	f000 bf01 	b.w	29f0 <__malloc_unlock>
    1bee:	eb0c 0203 	add.w	r2, ip, r3
    1bf2:	6852      	ldr	r2, [r2, #4]
    1bf4:	07d0      	lsls	r0, r2, #31
    1bf6:	d410      	bmi.n	1c1a <_free_r+0xca>
    1bf8:	4419      	add	r1, r3
    1bfa:	f107 0008 	add.w	r0, r7, #8
    1bfe:	f8dc 3008 	ldr.w	r3, [ip, #8]
    1c02:	4283      	cmp	r3, r0
    1c04:	d073      	beq.n	1cee <_free_r+0x19e>
    1c06:	f8dc 200c 	ldr.w	r2, [ip, #12]
    1c0a:	60da      	str	r2, [r3, #12]
    1c0c:	6093      	str	r3, [r2, #8]
    1c0e:	f041 0301 	orr.w	r3, r1, #1
    1c12:	606b      	str	r3, [r5, #4]
    1c14:	5069      	str	r1, [r5, r1]
    1c16:	e7d0      	b.n	1bba <_free_r+0x6a>
    1c18:	4770      	bx	lr
    1c1a:	f041 0301 	orr.w	r3, r1, #1
    1c1e:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
    1c22:	f844 3c04 	str.w	r3, [r4, #-4]
    1c26:	f8cc 1000 	str.w	r1, [ip]
    1c2a:	d3c9      	bcc.n	1bc0 <_free_r+0x70>
    1c2c:	f5b1 6f20 	cmp.w	r1, #2560	; 0xa00
    1c30:	ea4f 2351 	mov.w	r3, r1, lsr #9
    1c34:	d248      	bcs.n	1cc8 <_free_r+0x178>
    1c36:	098b      	lsrs	r3, r1, #6
    1c38:	f103 0039 	add.w	r0, r3, #57	; 0x39
    1c3c:	f103 0238 	add.w	r2, r3, #56	; 0x38
    1c40:	00c3      	lsls	r3, r0, #3
    1c42:	18f8      	adds	r0, r7, r3
    1c44:	58fb      	ldr	r3, [r7, r3]
    1c46:	3808      	subs	r0, #8
    1c48:	4298      	cmp	r0, r3
    1c4a:	d059      	beq.n	1d00 <_free_r+0x1b0>
    1c4c:	685a      	ldr	r2, [r3, #4]
    1c4e:	f022 0203 	bic.w	r2, r2, #3
    1c52:	428a      	cmp	r2, r1
    1c54:	d902      	bls.n	1c5c <_free_r+0x10c>
    1c56:	689b      	ldr	r3, [r3, #8]
    1c58:	4298      	cmp	r0, r3
    1c5a:	d1f7      	bne.n	1c4c <_free_r+0xfc>
    1c5c:	68d8      	ldr	r0, [r3, #12]
    1c5e:	e9c5 3002 	strd	r3, r0, [r5, #8]
    1c62:	6085      	str	r5, [r0, #8]
    1c64:	60dd      	str	r5, [r3, #12]
    1c66:	4630      	mov	r0, r6
    1c68:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    1c6c:	f000 bec0 	b.w	29f0 <__malloc_unlock>
    1c70:	eb0c 0203 	add.w	r2, ip, r3
    1c74:	6852      	ldr	r2, [r2, #4]
    1c76:	07d2      	lsls	r2, r2, #31
    1c78:	d463      	bmi.n	1d42 <_free_r+0x1f2>
    1c7a:	440b      	add	r3, r1
    1c7c:	e9dc 1202 	ldrd	r1, r2, [ip, #8]
    1c80:	60ca      	str	r2, [r1, #12]
    1c82:	6091      	str	r1, [r2, #8]
    1c84:	f043 0201 	orr.w	r2, r3, #1
    1c88:	606a      	str	r2, [r5, #4]
    1c8a:	4630      	mov	r0, r6
    1c8c:	50eb      	str	r3, [r5, r3]
    1c8e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    1c92:	f000 bead 	b.w	29f0 <__malloc_unlock>
    1c96:	440b      	add	r3, r1
    1c98:	07d1      	lsls	r1, r2, #31
    1c9a:	d407      	bmi.n	1cac <_free_r+0x15c>
    1c9c:	f854 2c08 	ldr.w	r2, [r4, #-8]
    1ca0:	1aad      	subs	r5, r5, r2
    1ca2:	4413      	add	r3, r2
    1ca4:	e9d5 1202 	ldrd	r1, r2, [r5, #8]
    1ca8:	60ca      	str	r2, [r1, #12]
    1caa:	6091      	str	r1, [r2, #8]
    1cac:	f043 0201 	orr.w	r2, r3, #1
    1cb0:	606a      	str	r2, [r5, #4]
    1cb2:	4a28      	ldr	r2, [pc, #160]	; (1d54 <_free_r+0x204>)
    1cb4:	60bd      	str	r5, [r7, #8]
    1cb6:	6812      	ldr	r2, [r2, #0]
    1cb8:	429a      	cmp	r2, r3
    1cba:	d893      	bhi.n	1be4 <_free_r+0x94>
    1cbc:	4b26      	ldr	r3, [pc, #152]	; (1d58 <_free_r+0x208>)
    1cbe:	4630      	mov	r0, r6
    1cc0:	6819      	ldr	r1, [r3, #0]
    1cc2:	f7ff fef5 	bl	1ab0 <_malloc_trim_r>
    1cc6:	e78d      	b.n	1be4 <_free_r+0x94>
    1cc8:	2b14      	cmp	r3, #20
    1cca:	d90a      	bls.n	1ce2 <_free_r+0x192>
    1ccc:	2b54      	cmp	r3, #84	; 0x54
    1cce:	d81f      	bhi.n	1d10 <_free_r+0x1c0>
    1cd0:	0b0b      	lsrs	r3, r1, #12
    1cd2:	f103 006f 	add.w	r0, r3, #111	; 0x6f
    1cd6:	f103 026e 	add.w	r2, r3, #110	; 0x6e
    1cda:	00c3      	lsls	r3, r0, #3
    1cdc:	e7b1      	b.n	1c42 <_free_r+0xf2>
    1cde:	4419      	add	r1, r3
    1ce0:	e78d      	b.n	1bfe <_free_r+0xae>
    1ce2:	f103 005c 	add.w	r0, r3, #92	; 0x5c
    1ce6:	f103 025b 	add.w	r2, r3, #91	; 0x5b
    1cea:	00c3      	lsls	r3, r0, #3
    1cec:	e7a9      	b.n	1c42 <_free_r+0xf2>
    1cee:	f041 0301 	orr.w	r3, r1, #1
    1cf2:	e9c7 5504 	strd	r5, r5, [r7, #16]
    1cf6:	e9c5 0002 	strd	r0, r0, [r5, #8]
    1cfa:	606b      	str	r3, [r5, #4]
    1cfc:	5069      	str	r1, [r5, r1]
    1cfe:	e771      	b.n	1be4 <_free_r+0x94>
    1d00:	6879      	ldr	r1, [r7, #4]
    1d02:	1092      	asrs	r2, r2, #2
    1d04:	2401      	movs	r4, #1
    1d06:	fa04 f202 	lsl.w	r2, r4, r2
    1d0a:	430a      	orrs	r2, r1
    1d0c:	607a      	str	r2, [r7, #4]
    1d0e:	e7a6      	b.n	1c5e <_free_r+0x10e>
    1d10:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
    1d14:	d806      	bhi.n	1d24 <_free_r+0x1d4>
    1d16:	0bcb      	lsrs	r3, r1, #15
    1d18:	f103 0078 	add.w	r0, r3, #120	; 0x78
    1d1c:	f103 0277 	add.w	r2, r3, #119	; 0x77
    1d20:	00c3      	lsls	r3, r0, #3
    1d22:	e78e      	b.n	1c42 <_free_r+0xf2>
    1d24:	f240 5254 	movw	r2, #1364	; 0x554
    1d28:	4293      	cmp	r3, r2
    1d2a:	d806      	bhi.n	1d3a <_free_r+0x1ea>
    1d2c:	0c8b      	lsrs	r3, r1, #18
    1d2e:	f103 007d 	add.w	r0, r3, #125	; 0x7d
    1d32:	f103 027c 	add.w	r2, r3, #124	; 0x7c
    1d36:	00c3      	lsls	r3, r0, #3
    1d38:	e783      	b.n	1c42 <_free_r+0xf2>
    1d3a:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
    1d3e:	227e      	movs	r2, #126	; 0x7e
    1d40:	e77f      	b.n	1c42 <_free_r+0xf2>
    1d42:	f041 0301 	orr.w	r3, r1, #1
    1d46:	606b      	str	r3, [r5, #4]
    1d48:	f8cc 1000 	str.w	r1, [ip]
    1d4c:	e74a      	b.n	1be4 <_free_r+0x94>
    1d4e:	bf00      	nop
    1d50:	2000059c 	.word	0x2000059c
    1d54:	200009a8 	.word	0x200009a8
    1d58:	20000adc 	.word	0x20000adc

00001d5c <__sfvwrite_r>:
    1d5c:	6893      	ldr	r3, [r2, #8]
    1d5e:	2b00      	cmp	r3, #0
    1d60:	f000 8085 	beq.w	1e6e <__sfvwrite_r+0x112>
    1d64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1d68:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
    1d6c:	460c      	mov	r4, r1
    1d6e:	0719      	lsls	r1, r3, #28
    1d70:	4680      	mov	r8, r0
    1d72:	b083      	sub	sp, #12
    1d74:	4617      	mov	r7, r2
    1d76:	b298      	uxth	r0, r3
    1d78:	d525      	bpl.n	1dc6 <__sfvwrite_r+0x6a>
    1d7a:	6923      	ldr	r3, [r4, #16]
    1d7c:	b31b      	cbz	r3, 1dc6 <__sfvwrite_r+0x6a>
    1d7e:	f010 0302 	ands.w	r3, r0, #2
    1d82:	683d      	ldr	r5, [r7, #0]
    1d84:	d02d      	beq.n	1de2 <__sfvwrite_r+0x86>
    1d86:	f04f 0a00 	mov.w	sl, #0
    1d8a:	f8df b2c0 	ldr.w	fp, [pc, #704]	; 204c <__sfvwrite_r+0x2f0>
    1d8e:	4656      	mov	r6, sl
    1d90:	46b9      	mov	r9, r7
    1d92:	455e      	cmp	r6, fp
    1d94:	4633      	mov	r3, r6
    1d96:	4652      	mov	r2, sl
    1d98:	bf28      	it	cs
    1d9a:	465b      	movcs	r3, fp
    1d9c:	4640      	mov	r0, r8
    1d9e:	2e00      	cmp	r6, #0
    1da0:	d052      	beq.n	1e48 <__sfvwrite_r+0xec>
    1da2:	69e1      	ldr	r1, [r4, #28]
    1da4:	6a67      	ldr	r7, [r4, #36]	; 0x24
    1da6:	47b8      	blx	r7
    1da8:	2800      	cmp	r0, #0
    1daa:	dd56      	ble.n	1e5a <__sfvwrite_r+0xfe>
    1dac:	f8d9 3008 	ldr.w	r3, [r9, #8]
    1db0:	1a1b      	subs	r3, r3, r0
    1db2:	4482      	add	sl, r0
    1db4:	1a36      	subs	r6, r6, r0
    1db6:	f8c9 3008 	str.w	r3, [r9, #8]
    1dba:	2b00      	cmp	r3, #0
    1dbc:	d1e9      	bne.n	1d92 <__sfvwrite_r+0x36>
    1dbe:	2000      	movs	r0, #0
    1dc0:	b003      	add	sp, #12
    1dc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1dc6:	4621      	mov	r1, r4
    1dc8:	4640      	mov	r0, r8
    1dca:	f7ff fc75 	bl	16b8 <__swsetup_r>
    1dce:	2800      	cmp	r0, #0
    1dd0:	f040 8138 	bne.w	2044 <__sfvwrite_r+0x2e8>
    1dd4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    1dd8:	683d      	ldr	r5, [r7, #0]
    1dda:	b298      	uxth	r0, r3
    1ddc:	f010 0302 	ands.w	r3, r0, #2
    1de0:	d1d1      	bne.n	1d86 <__sfvwrite_r+0x2a>
    1de2:	f010 0901 	ands.w	r9, r0, #1
    1de6:	d144      	bne.n	1e72 <__sfvwrite_r+0x116>
    1de8:	464e      	mov	r6, r9
    1dea:	9700      	str	r7, [sp, #0]
    1dec:	b346      	cbz	r6, 1e40 <__sfvwrite_r+0xe4>
    1dee:	0582      	lsls	r2, r0, #22
    1df0:	f8d4 b008 	ldr.w	fp, [r4, #8]
    1df4:	f140 8085 	bpl.w	1f02 <__sfvwrite_r+0x1a6>
    1df8:	45b3      	cmp	fp, r6
    1dfa:	465a      	mov	r2, fp
    1dfc:	f200 80b4 	bhi.w	1f68 <__sfvwrite_r+0x20c>
    1e00:	f410 6f90 	tst.w	r0, #1152	; 0x480
    1e04:	f040 80c1 	bne.w	1f8a <__sfvwrite_r+0x22e>
    1e08:	6820      	ldr	r0, [r4, #0]
    1e0a:	9201      	str	r2, [sp, #4]
    1e0c:	4649      	mov	r1, r9
    1e0e:	f000 fd71 	bl	28f4 <memmove>
    1e12:	68a3      	ldr	r3, [r4, #8]
    1e14:	9a01      	ldr	r2, [sp, #4]
    1e16:	eba3 010b 	sub.w	r1, r3, fp
    1e1a:	6823      	ldr	r3, [r4, #0]
    1e1c:	60a1      	str	r1, [r4, #8]
    1e1e:	4413      	add	r3, r2
    1e20:	46b2      	mov	sl, r6
    1e22:	6023      	str	r3, [r4, #0]
    1e24:	2600      	movs	r6, #0
    1e26:	9a00      	ldr	r2, [sp, #0]
    1e28:	6893      	ldr	r3, [r2, #8]
    1e2a:	eba3 030a 	sub.w	r3, r3, sl
    1e2e:	44d1      	add	r9, sl
    1e30:	6093      	str	r3, [r2, #8]
    1e32:	2b00      	cmp	r3, #0
    1e34:	d0c3      	beq.n	1dbe <__sfvwrite_r+0x62>
    1e36:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
    1e3a:	b280      	uxth	r0, r0
    1e3c:	2e00      	cmp	r6, #0
    1e3e:	d1d6      	bne.n	1dee <__sfvwrite_r+0x92>
    1e40:	e9d5 9600 	ldrd	r9, r6, [r5]
    1e44:	3508      	adds	r5, #8
    1e46:	e7d1      	b.n	1dec <__sfvwrite_r+0x90>
    1e48:	e9d5 a600 	ldrd	sl, r6, [r5]
    1e4c:	3508      	adds	r5, #8
    1e4e:	e7a0      	b.n	1d92 <__sfvwrite_r+0x36>
    1e50:	4621      	mov	r1, r4
    1e52:	4640      	mov	r0, r8
    1e54:	f7ff fd32 	bl	18bc <_fflush_r>
    1e58:	b388      	cbz	r0, 1ebe <__sfvwrite_r+0x162>
    1e5a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    1e5e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    1e62:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    1e66:	81a3      	strh	r3, [r4, #12]
    1e68:	b003      	add	sp, #12
    1e6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1e6e:	2000      	movs	r0, #0
    1e70:	4770      	bx	lr
    1e72:	461e      	mov	r6, r3
    1e74:	46ba      	mov	sl, r7
    1e76:	4699      	mov	r9, r3
    1e78:	4618      	mov	r0, r3
    1e7a:	9500      	str	r5, [sp, #0]
    1e7c:	461f      	mov	r7, r3
    1e7e:	b366      	cbz	r6, 1eda <__sfvwrite_r+0x17e>
    1e80:	2800      	cmp	r0, #0
    1e82:	d032      	beq.n	1eea <__sfvwrite_r+0x18e>
    1e84:	464a      	mov	r2, r9
    1e86:	e9d4 1304 	ldrd	r1, r3, [r4, #16]
    1e8a:	6820      	ldr	r0, [r4, #0]
    1e8c:	68a5      	ldr	r5, [r4, #8]
    1e8e:	42b2      	cmp	r2, r6
    1e90:	bf28      	it	cs
    1e92:	4632      	movcs	r2, r6
    1e94:	4288      	cmp	r0, r1
    1e96:	d904      	bls.n	1ea2 <__sfvwrite_r+0x146>
    1e98:	eb05 0b03 	add.w	fp, r5, r3
    1e9c:	455a      	cmp	r2, fp
    1e9e:	f300 80a7 	bgt.w	1ff0 <__sfvwrite_r+0x294>
    1ea2:	4293      	cmp	r3, r2
    1ea4:	dc64      	bgt.n	1f70 <__sfvwrite_r+0x214>
    1ea6:	69e1      	ldr	r1, [r4, #28]
    1ea8:	6a65      	ldr	r5, [r4, #36]	; 0x24
    1eaa:	463a      	mov	r2, r7
    1eac:	4640      	mov	r0, r8
    1eae:	47a8      	blx	r5
    1eb0:	f1b0 0b00 	subs.w	fp, r0, #0
    1eb4:	ddd1      	ble.n	1e5a <__sfvwrite_r+0xfe>
    1eb6:	ebb9 090b 	subs.w	r9, r9, fp
    1eba:	d0c9      	beq.n	1e50 <__sfvwrite_r+0xf4>
    1ebc:	2001      	movs	r0, #1
    1ebe:	f8da 3008 	ldr.w	r3, [sl, #8]
    1ec2:	eba3 030b 	sub.w	r3, r3, fp
    1ec6:	445f      	add	r7, fp
    1ec8:	eba6 060b 	sub.w	r6, r6, fp
    1ecc:	f8ca 3008 	str.w	r3, [sl, #8]
    1ed0:	2b00      	cmp	r3, #0
    1ed2:	f43f af74 	beq.w	1dbe <__sfvwrite_r+0x62>
    1ed6:	2e00      	cmp	r6, #0
    1ed8:	d1d2      	bne.n	1e80 <__sfvwrite_r+0x124>
    1eda:	9a00      	ldr	r2, [sp, #0]
    1edc:	6856      	ldr	r6, [r2, #4]
    1ede:	4613      	mov	r3, r2
    1ee0:	3208      	adds	r2, #8
    1ee2:	9200      	str	r2, [sp, #0]
    1ee4:	2e00      	cmp	r6, #0
    1ee6:	d0f8      	beq.n	1eda <__sfvwrite_r+0x17e>
    1ee8:	681f      	ldr	r7, [r3, #0]
    1eea:	4632      	mov	r2, r6
    1eec:	210a      	movs	r1, #10
    1eee:	4638      	mov	r0, r7
    1ef0:	f000 fc16 	bl	2720 <memchr>
    1ef4:	2800      	cmp	r0, #0
    1ef6:	f000 809c 	beq.w	2032 <__sfvwrite_r+0x2d6>
    1efa:	3001      	adds	r0, #1
    1efc:	eba0 0907 	sub.w	r9, r0, r7
    1f00:	e7c0      	b.n	1e84 <__sfvwrite_r+0x128>
    1f02:	6820      	ldr	r0, [r4, #0]
    1f04:	6923      	ldr	r3, [r4, #16]
    1f06:	4298      	cmp	r0, r3
    1f08:	d816      	bhi.n	1f38 <__sfvwrite_r+0x1dc>
    1f0a:	6962      	ldr	r2, [r4, #20]
    1f0c:	42b2      	cmp	r2, r6
    1f0e:	d813      	bhi.n	1f38 <__sfvwrite_r+0x1dc>
    1f10:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
    1f14:	42b3      	cmp	r3, r6
    1f16:	bf28      	it	cs
    1f18:	4633      	movcs	r3, r6
    1f1a:	69e1      	ldr	r1, [r4, #28]
    1f1c:	fb93 f3f2 	sdiv	r3, r3, r2
    1f20:	6a67      	ldr	r7, [r4, #36]	; 0x24
    1f22:	fb02 f303 	mul.w	r3, r2, r3
    1f26:	4640      	mov	r0, r8
    1f28:	464a      	mov	r2, r9
    1f2a:	47b8      	blx	r7
    1f2c:	f1b0 0a00 	subs.w	sl, r0, #0
    1f30:	dd93      	ble.n	1e5a <__sfvwrite_r+0xfe>
    1f32:	eba6 060a 	sub.w	r6, r6, sl
    1f36:	e776      	b.n	1e26 <__sfvwrite_r+0xca>
    1f38:	45b3      	cmp	fp, r6
    1f3a:	46da      	mov	sl, fp
    1f3c:	bf28      	it	cs
    1f3e:	46b2      	movcs	sl, r6
    1f40:	4652      	mov	r2, sl
    1f42:	4649      	mov	r1, r9
    1f44:	f000 fcd6 	bl	28f4 <memmove>
    1f48:	68a3      	ldr	r3, [r4, #8]
    1f4a:	6822      	ldr	r2, [r4, #0]
    1f4c:	eba3 030a 	sub.w	r3, r3, sl
    1f50:	4452      	add	r2, sl
    1f52:	60a3      	str	r3, [r4, #8]
    1f54:	6022      	str	r2, [r4, #0]
    1f56:	2b00      	cmp	r3, #0
    1f58:	d1eb      	bne.n	1f32 <__sfvwrite_r+0x1d6>
    1f5a:	4621      	mov	r1, r4
    1f5c:	4640      	mov	r0, r8
    1f5e:	f7ff fcad 	bl	18bc <_fflush_r>
    1f62:	2800      	cmp	r0, #0
    1f64:	d0e5      	beq.n	1f32 <__sfvwrite_r+0x1d6>
    1f66:	e778      	b.n	1e5a <__sfvwrite_r+0xfe>
    1f68:	6820      	ldr	r0, [r4, #0]
    1f6a:	46b3      	mov	fp, r6
    1f6c:	4632      	mov	r2, r6
    1f6e:	e74c      	b.n	1e0a <__sfvwrite_r+0xae>
    1f70:	4639      	mov	r1, r7
    1f72:	9201      	str	r2, [sp, #4]
    1f74:	f000 fcbe 	bl	28f4 <memmove>
    1f78:	9a01      	ldr	r2, [sp, #4]
    1f7a:	68a3      	ldr	r3, [r4, #8]
    1f7c:	1a9b      	subs	r3, r3, r2
    1f7e:	60a3      	str	r3, [r4, #8]
    1f80:	6823      	ldr	r3, [r4, #0]
    1f82:	4413      	add	r3, r2
    1f84:	6023      	str	r3, [r4, #0]
    1f86:	4693      	mov	fp, r2
    1f88:	e795      	b.n	1eb6 <__sfvwrite_r+0x15a>
    1f8a:	6823      	ldr	r3, [r4, #0]
    1f8c:	6921      	ldr	r1, [r4, #16]
    1f8e:	eba3 0b01 	sub.w	fp, r3, r1
    1f92:	6963      	ldr	r3, [r4, #20]
    1f94:	eb03 0a43 	add.w	sl, r3, r3, lsl #1
    1f98:	eb0a 7ada 	add.w	sl, sl, sl, lsr #31
    1f9c:	f10b 0301 	add.w	r3, fp, #1
    1fa0:	ea4f 0a6a 	mov.w	sl, sl, asr #1
    1fa4:	4433      	add	r3, r6
    1fa6:	4553      	cmp	r3, sl
    1fa8:	4652      	mov	r2, sl
    1faa:	bf84      	itt	hi
    1fac:	469a      	movhi	sl, r3
    1fae:	4652      	movhi	r2, sl
    1fb0:	0543      	lsls	r3, r0, #21
    1fb2:	d52c      	bpl.n	200e <__sfvwrite_r+0x2b2>
    1fb4:	4611      	mov	r1, r2
    1fb6:	4640      	mov	r0, r8
    1fb8:	f000 f8e8 	bl	218c <_malloc_r>
    1fbc:	2800      	cmp	r0, #0
    1fbe:	d03b      	beq.n	2038 <__sfvwrite_r+0x2dc>
    1fc0:	465a      	mov	r2, fp
    1fc2:	6921      	ldr	r1, [r4, #16]
    1fc4:	9001      	str	r0, [sp, #4]
    1fc6:	f000 fbfb 	bl	27c0 <memcpy>
    1fca:	89a2      	ldrh	r2, [r4, #12]
    1fcc:	9b01      	ldr	r3, [sp, #4]
    1fce:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
    1fd2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
    1fd6:	81a2      	strh	r2, [r4, #12]
    1fd8:	eb03 000b 	add.w	r0, r3, fp
    1fdc:	6123      	str	r3, [r4, #16]
    1fde:	ebaa 030b 	sub.w	r3, sl, fp
    1fe2:	f8c4 a014 	str.w	sl, [r4, #20]
    1fe6:	60a3      	str	r3, [r4, #8]
    1fe8:	6020      	str	r0, [r4, #0]
    1fea:	46b3      	mov	fp, r6
    1fec:	4632      	mov	r2, r6
    1fee:	e70c      	b.n	1e0a <__sfvwrite_r+0xae>
    1ff0:	4639      	mov	r1, r7
    1ff2:	465a      	mov	r2, fp
    1ff4:	f000 fc7e 	bl	28f4 <memmove>
    1ff8:	6823      	ldr	r3, [r4, #0]
    1ffa:	445b      	add	r3, fp
    1ffc:	6023      	str	r3, [r4, #0]
    1ffe:	4621      	mov	r1, r4
    2000:	4640      	mov	r0, r8
    2002:	f7ff fc5b 	bl	18bc <_fflush_r>
    2006:	2800      	cmp	r0, #0
    2008:	f43f af55 	beq.w	1eb6 <__sfvwrite_r+0x15a>
    200c:	e725      	b.n	1e5a <__sfvwrite_r+0xfe>
    200e:	4640      	mov	r0, r8
    2010:	f000 fcf0 	bl	29f4 <_realloc_r>
    2014:	4603      	mov	r3, r0
    2016:	2800      	cmp	r0, #0
    2018:	d1de      	bne.n	1fd8 <__sfvwrite_r+0x27c>
    201a:	6921      	ldr	r1, [r4, #16]
    201c:	4640      	mov	r0, r8
    201e:	f7ff fd97 	bl	1b50 <_free_r>
    2022:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    2026:	220c      	movs	r2, #12
    2028:	f023 0380 	bic.w	r3, r3, #128	; 0x80
    202c:	f8c8 2000 	str.w	r2, [r8]
    2030:	e715      	b.n	1e5e <__sfvwrite_r+0x102>
    2032:	1c72      	adds	r2, r6, #1
    2034:	4691      	mov	r9, r2
    2036:	e726      	b.n	1e86 <__sfvwrite_r+0x12a>
    2038:	220c      	movs	r2, #12
    203a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    203e:	f8c8 2000 	str.w	r2, [r8]
    2042:	e70c      	b.n	1e5e <__sfvwrite_r+0x102>
    2044:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    2048:	e6ba      	b.n	1dc0 <__sfvwrite_r+0x64>
    204a:	bf00      	nop
    204c:	7ffffc00 	.word	0x7ffffc00

00002050 <_fwalk_reent>:
    2050:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    2054:	4607      	mov	r7, r0
    2056:	4688      	mov	r8, r1
    2058:	f500 7638 	add.w	r6, r0, #736	; 0x2e0
    205c:	f04f 0900 	mov.w	r9, #0
    2060:	e9d6 5401 	ldrd	r5, r4, [r6, #4]
    2064:	3d01      	subs	r5, #1
    2066:	d411      	bmi.n	208c <_fwalk_reent+0x3c>
    2068:	89a3      	ldrh	r3, [r4, #12]
    206a:	2b01      	cmp	r3, #1
    206c:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
    2070:	d908      	bls.n	2084 <_fwalk_reent+0x34>
    2072:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
    2076:	3301      	adds	r3, #1
    2078:	4621      	mov	r1, r4
    207a:	d003      	beq.n	2084 <_fwalk_reent+0x34>
    207c:	4638      	mov	r0, r7
    207e:	47c0      	blx	r8
    2080:	ea49 0900 	orr.w	r9, r9, r0
    2084:	1c6b      	adds	r3, r5, #1
    2086:	f104 0468 	add.w	r4, r4, #104	; 0x68
    208a:	d1ed      	bne.n	2068 <_fwalk_reent+0x18>
    208c:	6836      	ldr	r6, [r6, #0]
    208e:	2e00      	cmp	r6, #0
    2090:	d1e6      	bne.n	2060 <_fwalk_reent+0x10>
    2092:	4648      	mov	r0, r9
    2094:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

00002098 <__locale_mb_cur_max>:
    2098:	4b01      	ldr	r3, [pc, #4]	; (20a0 <__locale_mb_cur_max+0x8>)
    209a:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
    209e:	4770      	bx	lr
    20a0:	20000430 	.word	0x20000430

000020a4 <_localeconv_r>:
    20a4:	4800      	ldr	r0, [pc, #0]	; (20a8 <_localeconv_r+0x4>)
    20a6:	4770      	bx	lr
    20a8:	20000520 	.word	0x20000520

000020ac <__smakebuf_r>:
    20ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    20b0:	898b      	ldrh	r3, [r1, #12]
    20b2:	460c      	mov	r4, r1
    20b4:	0799      	lsls	r1, r3, #30
    20b6:	b096      	sub	sp, #88	; 0x58
    20b8:	d508      	bpl.n	20cc <__smakebuf_r+0x20>
    20ba:	f104 0343 	add.w	r3, r4, #67	; 0x43
    20be:	2201      	movs	r2, #1
    20c0:	e9c4 3204 	strd	r3, r2, [r4, #16]
    20c4:	6023      	str	r3, [r4, #0]
    20c6:	b016      	add	sp, #88	; 0x58
    20c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    20cc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    20d0:	2900      	cmp	r1, #0
    20d2:	4606      	mov	r6, r0
    20d4:	db27      	blt.n	2126 <__smakebuf_r+0x7a>
    20d6:	466a      	mov	r2, sp
    20d8:	f001 f8da 	bl	3290 <_fstat_r>
    20dc:	2800      	cmp	r0, #0
    20de:	db21      	blt.n	2124 <__smakebuf_r+0x78>
    20e0:	9d01      	ldr	r5, [sp, #4]
    20e2:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
    20e6:	f5a5 5500 	sub.w	r5, r5, #8192	; 0x2000
    20ea:	fab5 f585 	clz	r5, r5
    20ee:	f44f 6880 	mov.w	r8, #1024	; 0x400
    20f2:	096d      	lsrs	r5, r5, #5
    20f4:	f44f 6700 	mov.w	r7, #2048	; 0x800
    20f8:	4641      	mov	r1, r8
    20fa:	4630      	mov	r0, r6
    20fc:	f000 f846 	bl	218c <_malloc_r>
    2100:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    2104:	b1f0      	cbz	r0, 2144 <__smakebuf_r+0x98>
    2106:	4a20      	ldr	r2, [pc, #128]	; (2188 <__smakebuf_r+0xdc>)
    2108:	63f2      	str	r2, [r6, #60]	; 0x3c
    210a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    210e:	f8c4 8014 	str.w	r8, [r4, #20]
    2112:	81a3      	strh	r3, [r4, #12]
    2114:	6020      	str	r0, [r4, #0]
    2116:	6120      	str	r0, [r4, #16]
    2118:	bb35      	cbnz	r5, 2168 <__smakebuf_r+0xbc>
    211a:	433b      	orrs	r3, r7
    211c:	81a3      	strh	r3, [r4, #12]
    211e:	b016      	add	sp, #88	; 0x58
    2120:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    2124:	89a3      	ldrh	r3, [r4, #12]
    2126:	f013 0580 	ands.w	r5, r3, #128	; 0x80
    212a:	d019      	beq.n	2160 <__smakebuf_r+0xb4>
    212c:	f04f 0840 	mov.w	r8, #64	; 0x40
    2130:	4641      	mov	r1, r8
    2132:	4630      	mov	r0, r6
    2134:	f000 f82a 	bl	218c <_malloc_r>
    2138:	2500      	movs	r5, #0
    213a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    213e:	462f      	mov	r7, r5
    2140:	2800      	cmp	r0, #0
    2142:	d1e0      	bne.n	2106 <__smakebuf_r+0x5a>
    2144:	059a      	lsls	r2, r3, #22
    2146:	d4be      	bmi.n	20c6 <__smakebuf_r+0x1a>
    2148:	f023 0303 	bic.w	r3, r3, #3
    214c:	f104 0243 	add.w	r2, r4, #67	; 0x43
    2150:	f043 0302 	orr.w	r3, r3, #2
    2154:	2101      	movs	r1, #1
    2156:	e9c4 2104 	strd	r2, r1, [r4, #16]
    215a:	81a3      	strh	r3, [r4, #12]
    215c:	6022      	str	r2, [r4, #0]
    215e:	e7b2      	b.n	20c6 <__smakebuf_r+0x1a>
    2160:	f44f 6880 	mov.w	r8, #1024	; 0x400
    2164:	462f      	mov	r7, r5
    2166:	e7c7      	b.n	20f8 <__smakebuf_r+0x4c>
    2168:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    216c:	4630      	mov	r0, r6
    216e:	f001 f8a5 	bl	32bc <_isatty_r>
    2172:	b910      	cbnz	r0, 217a <__smakebuf_r+0xce>
    2174:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    2178:	e7cf      	b.n	211a <__smakebuf_r+0x6e>
    217a:	89a3      	ldrh	r3, [r4, #12]
    217c:	f023 0303 	bic.w	r3, r3, #3
    2180:	f043 0301 	orr.w	r3, r3, #1
    2184:	b21b      	sxth	r3, r3
    2186:	e7c8      	b.n	211a <__smakebuf_r+0x6e>
    2188:	000018e9 	.word	0x000018e9

0000218c <_malloc_r>:
    218c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2190:	f101 060b 	add.w	r6, r1, #11
    2194:	2e16      	cmp	r6, #22
    2196:	b083      	sub	sp, #12
    2198:	4604      	mov	r4, r0
    219a:	d824      	bhi.n	21e6 <_malloc_r+0x5a>
    219c:	2910      	cmp	r1, #16
    219e:	f200 80ba 	bhi.w	2316 <_malloc_r+0x18a>
    21a2:	f000 fc23 	bl	29ec <__malloc_lock>
    21a6:	2610      	movs	r6, #16
    21a8:	2218      	movs	r2, #24
    21aa:	2002      	movs	r0, #2
    21ac:	4fb5      	ldr	r7, [pc, #724]	; (2484 <_malloc_r+0x2f8>)
    21ae:	443a      	add	r2, r7
    21b0:	f1a2 0108 	sub.w	r1, r2, #8
    21b4:	6853      	ldr	r3, [r2, #4]
    21b6:	428b      	cmp	r3, r1
    21b8:	f000 80ba 	beq.w	2330 <_malloc_r+0x1a4>
    21bc:	685a      	ldr	r2, [r3, #4]
    21be:	68d9      	ldr	r1, [r3, #12]
    21c0:	f022 0203 	bic.w	r2, r2, #3
    21c4:	441a      	add	r2, r3
    21c6:	689d      	ldr	r5, [r3, #8]
    21c8:	60e9      	str	r1, [r5, #12]
    21ca:	608d      	str	r5, [r1, #8]
    21cc:	6851      	ldr	r1, [r2, #4]
    21ce:	f041 0101 	orr.w	r1, r1, #1
    21d2:	4620      	mov	r0, r4
    21d4:	6051      	str	r1, [r2, #4]
    21d6:	f103 0508 	add.w	r5, r3, #8
    21da:	f000 fc09 	bl	29f0 <__malloc_unlock>
    21de:	4628      	mov	r0, r5
    21e0:	b003      	add	sp, #12
    21e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    21e6:	f036 0607 	bics.w	r6, r6, #7
    21ea:	f100 8094 	bmi.w	2316 <_malloc_r+0x18a>
    21ee:	42b1      	cmp	r1, r6
    21f0:	f200 8091 	bhi.w	2316 <_malloc_r+0x18a>
    21f4:	f000 fbfa 	bl	29ec <__malloc_lock>
    21f8:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
    21fc:	f0c0 819a 	bcc.w	2534 <_malloc_r+0x3a8>
    2200:	0a73      	lsrs	r3, r6, #9
    2202:	f000 808f 	beq.w	2324 <_malloc_r+0x198>
    2206:	2b04      	cmp	r3, #4
    2208:	f200 816f 	bhi.w	24ea <_malloc_r+0x35e>
    220c:	09b3      	lsrs	r3, r6, #6
    220e:	f103 0039 	add.w	r0, r3, #57	; 0x39
    2212:	f103 0c38 	add.w	ip, r3, #56	; 0x38
    2216:	00c3      	lsls	r3, r0, #3
    2218:	4f9a      	ldr	r7, [pc, #616]	; (2484 <_malloc_r+0x2f8>)
    221a:	443b      	add	r3, r7
    221c:	f1a3 0508 	sub.w	r5, r3, #8
    2220:	685b      	ldr	r3, [r3, #4]
    2222:	429d      	cmp	r5, r3
    2224:	d106      	bne.n	2234 <_malloc_r+0xa8>
    2226:	e00c      	b.n	2242 <_malloc_r+0xb6>
    2228:	2900      	cmp	r1, #0
    222a:	f280 8127 	bge.w	247c <_malloc_r+0x2f0>
    222e:	68db      	ldr	r3, [r3, #12]
    2230:	429d      	cmp	r5, r3
    2232:	d006      	beq.n	2242 <_malloc_r+0xb6>
    2234:	685a      	ldr	r2, [r3, #4]
    2236:	f022 0203 	bic.w	r2, r2, #3
    223a:	1b91      	subs	r1, r2, r6
    223c:	290f      	cmp	r1, #15
    223e:	ddf3      	ble.n	2228 <_malloc_r+0x9c>
    2240:	4660      	mov	r0, ip
    2242:	693d      	ldr	r5, [r7, #16]
    2244:	f8df c250 	ldr.w	ip, [pc, #592]	; 2498 <_malloc_r+0x30c>
    2248:	4565      	cmp	r5, ip
    224a:	d07c      	beq.n	2346 <_malloc_r+0x1ba>
    224c:	686a      	ldr	r2, [r5, #4]
    224e:	f022 0203 	bic.w	r2, r2, #3
    2252:	1b93      	subs	r3, r2, r6
    2254:	2b0f      	cmp	r3, #15
    2256:	f300 817b 	bgt.w	2550 <_malloc_r+0x3c4>
    225a:	2b00      	cmp	r3, #0
    225c:	e9c7 cc04 	strd	ip, ip, [r7, #16]
    2260:	f280 816c 	bge.w	253c <_malloc_r+0x3b0>
    2264:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
    2268:	f080 811a 	bcs.w	24a0 <_malloc_r+0x314>
    226c:	08d3      	lsrs	r3, r2, #3
    226e:	6879      	ldr	r1, [r7, #4]
    2270:	3301      	adds	r3, #1
    2272:	ea4f 1e52 	mov.w	lr, r2, lsr #5
    2276:	2201      	movs	r2, #1
    2278:	fa02 f20e 	lsl.w	r2, r2, lr
    227c:	430a      	orrs	r2, r1
    227e:	f857 e033 	ldr.w	lr, [r7, r3, lsl #3]
    2282:	f8c5 e008 	str.w	lr, [r5, #8]
    2286:	eb07 01c3 	add.w	r1, r7, r3, lsl #3
    228a:	3908      	subs	r1, #8
    228c:	60e9      	str	r1, [r5, #12]
    228e:	607a      	str	r2, [r7, #4]
    2290:	f847 5033 	str.w	r5, [r7, r3, lsl #3]
    2294:	f8ce 500c 	str.w	r5, [lr, #12]
    2298:	1083      	asrs	r3, r0, #2
    229a:	2101      	movs	r1, #1
    229c:	4099      	lsls	r1, r3
    229e:	4291      	cmp	r1, r2
    22a0:	d857      	bhi.n	2352 <_malloc_r+0x1c6>
    22a2:	4211      	tst	r1, r2
    22a4:	d106      	bne.n	22b4 <_malloc_r+0x128>
    22a6:	f020 0003 	bic.w	r0, r0, #3
    22aa:	0049      	lsls	r1, r1, #1
    22ac:	4211      	tst	r1, r2
    22ae:	f100 0004 	add.w	r0, r0, #4
    22b2:	d0fa      	beq.n	22aa <_malloc_r+0x11e>
    22b4:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
    22b8:	464d      	mov	r5, r9
    22ba:	4686      	mov	lr, r0
    22bc:	f8d5 800c 	ldr.w	r8, [r5, #12]
    22c0:	4545      	cmp	r5, r8
    22c2:	d108      	bne.n	22d6 <_malloc_r+0x14a>
    22c4:	e11d      	b.n	2502 <_malloc_r+0x376>
    22c6:	2b00      	cmp	r3, #0
    22c8:	f280 8124 	bge.w	2514 <_malloc_r+0x388>
    22cc:	f8d8 800c 	ldr.w	r8, [r8, #12]
    22d0:	4545      	cmp	r5, r8
    22d2:	f000 8116 	beq.w	2502 <_malloc_r+0x376>
    22d6:	f8d8 2004 	ldr.w	r2, [r8, #4]
    22da:	f022 0203 	bic.w	r2, r2, #3
    22de:	1b93      	subs	r3, r2, r6
    22e0:	2b0f      	cmp	r3, #15
    22e2:	ddf0      	ble.n	22c6 <_malloc_r+0x13a>
    22e4:	4620      	mov	r0, r4
    22e6:	e9d8 5402 	ldrd	r5, r4, [r8, #8]
    22ea:	eb08 0106 	add.w	r1, r8, r6
    22ee:	f046 0601 	orr.w	r6, r6, #1
    22f2:	f8c8 6004 	str.w	r6, [r8, #4]
    22f6:	60ec      	str	r4, [r5, #12]
    22f8:	60a5      	str	r5, [r4, #8]
    22fa:	f043 0401 	orr.w	r4, r3, #1
    22fe:	e9c7 1104 	strd	r1, r1, [r7, #16]
    2302:	e9c1 cc02 	strd	ip, ip, [r1, #8]
    2306:	604c      	str	r4, [r1, #4]
    2308:	f848 3002 	str.w	r3, [r8, r2]
    230c:	f000 fb70 	bl	29f0 <__malloc_unlock>
    2310:	f108 0508 	add.w	r5, r8, #8
    2314:	e002      	b.n	231c <_malloc_r+0x190>
    2316:	230c      	movs	r3, #12
    2318:	6023      	str	r3, [r4, #0]
    231a:	2500      	movs	r5, #0
    231c:	4628      	mov	r0, r5
    231e:	b003      	add	sp, #12
    2320:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2324:	f44f 7300 	mov.w	r3, #512	; 0x200
    2328:	2040      	movs	r0, #64	; 0x40
    232a:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
    232e:	e773      	b.n	2218 <_malloc_r+0x8c>
    2330:	68d3      	ldr	r3, [r2, #12]
    2332:	429a      	cmp	r2, r3
    2334:	bf08      	it	eq
    2336:	3002      	addeq	r0, #2
    2338:	f47f af40 	bne.w	21bc <_malloc_r+0x30>
    233c:	693d      	ldr	r5, [r7, #16]
    233e:	f8df c158 	ldr.w	ip, [pc, #344]	; 2498 <_malloc_r+0x30c>
    2342:	4565      	cmp	r5, ip
    2344:	d182      	bne.n	224c <_malloc_r+0xc0>
    2346:	687a      	ldr	r2, [r7, #4]
    2348:	1083      	asrs	r3, r0, #2
    234a:	2101      	movs	r1, #1
    234c:	4099      	lsls	r1, r3
    234e:	4291      	cmp	r1, r2
    2350:	d9a7      	bls.n	22a2 <_malloc_r+0x116>
    2352:	68bd      	ldr	r5, [r7, #8]
    2354:	686b      	ldr	r3, [r5, #4]
    2356:	f023 0903 	bic.w	r9, r3, #3
    235a:	454e      	cmp	r6, r9
    235c:	d803      	bhi.n	2366 <_malloc_r+0x1da>
    235e:	eba9 0306 	sub.w	r3, r9, r6
    2362:	2b0f      	cmp	r3, #15
    2364:	dc7a      	bgt.n	245c <_malloc_r+0x2d0>
    2366:	f8df b134 	ldr.w	fp, [pc, #308]	; 249c <_malloc_r+0x310>
    236a:	4b47      	ldr	r3, [pc, #284]	; (2488 <_malloc_r+0x2fc>)
    236c:	f8db 2000 	ldr.w	r2, [fp]
    2370:	681b      	ldr	r3, [r3, #0]
    2372:	3201      	adds	r2, #1
    2374:	4433      	add	r3, r6
    2376:	eb05 0a09 	add.w	sl, r5, r9
    237a:	f000 8133 	beq.w	25e4 <_malloc_r+0x458>
    237e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
    2382:	330f      	adds	r3, #15
    2384:	f423 687f 	bic.w	r8, r3, #4080	; 0xff0
    2388:	f028 080f 	bic.w	r8, r8, #15
    238c:	4641      	mov	r1, r8
    238e:	4620      	mov	r0, r4
    2390:	f000 fd1c 	bl	2dcc <_sbrk_r>
    2394:	1c41      	adds	r1, r0, #1
    2396:	4602      	mov	r2, r0
    2398:	f000 80f3 	beq.w	2582 <_malloc_r+0x3f6>
    239c:	4582      	cmp	sl, r0
    239e:	f200 80ee 	bhi.w	257e <_malloc_r+0x3f2>
    23a2:	4b3a      	ldr	r3, [pc, #232]	; (248c <_malloc_r+0x300>)
    23a4:	6819      	ldr	r1, [r3, #0]
    23a6:	4441      	add	r1, r8
    23a8:	6019      	str	r1, [r3, #0]
    23aa:	4608      	mov	r0, r1
    23ac:	f000 814e 	beq.w	264c <_malloc_r+0x4c0>
    23b0:	f8db 1000 	ldr.w	r1, [fp]
    23b4:	9301      	str	r3, [sp, #4]
    23b6:	3101      	adds	r1, #1
    23b8:	bf1b      	ittet	ne
    23ba:	eba2 010a 	subne.w	r1, r2, sl
    23be:	1809      	addne	r1, r1, r0
    23c0:	f8cb 2000 	streq.w	r2, [fp]
    23c4:	6019      	strne	r1, [r3, #0]
    23c6:	f012 0b07 	ands.w	fp, r2, #7
    23ca:	f000 8117 	beq.w	25fc <_malloc_r+0x470>
    23ce:	f1cb 0108 	rsb	r1, fp, #8
    23d2:	440a      	add	r2, r1
    23d4:	f5cb 5180 	rsb	r1, fp, #4096	; 0x1000
    23d8:	4490      	add	r8, r2
    23da:	3108      	adds	r1, #8
    23dc:	eba1 0108 	sub.w	r1, r1, r8
    23e0:	f3c1 0a0b 	ubfx	sl, r1, #0, #12
    23e4:	4651      	mov	r1, sl
    23e6:	4620      	mov	r0, r4
    23e8:	9200      	str	r2, [sp, #0]
    23ea:	f000 fcef 	bl	2dcc <_sbrk_r>
    23ee:	1c42      	adds	r2, r0, #1
    23f0:	e9dd 2300 	ldrd	r2, r3, [sp]
    23f4:	f000 814f 	beq.w	2696 <_malloc_r+0x50a>
    23f8:	1a80      	subs	r0, r0, r2
    23fa:	eb00 080a 	add.w	r8, r0, sl
    23fe:	6819      	ldr	r1, [r3, #0]
    2400:	60ba      	str	r2, [r7, #8]
    2402:	f048 0001 	orr.w	r0, r8, #1
    2406:	4451      	add	r1, sl
    2408:	42bd      	cmp	r5, r7
    240a:	6050      	str	r0, [r2, #4]
    240c:	6019      	str	r1, [r3, #0]
    240e:	f000 8129 	beq.w	2664 <_malloc_r+0x4d8>
    2412:	f1b9 0f0f 	cmp.w	r9, #15
    2416:	f240 8127 	bls.w	2668 <_malloc_r+0x4dc>
    241a:	6868      	ldr	r0, [r5, #4]
    241c:	f1a9 0c0c 	sub.w	ip, r9, #12
    2420:	f02c 0c07 	bic.w	ip, ip, #7
    2424:	f000 0001 	and.w	r0, r0, #1
    2428:	ea40 000c 	orr.w	r0, r0, ip
    242c:	6068      	str	r0, [r5, #4]
    242e:	f04f 0e05 	mov.w	lr, #5
    2432:	eb05 000c 	add.w	r0, r5, ip
    2436:	f1bc 0f0f 	cmp.w	ip, #15
    243a:	e9c0 ee01 	strd	lr, lr, [r0, #4]
    243e:	f200 8132 	bhi.w	26a6 <_malloc_r+0x51a>
    2442:	6850      	ldr	r0, [r2, #4]
    2444:	4615      	mov	r5, r2
    2446:	4b12      	ldr	r3, [pc, #72]	; (2490 <_malloc_r+0x304>)
    2448:	681a      	ldr	r2, [r3, #0]
    244a:	428a      	cmp	r2, r1
    244c:	bf38      	it	cc
    244e:	6019      	strcc	r1, [r3, #0]
    2450:	4b10      	ldr	r3, [pc, #64]	; (2494 <_malloc_r+0x308>)
    2452:	681a      	ldr	r2, [r3, #0]
    2454:	428a      	cmp	r2, r1
    2456:	bf38      	it	cc
    2458:	6019      	strcc	r1, [r3, #0]
    245a:	e094      	b.n	2586 <_malloc_r+0x3fa>
    245c:	19aa      	adds	r2, r5, r6
    245e:	f043 0301 	orr.w	r3, r3, #1
    2462:	f046 0601 	orr.w	r6, r6, #1
    2466:	606e      	str	r6, [r5, #4]
    2468:	4620      	mov	r0, r4
    246a:	60ba      	str	r2, [r7, #8]
    246c:	6053      	str	r3, [r2, #4]
    246e:	f000 fabf 	bl	29f0 <__malloc_unlock>
    2472:	3508      	adds	r5, #8
    2474:	4628      	mov	r0, r5
    2476:	b003      	add	sp, #12
    2478:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    247c:	68d9      	ldr	r1, [r3, #12]
    247e:	441a      	add	r2, r3
    2480:	e6a1      	b.n	21c6 <_malloc_r+0x3a>
    2482:	bf00      	nop
    2484:	2000059c 	.word	0x2000059c
    2488:	20000adc 	.word	0x20000adc
    248c:	20000aac 	.word	0x20000aac
    2490:	20000ad4 	.word	0x20000ad4
    2494:	20000ad8 	.word	0x20000ad8
    2498:	200005a4 	.word	0x200005a4
    249c:	200009a4 	.word	0x200009a4
    24a0:	f5b2 6f20 	cmp.w	r2, #2560	; 0xa00
    24a4:	ea4f 2352 	mov.w	r3, r2, lsr #9
    24a8:	d363      	bcc.n	2572 <_malloc_r+0x3e6>
    24aa:	2b14      	cmp	r3, #20
    24ac:	f200 80b7 	bhi.w	261e <_malloc_r+0x492>
    24b0:	f103 015c 	add.w	r1, r3, #92	; 0x5c
    24b4:	00c9      	lsls	r1, r1, #3
    24b6:	335b      	adds	r3, #91	; 0x5b
    24b8:	eb07 0e01 	add.w	lr, r7, r1
    24bc:	5879      	ldr	r1, [r7, r1]
    24be:	f1ae 0e08 	sub.w	lr, lr, #8
    24c2:	458e      	cmp	lr, r1
    24c4:	f000 8091 	beq.w	25ea <_malloc_r+0x45e>
    24c8:	684b      	ldr	r3, [r1, #4]
    24ca:	f023 0303 	bic.w	r3, r3, #3
    24ce:	4293      	cmp	r3, r2
    24d0:	d902      	bls.n	24d8 <_malloc_r+0x34c>
    24d2:	6889      	ldr	r1, [r1, #8]
    24d4:	458e      	cmp	lr, r1
    24d6:	d1f7      	bne.n	24c8 <_malloc_r+0x33c>
    24d8:	f8d1 e00c 	ldr.w	lr, [r1, #12]
    24dc:	687a      	ldr	r2, [r7, #4]
    24de:	e9c5 1e02 	strd	r1, lr, [r5, #8]
    24e2:	f8ce 5008 	str.w	r5, [lr, #8]
    24e6:	60cd      	str	r5, [r1, #12]
    24e8:	e6d6      	b.n	2298 <_malloc_r+0x10c>
    24ea:	2b14      	cmp	r3, #20
    24ec:	d959      	bls.n	25a2 <_malloc_r+0x416>
    24ee:	2b54      	cmp	r3, #84	; 0x54
    24f0:	f200 809d 	bhi.w	262e <_malloc_r+0x4a2>
    24f4:	0b33      	lsrs	r3, r6, #12
    24f6:	f103 006f 	add.w	r0, r3, #111	; 0x6f
    24fa:	f103 0c6e 	add.w	ip, r3, #110	; 0x6e
    24fe:	00c3      	lsls	r3, r0, #3
    2500:	e68a      	b.n	2218 <_malloc_r+0x8c>
    2502:	f10e 0e01 	add.w	lr, lr, #1
    2506:	f01e 0f03 	tst.w	lr, #3
    250a:	f105 0508 	add.w	r5, r5, #8
    250e:	f47f aed5 	bne.w	22bc <_malloc_r+0x130>
    2512:	e051      	b.n	25b8 <_malloc_r+0x42c>
    2514:	4442      	add	r2, r8
    2516:	4645      	mov	r5, r8
    2518:	6853      	ldr	r3, [r2, #4]
    251a:	f8d8 100c 	ldr.w	r1, [r8, #12]
    251e:	f043 0301 	orr.w	r3, r3, #1
    2522:	6053      	str	r3, [r2, #4]
    2524:	f855 3f08 	ldr.w	r3, [r5, #8]!
    2528:	4620      	mov	r0, r4
    252a:	60d9      	str	r1, [r3, #12]
    252c:	608b      	str	r3, [r1, #8]
    252e:	f000 fa5f 	bl	29f0 <__malloc_unlock>
    2532:	e6f3      	b.n	231c <_malloc_r+0x190>
    2534:	08f0      	lsrs	r0, r6, #3
    2536:	f106 0208 	add.w	r2, r6, #8
    253a:	e637      	b.n	21ac <_malloc_r+0x20>
    253c:	442a      	add	r2, r5
    253e:	4620      	mov	r0, r4
    2540:	6853      	ldr	r3, [r2, #4]
    2542:	f043 0301 	orr.w	r3, r3, #1
    2546:	6053      	str	r3, [r2, #4]
    2548:	3508      	adds	r5, #8
    254a:	f000 fa51 	bl	29f0 <__malloc_unlock>
    254e:	e6e5      	b.n	231c <_malloc_r+0x190>
    2550:	19a9      	adds	r1, r5, r6
    2552:	4620      	mov	r0, r4
    2554:	f046 0601 	orr.w	r6, r6, #1
    2558:	f043 0401 	orr.w	r4, r3, #1
    255c:	606e      	str	r6, [r5, #4]
    255e:	e9c7 1104 	strd	r1, r1, [r7, #16]
    2562:	e9c1 cc02 	strd	ip, ip, [r1, #8]
    2566:	604c      	str	r4, [r1, #4]
    2568:	50ab      	str	r3, [r5, r2]
    256a:	f000 fa41 	bl	29f0 <__malloc_unlock>
    256e:	3508      	adds	r5, #8
    2570:	e6d4      	b.n	231c <_malloc_r+0x190>
    2572:	0993      	lsrs	r3, r2, #6
    2574:	f103 0139 	add.w	r1, r3, #57	; 0x39
    2578:	00c9      	lsls	r1, r1, #3
    257a:	3338      	adds	r3, #56	; 0x38
    257c:	e79c      	b.n	24b8 <_malloc_r+0x32c>
    257e:	42bd      	cmp	r5, r7
    2580:	d05f      	beq.n	2642 <_malloc_r+0x4b6>
    2582:	68bd      	ldr	r5, [r7, #8]
    2584:	6868      	ldr	r0, [r5, #4]
    2586:	f020 0803 	bic.w	r8, r0, #3
    258a:	4546      	cmp	r6, r8
    258c:	eba8 0306 	sub.w	r3, r8, r6
    2590:	d802      	bhi.n	2598 <_malloc_r+0x40c>
    2592:	2b0f      	cmp	r3, #15
    2594:	f73f af62 	bgt.w	245c <_malloc_r+0x2d0>
    2598:	4620      	mov	r0, r4
    259a:	f000 fa29 	bl	29f0 <__malloc_unlock>
    259e:	2500      	movs	r5, #0
    25a0:	e6bc      	b.n	231c <_malloc_r+0x190>
    25a2:	f103 005c 	add.w	r0, r3, #92	; 0x5c
    25a6:	f103 0c5b 	add.w	ip, r3, #91	; 0x5b
    25aa:	00c3      	lsls	r3, r0, #3
    25ac:	e634      	b.n	2218 <_malloc_r+0x8c>
    25ae:	f859 3908 	ldr.w	r3, [r9], #-8
    25b2:	454b      	cmp	r3, r9
    25b4:	f040 8096 	bne.w	26e4 <_malloc_r+0x558>
    25b8:	f010 0f03 	tst.w	r0, #3
    25bc:	f100 30ff 	add.w	r0, r0, #4294967295	; 0xffffffff
    25c0:	d1f5      	bne.n	25ae <_malloc_r+0x422>
    25c2:	687b      	ldr	r3, [r7, #4]
    25c4:	ea23 0301 	bic.w	r3, r3, r1
    25c8:	607b      	str	r3, [r7, #4]
    25ca:	0049      	lsls	r1, r1, #1
    25cc:	4299      	cmp	r1, r3
    25ce:	f63f aec0 	bhi.w	2352 <_malloc_r+0x1c6>
    25d2:	b919      	cbnz	r1, 25dc <_malloc_r+0x450>
    25d4:	e6bd      	b.n	2352 <_malloc_r+0x1c6>
    25d6:	0049      	lsls	r1, r1, #1
    25d8:	f10e 0e04 	add.w	lr, lr, #4
    25dc:	4219      	tst	r1, r3
    25de:	d0fa      	beq.n	25d6 <_malloc_r+0x44a>
    25e0:	4670      	mov	r0, lr
    25e2:	e667      	b.n	22b4 <_malloc_r+0x128>
    25e4:	f103 0810 	add.w	r8, r3, #16
    25e8:	e6d0      	b.n	238c <_malloc_r+0x200>
    25ea:	109a      	asrs	r2, r3, #2
    25ec:	f04f 0801 	mov.w	r8, #1
    25f0:	687b      	ldr	r3, [r7, #4]
    25f2:	fa08 f202 	lsl.w	r2, r8, r2
    25f6:	431a      	orrs	r2, r3
    25f8:	607a      	str	r2, [r7, #4]
    25fa:	e770      	b.n	24de <_malloc_r+0x352>
    25fc:	eb02 0108 	add.w	r1, r2, r8
    2600:	4249      	negs	r1, r1
    2602:	f3c1 0a0b 	ubfx	sl, r1, #0, #12
    2606:	4651      	mov	r1, sl
    2608:	4620      	mov	r0, r4
    260a:	9200      	str	r2, [sp, #0]
    260c:	f000 fbde 	bl	2dcc <_sbrk_r>
    2610:	1c43      	adds	r3, r0, #1
    2612:	e9dd 2300 	ldrd	r2, r3, [sp]
    2616:	f47f aeef 	bne.w	23f8 <_malloc_r+0x26c>
    261a:	46da      	mov	sl, fp
    261c:	e6ef      	b.n	23fe <_malloc_r+0x272>
    261e:	2b54      	cmp	r3, #84	; 0x54
    2620:	d825      	bhi.n	266e <_malloc_r+0x4e2>
    2622:	0b13      	lsrs	r3, r2, #12
    2624:	f103 016f 	add.w	r1, r3, #111	; 0x6f
    2628:	00c9      	lsls	r1, r1, #3
    262a:	336e      	adds	r3, #110	; 0x6e
    262c:	e744      	b.n	24b8 <_malloc_r+0x32c>
    262e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
    2632:	d825      	bhi.n	2680 <_malloc_r+0x4f4>
    2634:	0bf3      	lsrs	r3, r6, #15
    2636:	f103 0078 	add.w	r0, r3, #120	; 0x78
    263a:	f103 0c77 	add.w	ip, r3, #119	; 0x77
    263e:	00c3      	lsls	r3, r0, #3
    2640:	e5ea      	b.n	2218 <_malloc_r+0x8c>
    2642:	4b29      	ldr	r3, [pc, #164]	; (26e8 <_malloc_r+0x55c>)
    2644:	6818      	ldr	r0, [r3, #0]
    2646:	4440      	add	r0, r8
    2648:	6018      	str	r0, [r3, #0]
    264a:	e6b1      	b.n	23b0 <_malloc_r+0x224>
    264c:	f3ca 0c0b 	ubfx	ip, sl, #0, #12
    2650:	f1bc 0f00 	cmp.w	ip, #0
    2654:	f47f aeac 	bne.w	23b0 <_malloc_r+0x224>
    2658:	68bd      	ldr	r5, [r7, #8]
    265a:	44c8      	add	r8, r9
    265c:	f048 0001 	orr.w	r0, r8, #1
    2660:	6068      	str	r0, [r5, #4]
    2662:	e6f0      	b.n	2446 <_malloc_r+0x2ba>
    2664:	4615      	mov	r5, r2
    2666:	e6ee      	b.n	2446 <_malloc_r+0x2ba>
    2668:	2301      	movs	r3, #1
    266a:	6053      	str	r3, [r2, #4]
    266c:	e794      	b.n	2598 <_malloc_r+0x40c>
    266e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
    2672:	d823      	bhi.n	26bc <_malloc_r+0x530>
    2674:	0bd3      	lsrs	r3, r2, #15
    2676:	f103 0178 	add.w	r1, r3, #120	; 0x78
    267a:	00c9      	lsls	r1, r1, #3
    267c:	3377      	adds	r3, #119	; 0x77
    267e:	e71b      	b.n	24b8 <_malloc_r+0x32c>
    2680:	f240 5254 	movw	r2, #1364	; 0x554
    2684:	4293      	cmp	r3, r2
    2686:	d823      	bhi.n	26d0 <_malloc_r+0x544>
    2688:	0cb3      	lsrs	r3, r6, #18
    268a:	f103 007d 	add.w	r0, r3, #125	; 0x7d
    268e:	f103 0c7c 	add.w	ip, r3, #124	; 0x7c
    2692:	00c3      	lsls	r3, r0, #3
    2694:	e5c0      	b.n	2218 <_malloc_r+0x8c>
    2696:	f1ab 0b08 	sub.w	fp, fp, #8
    269a:	44d8      	add	r8, fp
    269c:	eba8 0802 	sub.w	r8, r8, r2
    26a0:	f04f 0a00 	mov.w	sl, #0
    26a4:	e6ab      	b.n	23fe <_malloc_r+0x272>
    26a6:	f105 0108 	add.w	r1, r5, #8
    26aa:	4620      	mov	r0, r4
    26ac:	9300      	str	r3, [sp, #0]
    26ae:	f7ff fa4f 	bl	1b50 <_free_r>
    26b2:	68bd      	ldr	r5, [r7, #8]
    26b4:	9b00      	ldr	r3, [sp, #0]
    26b6:	6868      	ldr	r0, [r5, #4]
    26b8:	6819      	ldr	r1, [r3, #0]
    26ba:	e6c4      	b.n	2446 <_malloc_r+0x2ba>
    26bc:	f240 5154 	movw	r1, #1364	; 0x554
    26c0:	428b      	cmp	r3, r1
    26c2:	d80b      	bhi.n	26dc <_malloc_r+0x550>
    26c4:	0c93      	lsrs	r3, r2, #18
    26c6:	f103 017d 	add.w	r1, r3, #125	; 0x7d
    26ca:	00c9      	lsls	r1, r1, #3
    26cc:	337c      	adds	r3, #124	; 0x7c
    26ce:	e6f3      	b.n	24b8 <_malloc_r+0x32c>
    26d0:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
    26d4:	207f      	movs	r0, #127	; 0x7f
    26d6:	f04f 0c7e 	mov.w	ip, #126	; 0x7e
    26da:	e59d      	b.n	2218 <_malloc_r+0x8c>
    26dc:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
    26e0:	237e      	movs	r3, #126	; 0x7e
    26e2:	e6e9      	b.n	24b8 <_malloc_r+0x32c>
    26e4:	687b      	ldr	r3, [r7, #4]
    26e6:	e770      	b.n	25ca <_malloc_r+0x43e>
    26e8:	20000aac 	.word	0x20000aac

000026ec <__ascii_mbtowc>:
    26ec:	b082      	sub	sp, #8
    26ee:	b149      	cbz	r1, 2704 <__ascii_mbtowc+0x18>
    26f0:	b15a      	cbz	r2, 270a <__ascii_mbtowc+0x1e>
    26f2:	b16b      	cbz	r3, 2710 <__ascii_mbtowc+0x24>
    26f4:	7813      	ldrb	r3, [r2, #0]
    26f6:	600b      	str	r3, [r1, #0]
    26f8:	7812      	ldrb	r2, [r2, #0]
    26fa:	1e10      	subs	r0, r2, #0
    26fc:	bf18      	it	ne
    26fe:	2001      	movne	r0, #1
    2700:	b002      	add	sp, #8
    2702:	4770      	bx	lr
    2704:	a901      	add	r1, sp, #4
    2706:	2a00      	cmp	r2, #0
    2708:	d1f3      	bne.n	26f2 <__ascii_mbtowc+0x6>
    270a:	4610      	mov	r0, r2
    270c:	b002      	add	sp, #8
    270e:	4770      	bx	lr
    2710:	f06f 0001 	mvn.w	r0, #1
    2714:	e7f4      	b.n	2700 <__ascii_mbtowc+0x14>
    2716:	bf00      	nop
	...

00002720 <memchr>:
    2720:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    2724:	2a10      	cmp	r2, #16
    2726:	db2b      	blt.n	2780 <memchr+0x60>
    2728:	f010 0f07 	tst.w	r0, #7
    272c:	d008      	beq.n	2740 <memchr+0x20>
    272e:	f810 3b01 	ldrb.w	r3, [r0], #1
    2732:	3a01      	subs	r2, #1
    2734:	428b      	cmp	r3, r1
    2736:	d02d      	beq.n	2794 <memchr+0x74>
    2738:	f010 0f07 	tst.w	r0, #7
    273c:	b342      	cbz	r2, 2790 <memchr+0x70>
    273e:	d1f6      	bne.n	272e <memchr+0xe>
    2740:	b4f0      	push	{r4, r5, r6, r7}
    2742:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
    2746:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
    274a:	f022 0407 	bic.w	r4, r2, #7
    274e:	f07f 0700 	mvns.w	r7, #0
    2752:	2300      	movs	r3, #0
    2754:	e8f0 5602 	ldrd	r5, r6, [r0], #8
    2758:	3c08      	subs	r4, #8
    275a:	ea85 0501 	eor.w	r5, r5, r1
    275e:	ea86 0601 	eor.w	r6, r6, r1
    2762:	fa85 f547 	uadd8	r5, r5, r7
    2766:	faa3 f587 	sel	r5, r3, r7
    276a:	fa86 f647 	uadd8	r6, r6, r7
    276e:	faa5 f687 	sel	r6, r5, r7
    2772:	b98e      	cbnz	r6, 2798 <memchr+0x78>
    2774:	d1ee      	bne.n	2754 <memchr+0x34>
    2776:	bcf0      	pop	{r4, r5, r6, r7}
    2778:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    277c:	f002 0207 	and.w	r2, r2, #7
    2780:	b132      	cbz	r2, 2790 <memchr+0x70>
    2782:	f810 3b01 	ldrb.w	r3, [r0], #1
    2786:	3a01      	subs	r2, #1
    2788:	ea83 0301 	eor.w	r3, r3, r1
    278c:	b113      	cbz	r3, 2794 <memchr+0x74>
    278e:	d1f8      	bne.n	2782 <memchr+0x62>
    2790:	2000      	movs	r0, #0
    2792:	4770      	bx	lr
    2794:	3801      	subs	r0, #1
    2796:	4770      	bx	lr
    2798:	2d00      	cmp	r5, #0
    279a:	bf06      	itte	eq
    279c:	4635      	moveq	r5, r6
    279e:	3803      	subeq	r0, #3
    27a0:	3807      	subne	r0, #7
    27a2:	f015 0f01 	tst.w	r5, #1
    27a6:	d107      	bne.n	27b8 <memchr+0x98>
    27a8:	3001      	adds	r0, #1
    27aa:	f415 7f80 	tst.w	r5, #256	; 0x100
    27ae:	bf02      	ittt	eq
    27b0:	3001      	addeq	r0, #1
    27b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
    27b6:	3001      	addeq	r0, #1
    27b8:	bcf0      	pop	{r4, r5, r6, r7}
    27ba:	3801      	subs	r0, #1
    27bc:	4770      	bx	lr
    27be:	bf00      	nop

000027c0 <memcpy>:
    27c0:	4684      	mov	ip, r0
    27c2:	ea41 0300 	orr.w	r3, r1, r0
    27c6:	f013 0303 	ands.w	r3, r3, #3
    27ca:	d16d      	bne.n	28a8 <memcpy+0xe8>
    27cc:	3a40      	subs	r2, #64	; 0x40
    27ce:	d341      	bcc.n	2854 <memcpy+0x94>
    27d0:	f851 3b04 	ldr.w	r3, [r1], #4
    27d4:	f840 3b04 	str.w	r3, [r0], #4
    27d8:	f851 3b04 	ldr.w	r3, [r1], #4
    27dc:	f840 3b04 	str.w	r3, [r0], #4
    27e0:	f851 3b04 	ldr.w	r3, [r1], #4
    27e4:	f840 3b04 	str.w	r3, [r0], #4
    27e8:	f851 3b04 	ldr.w	r3, [r1], #4
    27ec:	f840 3b04 	str.w	r3, [r0], #4
    27f0:	f851 3b04 	ldr.w	r3, [r1], #4
    27f4:	f840 3b04 	str.w	r3, [r0], #4
    27f8:	f851 3b04 	ldr.w	r3, [r1], #4
    27fc:	f840 3b04 	str.w	r3, [r0], #4
    2800:	f851 3b04 	ldr.w	r3, [r1], #4
    2804:	f840 3b04 	str.w	r3, [r0], #4
    2808:	f851 3b04 	ldr.w	r3, [r1], #4
    280c:	f840 3b04 	str.w	r3, [r0], #4
    2810:	f851 3b04 	ldr.w	r3, [r1], #4
    2814:	f840 3b04 	str.w	r3, [r0], #4
    2818:	f851 3b04 	ldr.w	r3, [r1], #4
    281c:	f840 3b04 	str.w	r3, [r0], #4
    2820:	f851 3b04 	ldr.w	r3, [r1], #4
    2824:	f840 3b04 	str.w	r3, [r0], #4
    2828:	f851 3b04 	ldr.w	r3, [r1], #4
    282c:	f840 3b04 	str.w	r3, [r0], #4
    2830:	f851 3b04 	ldr.w	r3, [r1], #4
    2834:	f840 3b04 	str.w	r3, [r0], #4
    2838:	f851 3b04 	ldr.w	r3, [r1], #4
    283c:	f840 3b04 	str.w	r3, [r0], #4
    2840:	f851 3b04 	ldr.w	r3, [r1], #4
    2844:	f840 3b04 	str.w	r3, [r0], #4
    2848:	f851 3b04 	ldr.w	r3, [r1], #4
    284c:	f840 3b04 	str.w	r3, [r0], #4
    2850:	3a40      	subs	r2, #64	; 0x40
    2852:	d2bd      	bcs.n	27d0 <memcpy+0x10>
    2854:	3230      	adds	r2, #48	; 0x30
    2856:	d311      	bcc.n	287c <memcpy+0xbc>
    2858:	f851 3b04 	ldr.w	r3, [r1], #4
    285c:	f840 3b04 	str.w	r3, [r0], #4
    2860:	f851 3b04 	ldr.w	r3, [r1], #4
    2864:	f840 3b04 	str.w	r3, [r0], #4
    2868:	f851 3b04 	ldr.w	r3, [r1], #4
    286c:	f840 3b04 	str.w	r3, [r0], #4
    2870:	f851 3b04 	ldr.w	r3, [r1], #4
    2874:	f840 3b04 	str.w	r3, [r0], #4
    2878:	3a10      	subs	r2, #16
    287a:	d2ed      	bcs.n	2858 <memcpy+0x98>
    287c:	320c      	adds	r2, #12
    287e:	d305      	bcc.n	288c <memcpy+0xcc>
    2880:	f851 3b04 	ldr.w	r3, [r1], #4
    2884:	f840 3b04 	str.w	r3, [r0], #4
    2888:	3a04      	subs	r2, #4
    288a:	d2f9      	bcs.n	2880 <memcpy+0xc0>
    288c:	3204      	adds	r2, #4
    288e:	d008      	beq.n	28a2 <memcpy+0xe2>
    2890:	07d2      	lsls	r2, r2, #31
    2892:	bf1c      	itt	ne
    2894:	f811 3b01 	ldrbne.w	r3, [r1], #1
    2898:	f800 3b01 	strbne.w	r3, [r0], #1
    289c:	d301      	bcc.n	28a2 <memcpy+0xe2>
    289e:	880b      	ldrh	r3, [r1, #0]
    28a0:	8003      	strh	r3, [r0, #0]
    28a2:	4660      	mov	r0, ip
    28a4:	4770      	bx	lr
    28a6:	bf00      	nop
    28a8:	2a08      	cmp	r2, #8
    28aa:	d313      	bcc.n	28d4 <memcpy+0x114>
    28ac:	078b      	lsls	r3, r1, #30
    28ae:	d08d      	beq.n	27cc <memcpy+0xc>
    28b0:	f010 0303 	ands.w	r3, r0, #3
    28b4:	d08a      	beq.n	27cc <memcpy+0xc>
    28b6:	f1c3 0304 	rsb	r3, r3, #4
    28ba:	1ad2      	subs	r2, r2, r3
    28bc:	07db      	lsls	r3, r3, #31
    28be:	bf1c      	itt	ne
    28c0:	f811 3b01 	ldrbne.w	r3, [r1], #1
    28c4:	f800 3b01 	strbne.w	r3, [r0], #1
    28c8:	d380      	bcc.n	27cc <memcpy+0xc>
    28ca:	f831 3b02 	ldrh.w	r3, [r1], #2
    28ce:	f820 3b02 	strh.w	r3, [r0], #2
    28d2:	e77b      	b.n	27cc <memcpy+0xc>
    28d4:	3a04      	subs	r2, #4
    28d6:	d3d9      	bcc.n	288c <memcpy+0xcc>
    28d8:	3a01      	subs	r2, #1
    28da:	f811 3b01 	ldrb.w	r3, [r1], #1
    28de:	f800 3b01 	strb.w	r3, [r0], #1
    28e2:	d2f9      	bcs.n	28d8 <memcpy+0x118>
    28e4:	780b      	ldrb	r3, [r1, #0]
    28e6:	7003      	strb	r3, [r0, #0]
    28e8:	784b      	ldrb	r3, [r1, #1]
    28ea:	7043      	strb	r3, [r0, #1]
    28ec:	788b      	ldrb	r3, [r1, #2]
    28ee:	7083      	strb	r3, [r0, #2]
    28f0:	4660      	mov	r0, ip
    28f2:	4770      	bx	lr

000028f4 <memmove>:
    28f4:	4288      	cmp	r0, r1
    28f6:	d90d      	bls.n	2914 <memmove+0x20>
    28f8:	188b      	adds	r3, r1, r2
    28fa:	4283      	cmp	r3, r0
    28fc:	d90a      	bls.n	2914 <memmove+0x20>
    28fe:	eb00 0c02 	add.w	ip, r0, r2
    2902:	b1ba      	cbz	r2, 2934 <memmove+0x40>
    2904:	4662      	mov	r2, ip
    2906:	f813 cd01 	ldrb.w	ip, [r3, #-1]!
    290a:	f802 cd01 	strb.w	ip, [r2, #-1]!
    290e:	4299      	cmp	r1, r3
    2910:	d1f9      	bne.n	2906 <memmove+0x12>
    2912:	4770      	bx	lr
    2914:	2a0f      	cmp	r2, #15
    2916:	d80e      	bhi.n	2936 <memmove+0x42>
    2918:	4603      	mov	r3, r0
    291a:	f102 3cff 	add.w	ip, r2, #4294967295	; 0xffffffff
    291e:	b14a      	cbz	r2, 2934 <memmove+0x40>
    2920:	f10c 0c01 	add.w	ip, ip, #1
    2924:	3b01      	subs	r3, #1
    2926:	448c      	add	ip, r1
    2928:	f811 2b01 	ldrb.w	r2, [r1], #1
    292c:	f803 2f01 	strb.w	r2, [r3, #1]!
    2930:	4561      	cmp	r1, ip
    2932:	d1f9      	bne.n	2928 <memmove+0x34>
    2934:	4770      	bx	lr
    2936:	ea40 0301 	orr.w	r3, r0, r1
    293a:	079b      	lsls	r3, r3, #30
    293c:	d150      	bne.n	29e0 <memmove+0xec>
    293e:	f1a2 0310 	sub.w	r3, r2, #16
    2942:	b570      	push	{r4, r5, r6, lr}
    2944:	f101 0c20 	add.w	ip, r1, #32
    2948:	f023 050f 	bic.w	r5, r3, #15
    294c:	f101 0e10 	add.w	lr, r1, #16
    2950:	f100 0410 	add.w	r4, r0, #16
    2954:	44ac      	add	ip, r5
    2956:	091b      	lsrs	r3, r3, #4
    2958:	f85e 5c10 	ldr.w	r5, [lr, #-16]
    295c:	f844 5c10 	str.w	r5, [r4, #-16]
    2960:	f85e 5c0c 	ldr.w	r5, [lr, #-12]
    2964:	f844 5c0c 	str.w	r5, [r4, #-12]
    2968:	f85e 5c08 	ldr.w	r5, [lr, #-8]
    296c:	f844 5c08 	str.w	r5, [r4, #-8]
    2970:	f85e 5c04 	ldr.w	r5, [lr, #-4]
    2974:	f844 5c04 	str.w	r5, [r4, #-4]
    2978:	f10e 0e10 	add.w	lr, lr, #16
    297c:	45e6      	cmp	lr, ip
    297e:	f104 0410 	add.w	r4, r4, #16
    2982:	d1e9      	bne.n	2958 <memmove+0x64>
    2984:	3301      	adds	r3, #1
    2986:	f012 0f0c 	tst.w	r2, #12
    298a:	eb01 1103 	add.w	r1, r1, r3, lsl #4
    298e:	f002 040f 	and.w	r4, r2, #15
    2992:	eb00 1303 	add.w	r3, r0, r3, lsl #4
    2996:	d027      	beq.n	29e8 <memmove+0xf4>
    2998:	3c04      	subs	r4, #4
    299a:	f024 0603 	bic.w	r6, r4, #3
    299e:	ea4f 0c94 	mov.w	ip, r4, lsr #2
    29a2:	441e      	add	r6, r3
    29a4:	1f1c      	subs	r4, r3, #4
    29a6:	468e      	mov	lr, r1
    29a8:	f85e 5b04 	ldr.w	r5, [lr], #4
    29ac:	f844 5f04 	str.w	r5, [r4, #4]!
    29b0:	42b4      	cmp	r4, r6
    29b2:	d1f9      	bne.n	29a8 <memmove+0xb4>
    29b4:	f10c 0401 	add.w	r4, ip, #1
    29b8:	f002 0203 	and.w	r2, r2, #3
    29bc:	eb03 0384 	add.w	r3, r3, r4, lsl #2
    29c0:	eb01 0184 	add.w	r1, r1, r4, lsl #2
    29c4:	f102 3cff 	add.w	ip, r2, #4294967295	; 0xffffffff
    29c8:	b14a      	cbz	r2, 29de <memmove+0xea>
    29ca:	f10c 0c01 	add.w	ip, ip, #1
    29ce:	3b01      	subs	r3, #1
    29d0:	448c      	add	ip, r1
    29d2:	f811 2b01 	ldrb.w	r2, [r1], #1
    29d6:	f803 2f01 	strb.w	r2, [r3, #1]!
    29da:	4561      	cmp	r1, ip
    29dc:	d1f9      	bne.n	29d2 <memmove+0xde>
    29de:	bd70      	pop	{r4, r5, r6, pc}
    29e0:	f102 3cff 	add.w	ip, r2, #4294967295	; 0xffffffff
    29e4:	4603      	mov	r3, r0
    29e6:	e79b      	b.n	2920 <memmove+0x2c>
    29e8:	4622      	mov	r2, r4
    29ea:	e7eb      	b.n	29c4 <memmove+0xd0>

000029ec <__malloc_lock>:
    29ec:	4770      	bx	lr
    29ee:	bf00      	nop

000029f0 <__malloc_unlock>:
    29f0:	4770      	bx	lr
    29f2:	bf00      	nop

000029f4 <_realloc_r>:
    29f4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    29f8:	4617      	mov	r7, r2
    29fa:	2900      	cmp	r1, #0
    29fc:	f000 8098 	beq.w	2b30 <_realloc_r+0x13c>
    2a00:	460c      	mov	r4, r1
    2a02:	f107 050b 	add.w	r5, r7, #11
    2a06:	4680      	mov	r8, r0
    2a08:	f7ff fff0 	bl	29ec <__malloc_lock>
    2a0c:	2d16      	cmp	r5, #22
    2a0e:	f854 1c04 	ldr.w	r1, [r4, #-4]
    2a12:	d85b      	bhi.n	2acc <_realloc_r+0xd8>
    2a14:	2510      	movs	r5, #16
    2a16:	462a      	mov	r2, r5
    2a18:	42af      	cmp	r7, r5
    2a1a:	d85c      	bhi.n	2ad6 <_realloc_r+0xe2>
    2a1c:	f021 0603 	bic.w	r6, r1, #3
    2a20:	4296      	cmp	r6, r2
    2a22:	f1a4 0908 	sub.w	r9, r4, #8
    2a26:	da62      	bge.n	2aee <_realloc_r+0xfa>
    2a28:	4bbc      	ldr	r3, [pc, #752]	; (2d1c <_realloc_r+0x328>)
    2a2a:	f8d3 c008 	ldr.w	ip, [r3, #8]
    2a2e:	eb09 0006 	add.w	r0, r9, r6
    2a32:	4584      	cmp	ip, r0
    2a34:	f000 8097 	beq.w	2b66 <_realloc_r+0x172>
    2a38:	f8d0 c004 	ldr.w	ip, [r0, #4]
    2a3c:	f02c 0301 	bic.w	r3, ip, #1
    2a40:	4403      	add	r3, r0
    2a42:	685b      	ldr	r3, [r3, #4]
    2a44:	07db      	lsls	r3, r3, #31
    2a46:	d468      	bmi.n	2b1a <_realloc_r+0x126>
    2a48:	f02c 0c03 	bic.w	ip, ip, #3
    2a4c:	eb06 030c 	add.w	r3, r6, ip
    2a50:	4293      	cmp	r3, r2
    2a52:	da47      	bge.n	2ae4 <_realloc_r+0xf0>
    2a54:	07cb      	lsls	r3, r1, #31
    2a56:	d410      	bmi.n	2a7a <_realloc_r+0x86>
    2a58:	f854 3c08 	ldr.w	r3, [r4, #-8]
    2a5c:	eba9 0a03 	sub.w	sl, r9, r3
    2a60:	f8da 3004 	ldr.w	r3, [sl, #4]
    2a64:	f023 0103 	bic.w	r1, r3, #3
    2a68:	448c      	add	ip, r1
    2a6a:	44b4      	add	ip, r6
    2a6c:	4594      	cmp	ip, r2
    2a6e:	f280 8111 	bge.w	2c94 <_realloc_r+0x2a0>
    2a72:	1873      	adds	r3, r6, r1
    2a74:	4293      	cmp	r3, r2
    2a76:	f280 80e8 	bge.w	2c4a <_realloc_r+0x256>
    2a7a:	4639      	mov	r1, r7
    2a7c:	4640      	mov	r0, r8
    2a7e:	f7ff fb85 	bl	218c <_malloc_r>
    2a82:	4607      	mov	r7, r0
    2a84:	b1e0      	cbz	r0, 2ac0 <_realloc_r+0xcc>
    2a86:	f854 3c04 	ldr.w	r3, [r4, #-4]
    2a8a:	f023 0301 	bic.w	r3, r3, #1
    2a8e:	444b      	add	r3, r9
    2a90:	f1a0 0208 	sub.w	r2, r0, #8
    2a94:	4293      	cmp	r3, r2
    2a96:	f000 80d2 	beq.w	2c3e <_realloc_r+0x24a>
    2a9a:	1f32      	subs	r2, r6, #4
    2a9c:	2a24      	cmp	r2, #36	; 0x24
    2a9e:	f200 80f5 	bhi.w	2c8c <_realloc_r+0x298>
    2aa2:	2a13      	cmp	r2, #19
    2aa4:	f200 80ac 	bhi.w	2c00 <_realloc_r+0x20c>
    2aa8:	4603      	mov	r3, r0
    2aaa:	4622      	mov	r2, r4
    2aac:	6811      	ldr	r1, [r2, #0]
    2aae:	6019      	str	r1, [r3, #0]
    2ab0:	6851      	ldr	r1, [r2, #4]
    2ab2:	6059      	str	r1, [r3, #4]
    2ab4:	6892      	ldr	r2, [r2, #8]
    2ab6:	609a      	str	r2, [r3, #8]
    2ab8:	4621      	mov	r1, r4
    2aba:	4640      	mov	r0, r8
    2abc:	f7ff f848 	bl	1b50 <_free_r>
    2ac0:	4640      	mov	r0, r8
    2ac2:	f7ff ff95 	bl	29f0 <__malloc_unlock>
    2ac6:	4638      	mov	r0, r7
    2ac8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2acc:	f025 0507 	bic.w	r5, r5, #7
    2ad0:	2d00      	cmp	r5, #0
    2ad2:	462a      	mov	r2, r5
    2ad4:	daa0      	bge.n	2a18 <_realloc_r+0x24>
    2ad6:	230c      	movs	r3, #12
    2ad8:	f8c8 3000 	str.w	r3, [r8]
    2adc:	2700      	movs	r7, #0
    2ade:	4638      	mov	r0, r7
    2ae0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2ae4:	461e      	mov	r6, r3
    2ae6:	e9d0 2302 	ldrd	r2, r3, [r0, #8]
    2aea:	60d3      	str	r3, [r2, #12]
    2aec:	609a      	str	r2, [r3, #8]
    2aee:	1b73      	subs	r3, r6, r5
    2af0:	2b0f      	cmp	r3, #15
    2af2:	d822      	bhi.n	2b3a <_realloc_r+0x146>
    2af4:	f8d9 3004 	ldr.w	r3, [r9, #4]
    2af8:	f003 0301 	and.w	r3, r3, #1
    2afc:	4333      	orrs	r3, r6
    2afe:	444e      	add	r6, r9
    2b00:	f8c9 3004 	str.w	r3, [r9, #4]
    2b04:	6873      	ldr	r3, [r6, #4]
    2b06:	f043 0301 	orr.w	r3, r3, #1
    2b0a:	6073      	str	r3, [r6, #4]
    2b0c:	4640      	mov	r0, r8
    2b0e:	4627      	mov	r7, r4
    2b10:	f7ff ff6e 	bl	29f0 <__malloc_unlock>
    2b14:	4638      	mov	r0, r7
    2b16:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2b1a:	07c9      	lsls	r1, r1, #31
    2b1c:	d4ad      	bmi.n	2a7a <_realloc_r+0x86>
    2b1e:	f854 3c08 	ldr.w	r3, [r4, #-8]
    2b22:	eba9 0a03 	sub.w	sl, r9, r3
    2b26:	f8da 1004 	ldr.w	r1, [sl, #4]
    2b2a:	f021 0103 	bic.w	r1, r1, #3
    2b2e:	e7a0      	b.n	2a72 <_realloc_r+0x7e>
    2b30:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2b34:	4611      	mov	r1, r2
    2b36:	f7ff bb29 	b.w	218c <_malloc_r>
    2b3a:	f8d9 2004 	ldr.w	r2, [r9, #4]
    2b3e:	eb09 0105 	add.w	r1, r9, r5
    2b42:	f002 0201 	and.w	r2, r2, #1
    2b46:	444e      	add	r6, r9
    2b48:	f043 0301 	orr.w	r3, r3, #1
    2b4c:	432a      	orrs	r2, r5
    2b4e:	f8c9 2004 	str.w	r2, [r9, #4]
    2b52:	604b      	str	r3, [r1, #4]
    2b54:	6873      	ldr	r3, [r6, #4]
    2b56:	f043 0301 	orr.w	r3, r3, #1
    2b5a:	3108      	adds	r1, #8
    2b5c:	6073      	str	r3, [r6, #4]
    2b5e:	4640      	mov	r0, r8
    2b60:	f7fe fff6 	bl	1b50 <_free_r>
    2b64:	e7d2      	b.n	2b0c <_realloc_r+0x118>
    2b66:	f8dc 0004 	ldr.w	r0, [ip, #4]
    2b6a:	f020 0b03 	bic.w	fp, r0, #3
    2b6e:	eb06 0c0b 	add.w	ip, r6, fp
    2b72:	f105 0010 	add.w	r0, r5, #16
    2b76:	4584      	cmp	ip, r0
    2b78:	da4d      	bge.n	2c16 <_realloc_r+0x222>
    2b7a:	07c9      	lsls	r1, r1, #31
    2b7c:	f53f af7d 	bmi.w	2a7a <_realloc_r+0x86>
    2b80:	f854 1c08 	ldr.w	r1, [r4, #-8]
    2b84:	eba9 0a01 	sub.w	sl, r9, r1
    2b88:	f8da 1004 	ldr.w	r1, [sl, #4]
    2b8c:	f021 0103 	bic.w	r1, r1, #3
    2b90:	448b      	add	fp, r1
    2b92:	44b3      	add	fp, r6
    2b94:	4558      	cmp	r0, fp
    2b96:	f73f af6c 	bgt.w	2a72 <_realloc_r+0x7e>
    2b9a:	4657      	mov	r7, sl
    2b9c:	f8da 100c 	ldr.w	r1, [sl, #12]
    2ba0:	f857 0f08 	ldr.w	r0, [r7, #8]!
    2ba4:	1f32      	subs	r2, r6, #4
    2ba6:	2a24      	cmp	r2, #36	; 0x24
    2ba8:	60c1      	str	r1, [r0, #12]
    2baa:	6088      	str	r0, [r1, #8]
    2bac:	f200 80db 	bhi.w	2d66 <_realloc_r+0x372>
    2bb0:	2a13      	cmp	r2, #19
    2bb2:	f240 80d6 	bls.w	2d62 <_realloc_r+0x36e>
    2bb6:	6821      	ldr	r1, [r4, #0]
    2bb8:	f8ca 1008 	str.w	r1, [sl, #8]
    2bbc:	6861      	ldr	r1, [r4, #4]
    2bbe:	f8ca 100c 	str.w	r1, [sl, #12]
    2bc2:	2a1b      	cmp	r2, #27
    2bc4:	f200 80df 	bhi.w	2d86 <_realloc_r+0x392>
    2bc8:	3408      	adds	r4, #8
    2bca:	f10a 0210 	add.w	r2, sl, #16
    2bce:	6821      	ldr	r1, [r4, #0]
    2bd0:	6011      	str	r1, [r2, #0]
    2bd2:	6861      	ldr	r1, [r4, #4]
    2bd4:	6051      	str	r1, [r2, #4]
    2bd6:	68a1      	ldr	r1, [r4, #8]
    2bd8:	6091      	str	r1, [r2, #8]
    2bda:	eb0a 0105 	add.w	r1, sl, r5
    2bde:	ebab 0205 	sub.w	r2, fp, r5
    2be2:	f042 0201 	orr.w	r2, r2, #1
    2be6:	6099      	str	r1, [r3, #8]
    2be8:	604a      	str	r2, [r1, #4]
    2bea:	f8da 3004 	ldr.w	r3, [sl, #4]
    2bee:	f003 0301 	and.w	r3, r3, #1
    2bf2:	432b      	orrs	r3, r5
    2bf4:	4640      	mov	r0, r8
    2bf6:	f8ca 3004 	str.w	r3, [sl, #4]
    2bfa:	f7ff fef9 	bl	29f0 <__malloc_unlock>
    2bfe:	e76e      	b.n	2ade <_realloc_r+0xea>
    2c00:	6823      	ldr	r3, [r4, #0]
    2c02:	6003      	str	r3, [r0, #0]
    2c04:	6863      	ldr	r3, [r4, #4]
    2c06:	6043      	str	r3, [r0, #4]
    2c08:	2a1b      	cmp	r2, #27
    2c0a:	d868      	bhi.n	2cde <_realloc_r+0x2ea>
    2c0c:	f104 0208 	add.w	r2, r4, #8
    2c10:	f100 0308 	add.w	r3, r0, #8
    2c14:	e74a      	b.n	2aac <_realloc_r+0xb8>
    2c16:	eb09 0205 	add.w	r2, r9, r5
    2c1a:	609a      	str	r2, [r3, #8]
    2c1c:	ebac 0305 	sub.w	r3, ip, r5
    2c20:	f043 0301 	orr.w	r3, r3, #1
    2c24:	6053      	str	r3, [r2, #4]
    2c26:	f854 3c04 	ldr.w	r3, [r4, #-4]
    2c2a:	f003 0301 	and.w	r3, r3, #1
    2c2e:	432b      	orrs	r3, r5
    2c30:	4640      	mov	r0, r8
    2c32:	f844 3c04 	str.w	r3, [r4, #-4]
    2c36:	f7ff fedb 	bl	29f0 <__malloc_unlock>
    2c3a:	4627      	mov	r7, r4
    2c3c:	e74f      	b.n	2ade <_realloc_r+0xea>
    2c3e:	f850 3c04 	ldr.w	r3, [r0, #-4]
    2c42:	f023 0303 	bic.w	r3, r3, #3
    2c46:	441e      	add	r6, r3
    2c48:	e751      	b.n	2aee <_realloc_r+0xfa>
    2c4a:	4657      	mov	r7, sl
    2c4c:	f8da 100c 	ldr.w	r1, [sl, #12]
    2c50:	f857 0f08 	ldr.w	r0, [r7, #8]!
    2c54:	1f32      	subs	r2, r6, #4
    2c56:	2a24      	cmp	r2, #36	; 0x24
    2c58:	60c1      	str	r1, [r0, #12]
    2c5a:	6088      	str	r0, [r1, #8]
    2c5c:	d84c      	bhi.n	2cf8 <_realloc_r+0x304>
    2c5e:	2a13      	cmp	r2, #19
    2c60:	d948      	bls.n	2cf4 <_realloc_r+0x300>
    2c62:	6821      	ldr	r1, [r4, #0]
    2c64:	f8ca 1008 	str.w	r1, [sl, #8]
    2c68:	6861      	ldr	r1, [r4, #4]
    2c6a:	f8ca 100c 	str.w	r1, [sl, #12]
    2c6e:	2a1b      	cmp	r2, #27
    2c70:	d856      	bhi.n	2d20 <_realloc_r+0x32c>
    2c72:	3408      	adds	r4, #8
    2c74:	f10a 0210 	add.w	r2, sl, #16
    2c78:	461e      	mov	r6, r3
    2c7a:	6823      	ldr	r3, [r4, #0]
    2c7c:	6013      	str	r3, [r2, #0]
    2c7e:	6863      	ldr	r3, [r4, #4]
    2c80:	6053      	str	r3, [r2, #4]
    2c82:	68a3      	ldr	r3, [r4, #8]
    2c84:	6093      	str	r3, [r2, #8]
    2c86:	46d1      	mov	r9, sl
    2c88:	463c      	mov	r4, r7
    2c8a:	e730      	b.n	2aee <_realloc_r+0xfa>
    2c8c:	4621      	mov	r1, r4
    2c8e:	f7ff fe31 	bl	28f4 <memmove>
    2c92:	e711      	b.n	2ab8 <_realloc_r+0xc4>
    2c94:	e9d0 1302 	ldrd	r1, r3, [r0, #8]
    2c98:	4657      	mov	r7, sl
    2c9a:	60cb      	str	r3, [r1, #12]
    2c9c:	6099      	str	r1, [r3, #8]
    2c9e:	f857 1f08 	ldr.w	r1, [r7, #8]!
    2ca2:	f8da 300c 	ldr.w	r3, [sl, #12]
    2ca6:	60cb      	str	r3, [r1, #12]
    2ca8:	1f32      	subs	r2, r6, #4
    2caa:	2a24      	cmp	r2, #36	; 0x24
    2cac:	6099      	str	r1, [r3, #8]
    2cae:	d82d      	bhi.n	2d0c <_realloc_r+0x318>
    2cb0:	2a13      	cmp	r2, #19
    2cb2:	d929      	bls.n	2d08 <_realloc_r+0x314>
    2cb4:	6823      	ldr	r3, [r4, #0]
    2cb6:	f8ca 3008 	str.w	r3, [sl, #8]
    2cba:	6863      	ldr	r3, [r4, #4]
    2cbc:	f8ca 300c 	str.w	r3, [sl, #12]
    2cc0:	2a1b      	cmp	r2, #27
    2cc2:	d842      	bhi.n	2d4a <_realloc_r+0x356>
    2cc4:	3408      	adds	r4, #8
    2cc6:	f10a 0310 	add.w	r3, sl, #16
    2cca:	6822      	ldr	r2, [r4, #0]
    2ccc:	601a      	str	r2, [r3, #0]
    2cce:	6862      	ldr	r2, [r4, #4]
    2cd0:	605a      	str	r2, [r3, #4]
    2cd2:	68a2      	ldr	r2, [r4, #8]
    2cd4:	609a      	str	r2, [r3, #8]
    2cd6:	4666      	mov	r6, ip
    2cd8:	46d1      	mov	r9, sl
    2cda:	463c      	mov	r4, r7
    2cdc:	e707      	b.n	2aee <_realloc_r+0xfa>
    2cde:	68a3      	ldr	r3, [r4, #8]
    2ce0:	6083      	str	r3, [r0, #8]
    2ce2:	68e3      	ldr	r3, [r4, #12]
    2ce4:	60c3      	str	r3, [r0, #12]
    2ce6:	2a24      	cmp	r2, #36	; 0x24
    2ce8:	d026      	beq.n	2d38 <_realloc_r+0x344>
    2cea:	f104 0210 	add.w	r2, r4, #16
    2cee:	f100 0310 	add.w	r3, r0, #16
    2cf2:	e6db      	b.n	2aac <_realloc_r+0xb8>
    2cf4:	463a      	mov	r2, r7
    2cf6:	e7bf      	b.n	2c78 <_realloc_r+0x284>
    2cf8:	4621      	mov	r1, r4
    2cfa:	4638      	mov	r0, r7
    2cfc:	461e      	mov	r6, r3
    2cfe:	46d1      	mov	r9, sl
    2d00:	f7ff fdf8 	bl	28f4 <memmove>
    2d04:	463c      	mov	r4, r7
    2d06:	e6f2      	b.n	2aee <_realloc_r+0xfa>
    2d08:	463b      	mov	r3, r7
    2d0a:	e7de      	b.n	2cca <_realloc_r+0x2d6>
    2d0c:	4621      	mov	r1, r4
    2d0e:	4638      	mov	r0, r7
    2d10:	4666      	mov	r6, ip
    2d12:	46d1      	mov	r9, sl
    2d14:	f7ff fdee 	bl	28f4 <memmove>
    2d18:	463c      	mov	r4, r7
    2d1a:	e6e8      	b.n	2aee <_realloc_r+0xfa>
    2d1c:	2000059c 	.word	0x2000059c
    2d20:	68a1      	ldr	r1, [r4, #8]
    2d22:	f8ca 1010 	str.w	r1, [sl, #16]
    2d26:	68e1      	ldr	r1, [r4, #12]
    2d28:	f8ca 1014 	str.w	r1, [sl, #20]
    2d2c:	2a24      	cmp	r2, #36	; 0x24
    2d2e:	d020      	beq.n	2d72 <_realloc_r+0x37e>
    2d30:	3410      	adds	r4, #16
    2d32:	f10a 0218 	add.w	r2, sl, #24
    2d36:	e79f      	b.n	2c78 <_realloc_r+0x284>
    2d38:	6923      	ldr	r3, [r4, #16]
    2d3a:	6103      	str	r3, [r0, #16]
    2d3c:	6961      	ldr	r1, [r4, #20]
    2d3e:	6141      	str	r1, [r0, #20]
    2d40:	f104 0218 	add.w	r2, r4, #24
    2d44:	f100 0318 	add.w	r3, r0, #24
    2d48:	e6b0      	b.n	2aac <_realloc_r+0xb8>
    2d4a:	68a3      	ldr	r3, [r4, #8]
    2d4c:	f8ca 3010 	str.w	r3, [sl, #16]
    2d50:	68e3      	ldr	r3, [r4, #12]
    2d52:	f8ca 3014 	str.w	r3, [sl, #20]
    2d56:	2a24      	cmp	r2, #36	; 0x24
    2d58:	d021      	beq.n	2d9e <_realloc_r+0x3aa>
    2d5a:	3410      	adds	r4, #16
    2d5c:	f10a 0318 	add.w	r3, sl, #24
    2d60:	e7b3      	b.n	2cca <_realloc_r+0x2d6>
    2d62:	463a      	mov	r2, r7
    2d64:	e733      	b.n	2bce <_realloc_r+0x1da>
    2d66:	4621      	mov	r1, r4
    2d68:	4638      	mov	r0, r7
    2d6a:	f7ff fdc3 	bl	28f4 <memmove>
    2d6e:	4b16      	ldr	r3, [pc, #88]	; (2dc8 <_realloc_r+0x3d4>)
    2d70:	e733      	b.n	2bda <_realloc_r+0x1e6>
    2d72:	6922      	ldr	r2, [r4, #16]
    2d74:	f8ca 2018 	str.w	r2, [sl, #24]
    2d78:	6962      	ldr	r2, [r4, #20]
    2d7a:	f8ca 201c 	str.w	r2, [sl, #28]
    2d7e:	3418      	adds	r4, #24
    2d80:	f10a 0220 	add.w	r2, sl, #32
    2d84:	e778      	b.n	2c78 <_realloc_r+0x284>
    2d86:	68a1      	ldr	r1, [r4, #8]
    2d88:	f8ca 1010 	str.w	r1, [sl, #16]
    2d8c:	68e1      	ldr	r1, [r4, #12]
    2d8e:	f8ca 1014 	str.w	r1, [sl, #20]
    2d92:	2a24      	cmp	r2, #36	; 0x24
    2d94:	d00d      	beq.n	2db2 <_realloc_r+0x3be>
    2d96:	3410      	adds	r4, #16
    2d98:	f10a 0218 	add.w	r2, sl, #24
    2d9c:	e717      	b.n	2bce <_realloc_r+0x1da>
    2d9e:	6923      	ldr	r3, [r4, #16]
    2da0:	f8ca 3018 	str.w	r3, [sl, #24]
    2da4:	6963      	ldr	r3, [r4, #20]
    2da6:	f8ca 301c 	str.w	r3, [sl, #28]
    2daa:	3418      	adds	r4, #24
    2dac:	f10a 0320 	add.w	r3, sl, #32
    2db0:	e78b      	b.n	2cca <_realloc_r+0x2d6>
    2db2:	6922      	ldr	r2, [r4, #16]
    2db4:	f8ca 2018 	str.w	r2, [sl, #24]
    2db8:	6962      	ldr	r2, [r4, #20]
    2dba:	f8ca 201c 	str.w	r2, [sl, #28]
    2dbe:	3418      	adds	r4, #24
    2dc0:	f10a 0220 	add.w	r2, sl, #32
    2dc4:	e703      	b.n	2bce <_realloc_r+0x1da>
    2dc6:	bf00      	nop
    2dc8:	2000059c 	.word	0x2000059c

00002dcc <_sbrk_r>:
    2dcc:	b538      	push	{r3, r4, r5, lr}
    2dce:	4d07      	ldr	r5, [pc, #28]	; (2dec <_sbrk_r+0x20>)
    2dd0:	2200      	movs	r2, #0
    2dd2:	4604      	mov	r4, r0
    2dd4:	4608      	mov	r0, r1
    2dd6:	602a      	str	r2, [r5, #0]
    2dd8:	f7fd fb12 	bl	400 <_sbrk>
    2ddc:	1c43      	adds	r3, r0, #1
    2dde:	d000      	beq.n	2de2 <_sbrk_r+0x16>
    2de0:	bd38      	pop	{r3, r4, r5, pc}
    2de2:	682b      	ldr	r3, [r5, #0]
    2de4:	2b00      	cmp	r3, #0
    2de6:	d0fb      	beq.n	2de0 <_sbrk_r+0x14>
    2de8:	6023      	str	r3, [r4, #0]
    2dea:	bd38      	pop	{r3, r4, r5, pc}
    2dec:	20000ae0 	.word	0x20000ae0

00002df0 <__sread>:
    2df0:	b510      	push	{r4, lr}
    2df2:	460c      	mov	r4, r1
    2df4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    2df8:	f000 fa88 	bl	330c <_read_r>
    2dfc:	2800      	cmp	r0, #0
    2dfe:	db03      	blt.n	2e08 <__sread+0x18>
    2e00:	6d23      	ldr	r3, [r4, #80]	; 0x50
    2e02:	4403      	add	r3, r0
    2e04:	6523      	str	r3, [r4, #80]	; 0x50
    2e06:	bd10      	pop	{r4, pc}
    2e08:	89a3      	ldrh	r3, [r4, #12]
    2e0a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
    2e0e:	81a3      	strh	r3, [r4, #12]
    2e10:	bd10      	pop	{r4, pc}
    2e12:	bf00      	nop

00002e14 <__swrite>:
    2e14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    2e18:	460c      	mov	r4, r1
    2e1a:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
    2e1e:	461f      	mov	r7, r3
    2e20:	05cb      	lsls	r3, r1, #23
    2e22:	4605      	mov	r5, r0
    2e24:	4616      	mov	r6, r2
    2e26:	d40b      	bmi.n	2e40 <__swrite+0x2c>
    2e28:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
    2e2c:	81a1      	strh	r1, [r4, #12]
    2e2e:	463b      	mov	r3, r7
    2e30:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    2e34:	4632      	mov	r2, r6
    2e36:	4628      	mov	r0, r5
    2e38:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    2e3c:	f000 b9bc 	b.w	31b8 <_write_r>
    2e40:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    2e44:	2302      	movs	r3, #2
    2e46:	2200      	movs	r2, #0
    2e48:	f000 fa4a 	bl	32e0 <_lseek_r>
    2e4c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
    2e50:	e7ea      	b.n	2e28 <__swrite+0x14>
    2e52:	bf00      	nop

00002e54 <__sseek>:
    2e54:	b510      	push	{r4, lr}
    2e56:	460c      	mov	r4, r1
    2e58:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    2e5c:	f000 fa40 	bl	32e0 <_lseek_r>
    2e60:	89a3      	ldrh	r3, [r4, #12]
    2e62:	1c42      	adds	r2, r0, #1
    2e64:	bf0e      	itee	eq
    2e66:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
    2e6a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
    2e6e:	6520      	strne	r0, [r4, #80]	; 0x50
    2e70:	81a3      	strh	r3, [r4, #12]
    2e72:	bd10      	pop	{r4, pc}

00002e74 <__sclose>:
    2e74:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    2e78:	f000 b9b4 	b.w	31e4 <_close_r>
    2e7c:	0000      	movs	r0, r0
	...

00002e80 <strlen>:
    2e80:	f890 f000 	pld	[r0]
    2e84:	e96d 4502 	strd	r4, r5, [sp, #-8]!
    2e88:	f020 0107 	bic.w	r1, r0, #7
    2e8c:	f06f 0c00 	mvn.w	ip, #0
    2e90:	f010 0407 	ands.w	r4, r0, #7
    2e94:	f891 f020 	pld	[r1, #32]
    2e98:	f040 8049 	bne.w	2f2e <strlen+0xae>
    2e9c:	f04f 0400 	mov.w	r4, #0
    2ea0:	f06f 0007 	mvn.w	r0, #7
    2ea4:	e9d1 2300 	ldrd	r2, r3, [r1]
    2ea8:	f891 f040 	pld	[r1, #64]	; 0x40
    2eac:	f100 0008 	add.w	r0, r0, #8
    2eb0:	fa82 f24c 	uadd8	r2, r2, ip
    2eb4:	faa4 f28c 	sel	r2, r4, ip
    2eb8:	fa83 f34c 	uadd8	r3, r3, ip
    2ebc:	faa2 f38c 	sel	r3, r2, ip
    2ec0:	bb4b      	cbnz	r3, 2f16 <strlen+0x96>
    2ec2:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
    2ec6:	fa82 f24c 	uadd8	r2, r2, ip
    2eca:	f100 0008 	add.w	r0, r0, #8
    2ece:	faa4 f28c 	sel	r2, r4, ip
    2ed2:	fa83 f34c 	uadd8	r3, r3, ip
    2ed6:	faa2 f38c 	sel	r3, r2, ip
    2eda:	b9e3      	cbnz	r3, 2f16 <strlen+0x96>
    2edc:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
    2ee0:	fa82 f24c 	uadd8	r2, r2, ip
    2ee4:	f100 0008 	add.w	r0, r0, #8
    2ee8:	faa4 f28c 	sel	r2, r4, ip
    2eec:	fa83 f34c 	uadd8	r3, r3, ip
    2ef0:	faa2 f38c 	sel	r3, r2, ip
    2ef4:	b97b      	cbnz	r3, 2f16 <strlen+0x96>
    2ef6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
    2efa:	f101 0120 	add.w	r1, r1, #32
    2efe:	fa82 f24c 	uadd8	r2, r2, ip
    2f02:	f100 0008 	add.w	r0, r0, #8
    2f06:	faa4 f28c 	sel	r2, r4, ip
    2f0a:	fa83 f34c 	uadd8	r3, r3, ip
    2f0e:	faa2 f38c 	sel	r3, r2, ip
    2f12:	2b00      	cmp	r3, #0
    2f14:	d0c6      	beq.n	2ea4 <strlen+0x24>
    2f16:	2a00      	cmp	r2, #0
    2f18:	bf04      	itt	eq
    2f1a:	3004      	addeq	r0, #4
    2f1c:	461a      	moveq	r2, r3
    2f1e:	ba12      	rev	r2, r2
    2f20:	fab2 f282 	clz	r2, r2
    2f24:	e8fd 4502 	ldrd	r4, r5, [sp], #8
    2f28:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
    2f2c:	4770      	bx	lr
    2f2e:	e9d1 2300 	ldrd	r2, r3, [r1]
    2f32:	f004 0503 	and.w	r5, r4, #3
    2f36:	f1c4 0000 	rsb	r0, r4, #0
    2f3a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
    2f3e:	f014 0f04 	tst.w	r4, #4
    2f42:	f891 f040 	pld	[r1, #64]	; 0x40
    2f46:	fa0c f505 	lsl.w	r5, ip, r5
    2f4a:	ea62 0205 	orn	r2, r2, r5
    2f4e:	bf1c      	itt	ne
    2f50:	ea63 0305 	ornne	r3, r3, r5
    2f54:	4662      	movne	r2, ip
    2f56:	f04f 0400 	mov.w	r4, #0
    2f5a:	e7a9      	b.n	2eb0 <strlen+0x30>

00002f5c <strncpy>:
    2f5c:	ea40 0301 	orr.w	r3, r0, r1
    2f60:	079b      	lsls	r3, r3, #30
    2f62:	b530      	push	{r4, r5, lr}
    2f64:	d101      	bne.n	2f6a <strncpy+0xe>
    2f66:	2a03      	cmp	r2, #3
    2f68:	d80f      	bhi.n	2f8a <strncpy+0x2e>
    2f6a:	4684      	mov	ip, r0
    2f6c:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
    2f70:	e007      	b.n	2f82 <strncpy+0x26>
    2f72:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
    2f76:	f803 1b01 	strb.w	r1, [r3], #1
    2f7a:	1e54      	subs	r4, r2, #1
    2f7c:	b1c1      	cbz	r1, 2fb0 <strncpy+0x54>
    2f7e:	469c      	mov	ip, r3
    2f80:	4622      	mov	r2, r4
    2f82:	4663      	mov	r3, ip
    2f84:	2a00      	cmp	r2, #0
    2f86:	d1f4      	bne.n	2f72 <strncpy+0x16>
    2f88:	bd30      	pop	{r4, r5, pc}
    2f8a:	460b      	mov	r3, r1
    2f8c:	4684      	mov	ip, r0
    2f8e:	4619      	mov	r1, r3
    2f90:	f853 5b04 	ldr.w	r5, [r3], #4
    2f94:	f1a5 3401 	sub.w	r4, r5, #16843009	; 0x1010101
    2f98:	ea24 0405 	bic.w	r4, r4, r5
    2f9c:	f014 3f80 	tst.w	r4, #2155905152	; 0x80808080
    2fa0:	d1e4      	bne.n	2f6c <strncpy+0x10>
    2fa2:	3a04      	subs	r2, #4
    2fa4:	2a03      	cmp	r2, #3
    2fa6:	f84c 5b04 	str.w	r5, [ip], #4
    2faa:	4619      	mov	r1, r3
    2fac:	d8ef      	bhi.n	2f8e <strncpy+0x32>
    2fae:	e7dd      	b.n	2f6c <strncpy+0x10>
    2fb0:	4494      	add	ip, r2
    2fb2:	2c00      	cmp	r4, #0
    2fb4:	d0e8      	beq.n	2f88 <strncpy+0x2c>
    2fb6:	f803 1b01 	strb.w	r1, [r3], #1
    2fba:	4563      	cmp	r3, ip
    2fbc:	d1fb      	bne.n	2fb6 <strncpy+0x5a>
    2fbe:	bd30      	pop	{r4, r5, pc}

00002fc0 <__swbuf_r>:
    2fc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2fc2:	460d      	mov	r5, r1
    2fc4:	4614      	mov	r4, r2
    2fc6:	4606      	mov	r6, r0
    2fc8:	b110      	cbz	r0, 2fd0 <__swbuf_r+0x10>
    2fca:	6b83      	ldr	r3, [r0, #56]	; 0x38
    2fcc:	2b00      	cmp	r3, #0
    2fce:	d043      	beq.n	3058 <__swbuf_r+0x98>
    2fd0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
    2fd4:	69a3      	ldr	r3, [r4, #24]
    2fd6:	60a3      	str	r3, [r4, #8]
    2fd8:	0717      	lsls	r7, r2, #28
    2fda:	b290      	uxth	r0, r2
    2fdc:	d51b      	bpl.n	3016 <__swbuf_r+0x56>
    2fde:	6923      	ldr	r3, [r4, #16]
    2fe0:	b1cb      	cbz	r3, 3016 <__swbuf_r+0x56>
    2fe2:	b2ed      	uxtb	r5, r5
    2fe4:	0481      	lsls	r1, r0, #18
    2fe6:	462f      	mov	r7, r5
    2fe8:	d522      	bpl.n	3030 <__swbuf_r+0x70>
    2fea:	6822      	ldr	r2, [r4, #0]
    2fec:	6961      	ldr	r1, [r4, #20]
    2fee:	1ad3      	subs	r3, r2, r3
    2ff0:	4299      	cmp	r1, r3
    2ff2:	dd29      	ble.n	3048 <__swbuf_r+0x88>
    2ff4:	3301      	adds	r3, #1
    2ff6:	68a1      	ldr	r1, [r4, #8]
    2ff8:	3901      	subs	r1, #1
    2ffa:	60a1      	str	r1, [r4, #8]
    2ffc:	1c51      	adds	r1, r2, #1
    2ffe:	6021      	str	r1, [r4, #0]
    3000:	7015      	strb	r5, [r2, #0]
    3002:	6962      	ldr	r2, [r4, #20]
    3004:	429a      	cmp	r2, r3
    3006:	d02a      	beq.n	305e <__swbuf_r+0x9e>
    3008:	89a3      	ldrh	r3, [r4, #12]
    300a:	07db      	lsls	r3, r3, #31
    300c:	d501      	bpl.n	3012 <__swbuf_r+0x52>
    300e:	2d0a      	cmp	r5, #10
    3010:	d025      	beq.n	305e <__swbuf_r+0x9e>
    3012:	4638      	mov	r0, r7
    3014:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    3016:	4621      	mov	r1, r4
    3018:	4630      	mov	r0, r6
    301a:	f7fe fb4d 	bl	16b8 <__swsetup_r>
    301e:	bb20      	cbnz	r0, 306a <__swbuf_r+0xaa>
    3020:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
    3024:	6923      	ldr	r3, [r4, #16]
    3026:	b290      	uxth	r0, r2
    3028:	b2ed      	uxtb	r5, r5
    302a:	0481      	lsls	r1, r0, #18
    302c:	462f      	mov	r7, r5
    302e:	d4dc      	bmi.n	2fea <__swbuf_r+0x2a>
    3030:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
    3034:	81a2      	strh	r2, [r4, #12]
    3036:	6e62      	ldr	r2, [r4, #100]	; 0x64
    3038:	6961      	ldr	r1, [r4, #20]
    303a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
    303e:	6662      	str	r2, [r4, #100]	; 0x64
    3040:	6822      	ldr	r2, [r4, #0]
    3042:	1ad3      	subs	r3, r2, r3
    3044:	4299      	cmp	r1, r3
    3046:	dcd5      	bgt.n	2ff4 <__swbuf_r+0x34>
    3048:	4621      	mov	r1, r4
    304a:	4630      	mov	r0, r6
    304c:	f7fe fc36 	bl	18bc <_fflush_r>
    3050:	b958      	cbnz	r0, 306a <__swbuf_r+0xaa>
    3052:	6822      	ldr	r2, [r4, #0]
    3054:	2301      	movs	r3, #1
    3056:	e7ce      	b.n	2ff6 <__swbuf_r+0x36>
    3058:	f7fe fcb8 	bl	19cc <__sinit>
    305c:	e7b8      	b.n	2fd0 <__swbuf_r+0x10>
    305e:	4621      	mov	r1, r4
    3060:	4630      	mov	r0, r6
    3062:	f7fe fc2b 	bl	18bc <_fflush_r>
    3066:	2800      	cmp	r0, #0
    3068:	d0d3      	beq.n	3012 <__swbuf_r+0x52>
    306a:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
    306e:	e7d0      	b.n	3012 <__swbuf_r+0x52>

00003070 <_wcsnrtombs_l>:
    3070:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3074:	b08b      	sub	sp, #44	; 0x2c
    3076:	e9dd 8a15 	ldrd	r8, sl, [sp, #84]	; 0x54
    307a:	9f14      	ldr	r7, [sp, #80]	; 0x50
    307c:	9103      	str	r1, [sp, #12]
    307e:	4681      	mov	r9, r0
    3080:	9205      	str	r2, [sp, #20]
    3082:	461e      	mov	r6, r3
    3084:	f1b8 0f00 	cmp.w	r8, #0
    3088:	d05c      	beq.n	3144 <_wcsnrtombs_l+0xd4>
    308a:	9b03      	ldr	r3, [sp, #12]
    308c:	2b00      	cmp	r3, #0
    308e:	d05e      	beq.n	314e <_wcsnrtombs_l+0xde>
    3090:	9b05      	ldr	r3, [sp, #20]
    3092:	681d      	ldr	r5, [r3, #0]
    3094:	2f00      	cmp	r7, #0
    3096:	d06a      	beq.n	316e <_wcsnrtombs_l+0xfe>
    3098:	1e74      	subs	r4, r6, #1
    309a:	b34e      	cbz	r6, 30f0 <_wcsnrtombs_l+0x80>
    309c:	9b03      	ldr	r3, [sp, #12]
    309e:	9304      	str	r3, [sp, #16]
    30a0:	3d04      	subs	r5, #4
    30a2:	2600      	movs	r6, #0
    30a4:	9501      	str	r5, [sp, #4]
    30a6:	e00b      	b.n	30c0 <_wcsnrtombs_l+0x50>
    30a8:	9b03      	ldr	r3, [sp, #12]
    30aa:	bb2b      	cbnz	r3, 30f8 <_wcsnrtombs_l+0x88>
    30ac:	9b01      	ldr	r3, [sp, #4]
    30ae:	681a      	ldr	r2, [r3, #0]
    30b0:	2a00      	cmp	r2, #0
    30b2:	d03a      	beq.n	312a <_wcsnrtombs_l+0xba>
    30b4:	45bc      	cmp	ip, r7
    30b6:	d25c      	bcs.n	3172 <_wcsnrtombs_l+0x102>
    30b8:	3c01      	subs	r4, #1
    30ba:	1c63      	adds	r3, r4, #1
    30bc:	4666      	mov	r6, ip
    30be:	d017      	beq.n	30f0 <_wcsnrtombs_l+0x80>
    30c0:	f8d8 3000 	ldr.w	r3, [r8]
    30c4:	9302      	str	r3, [sp, #8]
    30c6:	9b01      	ldr	r3, [sp, #4]
    30c8:	f8da 50e0 	ldr.w	r5, [sl, #224]	; 0xe0
    30cc:	f853 2f04 	ldr.w	r2, [r3, #4]!
    30d0:	9301      	str	r3, [sp, #4]
    30d2:	a907      	add	r1, sp, #28
    30d4:	4643      	mov	r3, r8
    30d6:	4648      	mov	r0, r9
    30d8:	f8d8 b004 	ldr.w	fp, [r8, #4]
    30dc:	47a8      	blx	r5
    30de:	1c42      	adds	r2, r0, #1
    30e0:	d03a      	beq.n	3158 <_wcsnrtombs_l+0xe8>
    30e2:	eb00 0c06 	add.w	ip, r0, r6
    30e6:	45bc      	cmp	ip, r7
    30e8:	d9de      	bls.n	30a8 <_wcsnrtombs_l+0x38>
    30ea:	9b02      	ldr	r3, [sp, #8]
    30ec:	e9c8 3b00 	strd	r3, fp, [r8]
    30f0:	4630      	mov	r0, r6
    30f2:	b00b      	add	sp, #44	; 0x2c
    30f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    30f8:	2800      	cmp	r0, #0
    30fa:	dd0e      	ble.n	311a <_wcsnrtombs_l+0xaa>
    30fc:	9b04      	ldr	r3, [sp, #16]
    30fe:	9d01      	ldr	r5, [sp, #4]
    3100:	4418      	add	r0, r3
    3102:	1e5a      	subs	r2, r3, #1
    3104:	a907      	add	r1, sp, #28
    3106:	f100 3eff 	add.w	lr, r0, #4294967295	; 0xffffffff
    310a:	f811 3b01 	ldrb.w	r3, [r1], #1
    310e:	f802 3f01 	strb.w	r3, [r2, #1]!
    3112:	4572      	cmp	r2, lr
    3114:	d1f9      	bne.n	310a <_wcsnrtombs_l+0x9a>
    3116:	9501      	str	r5, [sp, #4]
    3118:	9004      	str	r0, [sp, #16]
    311a:	9b05      	ldr	r3, [sp, #20]
    311c:	681a      	ldr	r2, [r3, #0]
    311e:	3204      	adds	r2, #4
    3120:	601a      	str	r2, [r3, #0]
    3122:	9b01      	ldr	r3, [sp, #4]
    3124:	681a      	ldr	r2, [r3, #0]
    3126:	2a00      	cmp	r2, #0
    3128:	d1c4      	bne.n	30b4 <_wcsnrtombs_l+0x44>
    312a:	9b03      	ldr	r3, [sp, #12]
    312c:	b10b      	cbz	r3, 3132 <_wcsnrtombs_l+0xc2>
    312e:	9b05      	ldr	r3, [sp, #20]
    3130:	601a      	str	r2, [r3, #0]
    3132:	f10c 36ff 	add.w	r6, ip, #4294967295	; 0xffffffff
    3136:	2200      	movs	r2, #0
    3138:	4630      	mov	r0, r6
    313a:	f8c8 2000 	str.w	r2, [r8]
    313e:	b00b      	add	sp, #44	; 0x2c
    3140:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3144:	9b03      	ldr	r3, [sp, #12]
    3146:	f500 788e 	add.w	r8, r0, #284	; 0x11c
    314a:	2b00      	cmp	r3, #0
    314c:	d1a0      	bne.n	3090 <_wcsnrtombs_l+0x20>
    314e:	9b05      	ldr	r3, [sp, #20]
    3150:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
    3154:	681d      	ldr	r5, [r3, #0]
    3156:	e79f      	b.n	3098 <_wcsnrtombs_l+0x28>
    3158:	4606      	mov	r6, r0
    315a:	218a      	movs	r1, #138	; 0x8a
    315c:	2200      	movs	r2, #0
    315e:	4630      	mov	r0, r6
    3160:	f8c9 1000 	str.w	r1, [r9]
    3164:	f8c8 2000 	str.w	r2, [r8]
    3168:	b00b      	add	sp, #44	; 0x2c
    316a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    316e:	463e      	mov	r6, r7
    3170:	e7be      	b.n	30f0 <_wcsnrtombs_l+0x80>
    3172:	4666      	mov	r6, ip
    3174:	e7bc      	b.n	30f0 <_wcsnrtombs_l+0x80>
    3176:	bf00      	nop

00003178 <_wcsnrtombs_r>:
    3178:	b510      	push	{r4, lr}
    317a:	b084      	sub	sp, #16
    317c:	4c05      	ldr	r4, [pc, #20]	; (3194 <_wcsnrtombs_r+0x1c>)
    317e:	9806      	ldr	r0, [sp, #24]
    3180:	9000      	str	r0, [sp, #0]
    3182:	9807      	ldr	r0, [sp, #28]
    3184:	9001      	str	r0, [sp, #4]
    3186:	4804      	ldr	r0, [pc, #16]	; (3198 <_wcsnrtombs_r+0x20>)
    3188:	6800      	ldr	r0, [r0, #0]
    318a:	9402      	str	r4, [sp, #8]
    318c:	f7ff ff70 	bl	3070 <_wcsnrtombs_l>
    3190:	b004      	add	sp, #16
    3192:	bd10      	pop	{r4, pc}
    3194:	20000430 	.word	0x20000430
    3198:	20000000 	.word	0x20000000

0000319c <__ascii_wctomb>:
    319c:	b149      	cbz	r1, 31b2 <__ascii_wctomb+0x16>
    319e:	2aff      	cmp	r2, #255	; 0xff
    31a0:	d802      	bhi.n	31a8 <__ascii_wctomb+0xc>
    31a2:	700a      	strb	r2, [r1, #0]
    31a4:	2001      	movs	r0, #1
    31a6:	4770      	bx	lr
    31a8:	238a      	movs	r3, #138	; 0x8a
    31aa:	6003      	str	r3, [r0, #0]
    31ac:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    31b0:	4770      	bx	lr
    31b2:	4608      	mov	r0, r1
    31b4:	4770      	bx	lr
    31b6:	bf00      	nop

000031b8 <_write_r>:
    31b8:	b538      	push	{r3, r4, r5, lr}
    31ba:	460c      	mov	r4, r1
    31bc:	4d08      	ldr	r5, [pc, #32]	; (31e0 <_write_r+0x28>)
    31be:	4684      	mov	ip, r0
    31c0:	4611      	mov	r1, r2
    31c2:	4620      	mov	r0, r4
    31c4:	461a      	mov	r2, r3
    31c6:	2300      	movs	r3, #0
    31c8:	602b      	str	r3, [r5, #0]
    31ca:	4664      	mov	r4, ip
    31cc:	f7fd f908 	bl	3e0 <_write>
    31d0:	1c43      	adds	r3, r0, #1
    31d2:	d000      	beq.n	31d6 <_write_r+0x1e>
    31d4:	bd38      	pop	{r3, r4, r5, pc}
    31d6:	682b      	ldr	r3, [r5, #0]
    31d8:	2b00      	cmp	r3, #0
    31da:	d0fb      	beq.n	31d4 <_write_r+0x1c>
    31dc:	6023      	str	r3, [r4, #0]
    31de:	bd38      	pop	{r3, r4, r5, pc}
    31e0:	20000ae0 	.word	0x20000ae0

000031e4 <_close_r>:
    31e4:	b538      	push	{r3, r4, r5, lr}
    31e6:	4d07      	ldr	r5, [pc, #28]	; (3204 <_close_r+0x20>)
    31e8:	2200      	movs	r2, #0
    31ea:	4604      	mov	r4, r0
    31ec:	4608      	mov	r0, r1
    31ee:	602a      	str	r2, [r5, #0]
    31f0:	f7fd f911 	bl	416 <_close>
    31f4:	1c43      	adds	r3, r0, #1
    31f6:	d000      	beq.n	31fa <_close_r+0x16>
    31f8:	bd38      	pop	{r3, r4, r5, pc}
    31fa:	682b      	ldr	r3, [r5, #0]
    31fc:	2b00      	cmp	r3, #0
    31fe:	d0fb      	beq.n	31f8 <_close_r+0x14>
    3200:	6023      	str	r3, [r4, #0]
    3202:	bd38      	pop	{r3, r4, r5, pc}
    3204:	20000ae0 	.word	0x20000ae0

00003208 <_fclose_r>:
    3208:	b570      	push	{r4, r5, r6, lr}
    320a:	b139      	cbz	r1, 321c <_fclose_r+0x14>
    320c:	4606      	mov	r6, r0
    320e:	460c      	mov	r4, r1
    3210:	b108      	cbz	r0, 3216 <_fclose_r+0xe>
    3212:	6b83      	ldr	r3, [r0, #56]	; 0x38
    3214:	b383      	cbz	r3, 3278 <_fclose_r+0x70>
    3216:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    321a:	b913      	cbnz	r3, 3222 <_fclose_r+0x1a>
    321c:	2500      	movs	r5, #0
    321e:	4628      	mov	r0, r5
    3220:	bd70      	pop	{r4, r5, r6, pc}
    3222:	4621      	mov	r1, r4
    3224:	4630      	mov	r0, r6
    3226:	f7fe fab1 	bl	178c <__sflush_r>
    322a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    322c:	4605      	mov	r5, r0
    322e:	b133      	cbz	r3, 323e <_fclose_r+0x36>
    3230:	69e1      	ldr	r1, [r4, #28]
    3232:	4630      	mov	r0, r6
    3234:	4798      	blx	r3
    3236:	2800      	cmp	r0, #0
    3238:	bfb8      	it	lt
    323a:	f04f 35ff 	movlt.w	r5, #4294967295	; 0xffffffff
    323e:	89a3      	ldrh	r3, [r4, #12]
    3240:	061b      	lsls	r3, r3, #24
    3242:	d420      	bmi.n	3286 <_fclose_r+0x7e>
    3244:	6b21      	ldr	r1, [r4, #48]	; 0x30
    3246:	b141      	cbz	r1, 325a <_fclose_r+0x52>
    3248:	f104 0340 	add.w	r3, r4, #64	; 0x40
    324c:	4299      	cmp	r1, r3
    324e:	d002      	beq.n	3256 <_fclose_r+0x4e>
    3250:	4630      	mov	r0, r6
    3252:	f7fe fc7d 	bl	1b50 <_free_r>
    3256:	2300      	movs	r3, #0
    3258:	6323      	str	r3, [r4, #48]	; 0x30
    325a:	6c61      	ldr	r1, [r4, #68]	; 0x44
    325c:	b121      	cbz	r1, 3268 <_fclose_r+0x60>
    325e:	4630      	mov	r0, r6
    3260:	f7fe fc76 	bl	1b50 <_free_r>
    3264:	2300      	movs	r3, #0
    3266:	6463      	str	r3, [r4, #68]	; 0x44
    3268:	f7fe fbb6 	bl	19d8 <__sfp_lock_acquire>
    326c:	2300      	movs	r3, #0
    326e:	81a3      	strh	r3, [r4, #12]
    3270:	f7fe fbb4 	bl	19dc <__sfp_lock_release>
    3274:	4628      	mov	r0, r5
    3276:	bd70      	pop	{r4, r5, r6, pc}
    3278:	f7fe fba8 	bl	19cc <__sinit>
    327c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    3280:	2b00      	cmp	r3, #0
    3282:	d0cb      	beq.n	321c <_fclose_r+0x14>
    3284:	e7cd      	b.n	3222 <_fclose_r+0x1a>
    3286:	6921      	ldr	r1, [r4, #16]
    3288:	4630      	mov	r0, r6
    328a:	f7fe fc61 	bl	1b50 <_free_r>
    328e:	e7d9      	b.n	3244 <_fclose_r+0x3c>

00003290 <_fstat_r>:
    3290:	b570      	push	{r4, r5, r6, lr}
    3292:	460c      	mov	r4, r1
    3294:	4d08      	ldr	r5, [pc, #32]	; (32b8 <_fstat_r+0x28>)
    3296:	4603      	mov	r3, r0
    3298:	2600      	movs	r6, #0
    329a:	4620      	mov	r0, r4
    329c:	4611      	mov	r1, r2
    329e:	461c      	mov	r4, r3
    32a0:	602e      	str	r6, [r5, #0]
    32a2:	f7fd f8c4 	bl	42e <_fstat>
    32a6:	1c43      	adds	r3, r0, #1
    32a8:	d000      	beq.n	32ac <_fstat_r+0x1c>
    32aa:	bd70      	pop	{r4, r5, r6, pc}
    32ac:	682b      	ldr	r3, [r5, #0]
    32ae:	2b00      	cmp	r3, #0
    32b0:	d0fb      	beq.n	32aa <_fstat_r+0x1a>
    32b2:	6023      	str	r3, [r4, #0]
    32b4:	bd70      	pop	{r4, r5, r6, pc}
    32b6:	bf00      	nop
    32b8:	20000ae0 	.word	0x20000ae0

000032bc <_isatty_r>:
    32bc:	b538      	push	{r3, r4, r5, lr}
    32be:	4d07      	ldr	r5, [pc, #28]	; (32dc <_isatty_r+0x20>)
    32c0:	2200      	movs	r2, #0
    32c2:	4604      	mov	r4, r0
    32c4:	4608      	mov	r0, r1
    32c6:	602a      	str	r2, [r5, #0]
    32c8:	f7fd f8bd 	bl	446 <_isatty>
    32cc:	1c43      	adds	r3, r0, #1
    32ce:	d000      	beq.n	32d2 <_isatty_r+0x16>
    32d0:	bd38      	pop	{r3, r4, r5, pc}
    32d2:	682b      	ldr	r3, [r5, #0]
    32d4:	2b00      	cmp	r3, #0
    32d6:	d0fb      	beq.n	32d0 <_isatty_r+0x14>
    32d8:	6023      	str	r3, [r4, #0]
    32da:	bd38      	pop	{r3, r4, r5, pc}
    32dc:	20000ae0 	.word	0x20000ae0

000032e0 <_lseek_r>:
    32e0:	b538      	push	{r3, r4, r5, lr}
    32e2:	460c      	mov	r4, r1
    32e4:	4d08      	ldr	r5, [pc, #32]	; (3308 <_lseek_r+0x28>)
    32e6:	4684      	mov	ip, r0
    32e8:	4611      	mov	r1, r2
    32ea:	4620      	mov	r0, r4
    32ec:	461a      	mov	r2, r3
    32ee:	2300      	movs	r3, #0
    32f0:	602b      	str	r3, [r5, #0]
    32f2:	4664      	mov	r4, ip
    32f4:	f7fd f8b2 	bl	45c <_lseek>
    32f8:	1c43      	adds	r3, r0, #1
    32fa:	d000      	beq.n	32fe <_lseek_r+0x1e>
    32fc:	bd38      	pop	{r3, r4, r5, pc}
    32fe:	682b      	ldr	r3, [r5, #0]
    3300:	2b00      	cmp	r3, #0
    3302:	d0fb      	beq.n	32fc <_lseek_r+0x1c>
    3304:	6023      	str	r3, [r4, #0]
    3306:	bd38      	pop	{r3, r4, r5, pc}
    3308:	20000ae0 	.word	0x20000ae0

0000330c <_read_r>:
    330c:	b538      	push	{r3, r4, r5, lr}
    330e:	460c      	mov	r4, r1
    3310:	4d08      	ldr	r5, [pc, #32]	; (3334 <_read_r+0x28>)
    3312:	4684      	mov	ip, r0
    3314:	4611      	mov	r1, r2
    3316:	4620      	mov	r0, r4
    3318:	461a      	mov	r2, r3
    331a:	2300      	movs	r3, #0
    331c:	602b      	str	r3, [r5, #0]
    331e:	4664      	mov	r4, ip
    3320:	f7fd f8a9 	bl	476 <_read>
    3324:	1c43      	adds	r3, r0, #1
    3326:	d000      	beq.n	332a <_read_r+0x1e>
    3328:	bd38      	pop	{r3, r4, r5, pc}
    332a:	682b      	ldr	r3, [r5, #0]
    332c:	2b00      	cmp	r3, #0
    332e:	d0fb      	beq.n	3328 <_read_r+0x1c>
    3330:	6023      	str	r3, [r4, #0]
    3332:	bd38      	pop	{r3, r4, r5, pc}
    3334:	20000ae0 	.word	0x20000ae0

00003338 <GPIOPinWrite>:
//! \return None.
//
//*****************************************************************************
void
GPIOPinWrite(unsigned long ulPort, unsigned char ucPins, unsigned char ucVal)
{
    3338:	b480      	push	{r7}
    333a:	b083      	sub	sp, #12
    333c:	af00      	add	r7, sp, #0
    333e:	6078      	str	r0, [r7, #4]
    3340:	460b      	mov	r3, r1
    3342:	70fb      	strb	r3, [r7, #3]
    3344:	4613      	mov	r3, r2
    3346:	70bb      	strb	r3, [r7, #2]
    ASSERT(GPIOBaseValid(ulPort));

    //
    // Write the pins.
    //
    HWREG(ulPort + (GPIO_O_DATA + (ucPins << 2))) = ucVal;
    3348:	78fb      	ldrb	r3, [r7, #3]
    334a:	009b      	lsls	r3, r3, #2
    334c:	461a      	mov	r2, r3
    334e:	687b      	ldr	r3, [r7, #4]
    3350:	4413      	add	r3, r2
    3352:	461a      	mov	r2, r3
    3354:	78bb      	ldrb	r3, [r7, #2]
    3356:	6013      	str	r3, [r2, #0]
}
    3358:	bf00      	nop
    335a:	370c      	adds	r7, #12
    335c:	46bd      	mov	sp, r7
    335e:	f85d 7b04 	ldr.w	r7, [sp], #4
    3362:	4770      	bx	lr

00003364 <GPIOPinConfigure>:
//! \return None.
//
//*****************************************************************************
void
GPIOPinConfigure(unsigned long ulPinConfig)
{
    3364:	b480      	push	{r7}
    3366:	b085      	sub	sp, #20
    3368:	af00      	add	r7, sp, #0
    336a:	6078      	str	r0, [r7, #4]
    ASSERT(((ulPinConfig >> 8) & 0xe3) == 0);

    //
    // Extract the base address index from the input value.
    //
    ulBase = (ulPinConfig >> 16) & 0xff;
    336c:	687b      	ldr	r3, [r7, #4]
    336e:	0c1b      	lsrs	r3, r3, #16
    3370:	b2db      	uxtb	r3, r3
    3372:	60fb      	str	r3, [r7, #12]

    //
    // Get the base address of the GPIO module, selecting either the APB or the
    // AHB aperture as appropriate.
    //
    if(HWREG(SYSCTL_GPIOHBCTL) & (1 << ulBase))
    3374:	4b1a      	ldr	r3, [pc, #104]	; (33e0 <GPIOPinConfigure+0x7c>)
    3376:	681b      	ldr	r3, [r3, #0]
    3378:	2101      	movs	r1, #1
    337a:	68fa      	ldr	r2, [r7, #12]
    337c:	fa01 f202 	lsl.w	r2, r1, r2
    3380:	4013      	ands	r3, r2
    3382:	2b00      	cmp	r3, #0
    3384:	d007      	beq.n	3396 <GPIOPinConfigure+0x32>
    {
        ulBase = g_pulGPIOBaseAddrs[(ulBase << 1) + 1];
    3386:	68fb      	ldr	r3, [r7, #12]
    3388:	005b      	lsls	r3, r3, #1
    338a:	3301      	adds	r3, #1
    338c:	4a15      	ldr	r2, [pc, #84]	; (33e4 <GPIOPinConfigure+0x80>)
    338e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
    3392:	60fb      	str	r3, [r7, #12]
    3394:	e005      	b.n	33a2 <GPIOPinConfigure+0x3e>
    }
    else
    {
        ulBase = g_pulGPIOBaseAddrs[ulBase << 1];
    3396:	68fb      	ldr	r3, [r7, #12]
    3398:	005b      	lsls	r3, r3, #1
    339a:	4a12      	ldr	r2, [pc, #72]	; (33e4 <GPIOPinConfigure+0x80>)
    339c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
    33a0:	60fb      	str	r3, [r7, #12]
    }

    //
    // Extract the shift from the input value.
    //
    ulShift = (ulPinConfig >> 8) & 0xff;
    33a2:	687b      	ldr	r3, [r7, #4]
    33a4:	0a1b      	lsrs	r3, r3, #8
    33a6:	b2db      	uxtb	r3, r3
    33a8:	60bb      	str	r3, [r7, #8]

    //
    // Write the requested pin muxing value for this GPIO pin.
    //
    HWREG(ulBase + GPIO_O_PCTL) = ((HWREG(ulBase + GPIO_O_PCTL) &
    33aa:	68fb      	ldr	r3, [r7, #12]
    33ac:	f203 532c 	addw	r3, r3, #1324	; 0x52c
    33b0:	681b      	ldr	r3, [r3, #0]
                                    ~(0xf << ulShift)) |
    33b2:	210f      	movs	r1, #15
    33b4:	68ba      	ldr	r2, [r7, #8]
    33b6:	fa01 f202 	lsl.w	r2, r1, r2
    33ba:	43d2      	mvns	r2, r2
    HWREG(ulBase + GPIO_O_PCTL) = ((HWREG(ulBase + GPIO_O_PCTL) &
    33bc:	401a      	ands	r2, r3
                                   ((ulPinConfig & 0xf) << ulShift));
    33be:	687b      	ldr	r3, [r7, #4]
    33c0:	f003 010f 	and.w	r1, r3, #15
    33c4:	68bb      	ldr	r3, [r7, #8]
    33c6:	fa01 f303 	lsl.w	r3, r1, r3
    HWREG(ulBase + GPIO_O_PCTL) = ((HWREG(ulBase + GPIO_O_PCTL) &
    33ca:	68f9      	ldr	r1, [r7, #12]
    33cc:	f201 512c 	addw	r1, r1, #1324	; 0x52c
                                    ~(0xf << ulShift)) |
    33d0:	4313      	orrs	r3, r2
    HWREG(ulBase + GPIO_O_PCTL) = ((HWREG(ulBase + GPIO_O_PCTL) &
    33d2:	600b      	str	r3, [r1, #0]
}
    33d4:	bf00      	nop
    33d6:	3714      	adds	r7, #20
    33d8:	46bd      	mov	sp, r7
    33da:	f85d 7b04 	ldr.w	r7, [sp], #4
    33de:	4770      	bx	lr
    33e0:	400fe06c 	.word	0x400fe06c
    33e4:	000038d4 	.word	0x000038d4

000033e8 <SysCtlDelay>:
#endif
#if defined(codered) || defined(gcc) || defined(sourcerygxx)
void __attribute__((naked))
SysCtlDelay(unsigned long ulCount)
{
    __asm("    subs    r0, #1\n"
    33e8:	3801      	subs	r0, #1
    33ea:	f47f affd 	bne.w	33e8 <SysCtlDelay>
    33ee:	4770      	bx	lr
          "    bne     SysCtlDelay\n"
          "    bx      lr");
}
    33f0:	bf00      	nop
	...

000033f4 <SysCtlClockGet>:
//! \return The processor clock rate.
//
//*****************************************************************************
unsigned long
SysCtlClockGet(void)
{
    33f4:	b480      	push	{r7}
    33f6:	b087      	sub	sp, #28
    33f8:	af00      	add	r7, sp, #0
    //
    // Read RCC and RCC2.  For Sandstorm-class devices (which do not have
    // RCC2), the RCC2 read returns 0, indicating that RCC2 is
    // disabled (because the SYSCTL_RCC2_USERCC2 bit is clear).
    //
    ulRCC = HWREG(SYSCTL_RCC);
    33fa:	4b7e      	ldr	r3, [pc, #504]	; (35f4 <SysCtlClockGet+0x200>)
    33fc:	681b      	ldr	r3, [r3, #0]
    33fe:	617b      	str	r3, [r7, #20]
    ulRCC2 = HWREG(SYSCTL_RCC2);
    3400:	4b7d      	ldr	r3, [pc, #500]	; (35f8 <SysCtlClockGet+0x204>)
    3402:	681b      	ldr	r3, [r3, #0]
    3404:	60fb      	str	r3, [r7, #12]

    //
    // Get the base clock rate.
    //
    switch((ulRCC2 & SYSCTL_RCC2_USERCC2) ?
    3406:	68fb      	ldr	r3, [r7, #12]
           (ulRCC2 & SYSCTL_RCC2_OSCSRC2_M) :
    3408:	2b00      	cmp	r3, #0
    340a:	da03      	bge.n	3414 <SysCtlClockGet+0x20>
    340c:	68fb      	ldr	r3, [r7, #12]
    340e:	f003 0370 	and.w	r3, r3, #112	; 0x70
    3412:	e002      	b.n	341a <SysCtlClockGet+0x26>
    3414:	697b      	ldr	r3, [r7, #20]
    3416:	f003 0330 	and.w	r3, r3, #48	; 0x30
    switch((ulRCC2 & SYSCTL_RCC2_USERCC2) ?
    341a:	2b70      	cmp	r3, #112	; 0x70
    341c:	f000 8083 	beq.w	3526 <SysCtlClockGet+0x132>
    3420:	2b70      	cmp	r3, #112	; 0x70
    3422:	f200 8084 	bhi.w	352e <SysCtlClockGet+0x13a>
    3426:	2b60      	cmp	r3, #96	; 0x60
    3428:	d079      	beq.n	351e <SysCtlClockGet+0x12a>
    342a:	2b60      	cmp	r3, #96	; 0x60
    342c:	d87f      	bhi.n	352e <SysCtlClockGet+0x13a>
    342e:	2b30      	cmp	r3, #48	; 0x30
    3430:	d071      	beq.n	3516 <SysCtlClockGet+0x122>
    3432:	2b30      	cmp	r3, #48	; 0x30
    3434:	d87b      	bhi.n	352e <SysCtlClockGet+0x13a>
    3436:	2b20      	cmp	r3, #32
    3438:	d03e      	beq.n	34b8 <SysCtlClockGet+0xc4>
    343a:	2b20      	cmp	r3, #32
    343c:	d877      	bhi.n	352e <SysCtlClockGet+0x13a>
    343e:	2b00      	cmp	r3, #0
    3440:	d002      	beq.n	3448 <SysCtlClockGet+0x54>
    3442:	2b10      	cmp	r3, #16
    3444:	d009      	beq.n	345a <SysCtlClockGet+0x66>
    3446:	e072      	b.n	352e <SysCtlClockGet+0x13a>
        // The main oscillator is the clock source.  Determine its rate from
        // the crystal setting field.
        //
        case SYSCTL_RCC_OSCSRC_MAIN:
        {
            ulClk = g_pulXtals[(ulRCC & SYSCTL_RCC_XTAL_M) >>
    3448:	697b      	ldr	r3, [r7, #20]
    344a:	099b      	lsrs	r3, r3, #6
    344c:	f003 031f 	and.w	r3, r3, #31
    3450:	4a6a      	ldr	r2, [pc, #424]	; (35fc <SysCtlClockGet+0x208>)
    3452:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
    3456:	613b      	str	r3, [r7, #16]
                               SYSCTL_RCC_XTAL_S];
            break;
    3458:	e06b      	b.n	3532 <SysCtlClockGet+0x13e>
        case SYSCTL_RCC_OSCSRC_INT:
        {
            //
            // See if this is a Sandstorm-class or Fury-class device.
            //
            if(CLASS_IS_SANDSTORM)
    345a:	4b69      	ldr	r3, [pc, #420]	; (3600 <SysCtlClockGet+0x20c>)
    345c:	681b      	ldr	r3, [r3, #0]
    345e:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
    3462:	2b00      	cmp	r3, #0
    3464:	d006      	beq.n	3474 <SysCtlClockGet+0x80>
    3466:	4b66      	ldr	r3, [pc, #408]	; (3600 <SysCtlClockGet+0x20c>)
    3468:	681a      	ldr	r2, [r3, #0]
    346a:	4b66      	ldr	r3, [pc, #408]	; (3604 <SysCtlClockGet+0x210>)
    346c:	4013      	ands	r3, r2
    346e:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
    3472:	d102      	bne.n	347a <SysCtlClockGet+0x86>
            {
                //
                // The internal oscillator on a Sandstorm-class device is
                // 15 MHz +/- 50%.
                //
                ulClk = 15000000;
    3474:	4b64      	ldr	r3, [pc, #400]	; (3608 <SysCtlClockGet+0x214>)
    3476:	613b      	str	r3, [r7, #16]
    3478:	e01d      	b.n	34b6 <SysCtlClockGet+0xc2>
            }
            else if((CLASS_IS_FURY && REVISION_IS_A2) ||
    347a:	4b61      	ldr	r3, [pc, #388]	; (3600 <SysCtlClockGet+0x20c>)
    347c:	681a      	ldr	r2, [r3, #0]
    347e:	4b61      	ldr	r3, [pc, #388]	; (3604 <SysCtlClockGet+0x210>)
    3480:	4013      	ands	r3, r2
    3482:	4a62      	ldr	r2, [pc, #392]	; (360c <SysCtlClockGet+0x218>)
    3484:	4293      	cmp	r3, r2
    3486:	d104      	bne.n	3492 <SysCtlClockGet+0x9e>
    3488:	4b5d      	ldr	r3, [pc, #372]	; (3600 <SysCtlClockGet+0x20c>)
    348a:	681b      	ldr	r3, [r3, #0]
    348c:	b29b      	uxth	r3, r3
    348e:	2b02      	cmp	r3, #2
    3490:	d00b      	beq.n	34aa <SysCtlClockGet+0xb6>
                    (CLASS_IS_DUSTDEVIL && REVISION_IS_A0))
    3492:	4b5b      	ldr	r3, [pc, #364]	; (3600 <SysCtlClockGet+0x20c>)
    3494:	681a      	ldr	r2, [r3, #0]
    3496:	4b5b      	ldr	r3, [pc, #364]	; (3604 <SysCtlClockGet+0x210>)
    3498:	4013      	ands	r3, r2
            else if((CLASS_IS_FURY && REVISION_IS_A2) ||
    349a:	4a5d      	ldr	r2, [pc, #372]	; (3610 <SysCtlClockGet+0x21c>)
    349c:	4293      	cmp	r3, r2
    349e:	d107      	bne.n	34b0 <SysCtlClockGet+0xbc>
                    (CLASS_IS_DUSTDEVIL && REVISION_IS_A0))
    34a0:	4b57      	ldr	r3, [pc, #348]	; (3600 <SysCtlClockGet+0x20c>)
    34a2:	681b      	ldr	r3, [r3, #0]
    34a4:	b29b      	uxth	r3, r3
    34a6:	2b00      	cmp	r3, #0
    34a8:	d102      	bne.n	34b0 <SysCtlClockGet+0xbc>
            {
                //
                // The internal oscillator on a rev A2 Fury-class device and a
                // Dustdevil-class device is 12 MHz +/- 30%.
                //
                ulClk = 12000000;
    34aa:	4b5a      	ldr	r3, [pc, #360]	; (3614 <SysCtlClockGet+0x220>)
    34ac:	613b      	str	r3, [r7, #16]
    34ae:	e002      	b.n	34b6 <SysCtlClockGet+0xc2>
            else
            {
                //
                // The internal oscillator on all other devices is 16 MHz.
                //
                ulClk = 16000000;
    34b0:	4b59      	ldr	r3, [pc, #356]	; (3618 <SysCtlClockGet+0x224>)
    34b2:	613b      	str	r3, [r7, #16]
            }
            break;
    34b4:	e03d      	b.n	3532 <SysCtlClockGet+0x13e>
    34b6:	e03c      	b.n	3532 <SysCtlClockGet+0x13e>
        case SYSCTL_RCC_OSCSRC_INT4:
        {
            //
            // See if this is a Sandstorm-class or Fury-class device.
            //
            if(CLASS_IS_SANDSTORM)
    34b8:	4b51      	ldr	r3, [pc, #324]	; (3600 <SysCtlClockGet+0x20c>)
    34ba:	681b      	ldr	r3, [r3, #0]
    34bc:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
    34c0:	2b00      	cmp	r3, #0
    34c2:	d006      	beq.n	34d2 <SysCtlClockGet+0xde>
    34c4:	4b4e      	ldr	r3, [pc, #312]	; (3600 <SysCtlClockGet+0x20c>)
    34c6:	681a      	ldr	r2, [r3, #0]
    34c8:	4b4e      	ldr	r3, [pc, #312]	; (3604 <SysCtlClockGet+0x210>)
    34ca:	4013      	ands	r3, r2
    34cc:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
    34d0:	d102      	bne.n	34d8 <SysCtlClockGet+0xe4>
            {
                //
                // The internal oscillator on a Sandstorm-class device is
                // 15 MHz +/- 50%.
                //
                ulClk = 15000000 / 4;
    34d2:	4b52      	ldr	r3, [pc, #328]	; (361c <SysCtlClockGet+0x228>)
    34d4:	613b      	str	r3, [r7, #16]
    34d6:	e01d      	b.n	3514 <SysCtlClockGet+0x120>
            }
            else if((CLASS_IS_FURY && REVISION_IS_A2) ||
    34d8:	4b49      	ldr	r3, [pc, #292]	; (3600 <SysCtlClockGet+0x20c>)
    34da:	681a      	ldr	r2, [r3, #0]
    34dc:	4b49      	ldr	r3, [pc, #292]	; (3604 <SysCtlClockGet+0x210>)
    34de:	4013      	ands	r3, r2
    34e0:	4a4a      	ldr	r2, [pc, #296]	; (360c <SysCtlClockGet+0x218>)
    34e2:	4293      	cmp	r3, r2
    34e4:	d104      	bne.n	34f0 <SysCtlClockGet+0xfc>
    34e6:	4b46      	ldr	r3, [pc, #280]	; (3600 <SysCtlClockGet+0x20c>)
    34e8:	681b      	ldr	r3, [r3, #0]
    34ea:	b29b      	uxth	r3, r3
    34ec:	2b02      	cmp	r3, #2
    34ee:	d00b      	beq.n	3508 <SysCtlClockGet+0x114>
                    (CLASS_IS_DUSTDEVIL && REVISION_IS_A0))
    34f0:	4b43      	ldr	r3, [pc, #268]	; (3600 <SysCtlClockGet+0x20c>)
    34f2:	681a      	ldr	r2, [r3, #0]
    34f4:	4b43      	ldr	r3, [pc, #268]	; (3604 <SysCtlClockGet+0x210>)
    34f6:	4013      	ands	r3, r2
            else if((CLASS_IS_FURY && REVISION_IS_A2) ||
    34f8:	4a45      	ldr	r2, [pc, #276]	; (3610 <SysCtlClockGet+0x21c>)
    34fa:	4293      	cmp	r3, r2
    34fc:	d107      	bne.n	350e <SysCtlClockGet+0x11a>
                    (CLASS_IS_DUSTDEVIL && REVISION_IS_A0))
    34fe:	4b40      	ldr	r3, [pc, #256]	; (3600 <SysCtlClockGet+0x20c>)
    3500:	681b      	ldr	r3, [r3, #0]
    3502:	b29b      	uxth	r3, r3
    3504:	2b00      	cmp	r3, #0
    3506:	d102      	bne.n	350e <SysCtlClockGet+0x11a>
            {
                //
                // The internal oscillator on a rev A2 Fury-class device and a
                // Dustdevil-class device is 12 MHz +/- 30%.
                //
                ulClk = 12000000 / 4;
    3508:	4b45      	ldr	r3, [pc, #276]	; (3620 <SysCtlClockGet+0x22c>)
    350a:	613b      	str	r3, [r7, #16]
    350c:	e002      	b.n	3514 <SysCtlClockGet+0x120>
            else
            {
                //
                // The internal oscillator on a Tempest-class device is 16 MHz.
                //
                ulClk = 16000000 / 4;
    350e:	4b45      	ldr	r3, [pc, #276]	; (3624 <SysCtlClockGet+0x230>)
    3510:	613b      	str	r3, [r7, #16]
            }
            break;
    3512:	e00e      	b.n	3532 <SysCtlClockGet+0x13e>
    3514:	e00d      	b.n	3532 <SysCtlClockGet+0x13e>
        case SYSCTL_RCC_OSCSRC_30:
        {
            //
            // The internal 30-KHz oscillator has an accuracy of +/- 30%.
            //
            ulClk = 30000;
    3516:	f247 5330 	movw	r3, #30000	; 0x7530
    351a:	613b      	str	r3, [r7, #16]
            break;
    351c:	e009      	b.n	3532 <SysCtlClockGet+0x13e>
        // The 4.194304-MHz clock from the hibernate module is the clock
        // source.
        //
        case SYSCTL_RCC2_OSCSRC2_419:
        {
            ulClk = 4194304;
    351e:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
    3522:	613b      	str	r3, [r7, #16]
            break;
    3524:	e005      	b.n	3532 <SysCtlClockGet+0x13e>
        //
        // The 32.768-KHz clock from the hibernate module is the source clock.
        //
        case SYSCTL_RCC2_OSCSRC2_32:
        {
            ulClk = 32768;
    3526:	f44f 4300 	mov.w	r3, #32768	; 0x8000
    352a:	613b      	str	r3, [r7, #16]
            break;
    352c:	e001      	b.n	3532 <SysCtlClockGet+0x13e>
        // An unknown setting, so return a zero clock (that is, an unknown
        // clock rate).
        //
        default:
        {
            return(0);
    352e:	2300      	movs	r3, #0
    3530:	e0e1      	b.n	36f6 <SysCtlClockGet+0x302>
    }

    //
    // See if the PLL is being used.
    //
    if(((ulRCC2 & SYSCTL_RCC2_USERCC2) && !(ulRCC2 & SYSCTL_RCC2_BYPASS2)) ||
    3532:	68fb      	ldr	r3, [r7, #12]
    3534:	2b00      	cmp	r3, #0
    3536:	da04      	bge.n	3542 <SysCtlClockGet+0x14e>
    3538:	68fb      	ldr	r3, [r7, #12]
    353a:	f403 6300 	and.w	r3, r3, #2048	; 0x800
    353e:	2b00      	cmp	r3, #0
    3540:	d009      	beq.n	3556 <SysCtlClockGet+0x162>
       (!(ulRCC2 & SYSCTL_RCC2_USERCC2) && !(ulRCC & SYSCTL_RCC_BYPASS)))
    3542:	68fb      	ldr	r3, [r7, #12]
    if(((ulRCC2 & SYSCTL_RCC2_USERCC2) && !(ulRCC2 & SYSCTL_RCC2_BYPASS2)) ||
    3544:	2b00      	cmp	r3, #0
    3546:	f2c0 809a 	blt.w	367e <SysCtlClockGet+0x28a>
       (!(ulRCC2 & SYSCTL_RCC2_USERCC2) && !(ulRCC & SYSCTL_RCC_BYPASS)))
    354a:	697b      	ldr	r3, [r7, #20]
    354c:	f403 6300 	and.w	r3, r3, #2048	; 0x800
    3550:	2b00      	cmp	r3, #0
    3552:	f040 8094 	bne.w	367e <SysCtlClockGet+0x28a>
    {
        //
        // See if this is a Blizzard-class device.
        //
        if(CLASS_IS_BLIZZARD)
    3556:	4b2a      	ldr	r3, [pc, #168]	; (3600 <SysCtlClockGet+0x20c>)
    3558:	681a      	ldr	r2, [r3, #0]
    355a:	4b2a      	ldr	r3, [pc, #168]	; (3604 <SysCtlClockGet+0x210>)
    355c:	4013      	ands	r3, r2
    355e:	4a32      	ldr	r2, [pc, #200]	; (3628 <SysCtlClockGet+0x234>)
    3560:	4293      	cmp	r3, r2
    3562:	d126      	bne.n	35b2 <SysCtlClockGet+0x1be>
        {
            //
            // Read the two PLL frequency registers.  The formula for a
            // Blizzard-class device is "(xtal * m) / ((q + 1) * (n + 1))".
            //
            ulPLL = HWREG(SYSCTL_PLLFREQ0);
    3564:	4b31      	ldr	r3, [pc, #196]	; (362c <SysCtlClockGet+0x238>)
    3566:	681b      	ldr	r3, [r3, #0]
    3568:	60bb      	str	r3, [r7, #8]
            ulPLL1 = HWREG(SYSCTL_PLLFREQ1);
    356a:	4b31      	ldr	r3, [pc, #196]	; (3630 <SysCtlClockGet+0x23c>)
    356c:	681b      	ldr	r3, [r3, #0]
    356e:	607b      	str	r3, [r7, #4]

            //
            // Divide the input clock by the dividers.
            //
            ulClk /= ((((ulPLL1 & SYSCTL_PLLFREQ1_Q_M) >>
    3570:	687b      	ldr	r3, [r7, #4]
    3572:	0a1b      	lsrs	r3, r3, #8
    3574:	f003 031f 	and.w	r3, r3, #31
                        SYSCTL_PLLFREQ1_Q_S) + 1) *
    3578:	3301      	adds	r3, #1
                      (((ulPLL1 & SYSCTL_PLLFREQ1_N_M) >>
    357a:	687a      	ldr	r2, [r7, #4]
    357c:	f002 021f 	and.w	r2, r2, #31
                        SYSCTL_PLLFREQ1_N_S) + 1) * 2);
    3580:	3201      	adds	r2, #1
                        SYSCTL_PLLFREQ1_Q_S) + 1) *
    3582:	fb02 f303 	mul.w	r3, r2, r3
                        SYSCTL_PLLFREQ1_N_S) + 1) * 2);
    3586:	005b      	lsls	r3, r3, #1
            ulClk /= ((((ulPLL1 & SYSCTL_PLLFREQ1_Q_M) >>
    3588:	693a      	ldr	r2, [r7, #16]
    358a:	fbb2 f3f3 	udiv	r3, r2, r3
    358e:	613b      	str	r3, [r7, #16]

            //
            // Multiply the clock by the multiplier, which is split into an
            // integer part and a fractional part.
            //
            ulClk = ((ulClk * ((ulPLL & SYSCTL_PLLFREQ0_MINT_M) >>
    3590:	68bb      	ldr	r3, [r7, #8]
    3592:	f3c3 0309 	ubfx	r3, r3, #0, #10
    3596:	693a      	ldr	r2, [r7, #16]
    3598:	fb03 f202 	mul.w	r2, r3, r2
                               SYSCTL_PLLFREQ0_MINT_S)) +
                     ((ulClk * ((ulPLL & SYSCTL_PLLFREQ0_MFRAC_M) >>
    359c:	68bb      	ldr	r3, [r7, #8]
    359e:	0a9b      	lsrs	r3, r3, #10
    35a0:	f3c3 0309 	ubfx	r3, r3, #0, #10
    35a4:	6939      	ldr	r1, [r7, #16]
    35a6:	fb01 f303 	mul.w	r3, r1, r3
                                SYSCTL_PLLFREQ0_MFRAC_S)) >> 10));
    35aa:	0a9b      	lsrs	r3, r3, #10
            ulClk = ((ulClk * ((ulPLL & SYSCTL_PLLFREQ0_MINT_M) >>
    35ac:	4413      	add	r3, r2
    35ae:	613b      	str	r3, [r7, #16]
    35b0:	e061      	b.n	3676 <SysCtlClockGet+0x282>
        else
        {
            //
            // Get the PLL configuration.
            //
            ulPLL = HWREG(SYSCTL_PLLCFG);
    35b2:	4b20      	ldr	r3, [pc, #128]	; (3634 <SysCtlClockGet+0x240>)
    35b4:	681b      	ldr	r3, [r3, #0]
    35b6:	60bb      	str	r3, [r7, #8]

            //
            // See if this is a Sandstorm-class or Fury-class device.
            //
            if(CLASS_IS_SANDSTORM)
    35b8:	4b11      	ldr	r3, [pc, #68]	; (3600 <SysCtlClockGet+0x20c>)
    35ba:	681b      	ldr	r3, [r3, #0]
    35bc:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
    35c0:	2b00      	cmp	r3, #0
    35c2:	d006      	beq.n	35d2 <SysCtlClockGet+0x1de>
    35c4:	4b0e      	ldr	r3, [pc, #56]	; (3600 <SysCtlClockGet+0x20c>)
    35c6:	681a      	ldr	r2, [r3, #0]
    35c8:	4b0e      	ldr	r3, [pc, #56]	; (3604 <SysCtlClockGet+0x210>)
    35ca:	4013      	ands	r3, r2
    35cc:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
    35d0:	d132      	bne.n	3638 <SysCtlClockGet+0x244>
                //
                // Compute the PLL output frequency based on its input
                // frequency.  The formula for a Sandstorm-class devices is
                // "(xtal * (f + 2)) / (r + 2)".
                //
                ulClk = ((ulClk * (((ulPLL & SYSCTL_PLLCFG_F_M) >>
    35d2:	68bb      	ldr	r3, [r7, #8]
    35d4:	095b      	lsrs	r3, r3, #5
    35d6:	f3c3 0308 	ubfx	r3, r3, #0, #9
                                    SYSCTL_PLLCFG_F_S) + 2)) /
    35da:	3302      	adds	r3, #2
                ulClk = ((ulClk * (((ulPLL & SYSCTL_PLLCFG_F_M) >>
    35dc:	693a      	ldr	r2, [r7, #16]
    35de:	fb03 f202 	mul.w	r2, r3, r2
                         (((ulPLL & SYSCTL_PLLCFG_R_M) >>
    35e2:	68bb      	ldr	r3, [r7, #8]
    35e4:	f003 031f 	and.w	r3, r3, #31
                           SYSCTL_PLLCFG_R_S) + 2));
    35e8:	3302      	adds	r3, #2
                ulClk = ((ulClk * (((ulPLL & SYSCTL_PLLCFG_F_M) >>
    35ea:	fbb2 f3f3 	udiv	r3, r2, r3
    35ee:	613b      	str	r3, [r7, #16]
    35f0:	e031      	b.n	3656 <SysCtlClockGet+0x262>
    35f2:	bf00      	nop
    35f4:	400fe060 	.word	0x400fe060
    35f8:	400fe070 	.word	0x400fe070
    35fc:	0000394c 	.word	0x0000394c
    3600:	400fe000 	.word	0x400fe000
    3604:	70ff0000 	.word	0x70ff0000
    3608:	00e4e1c0 	.word	0x00e4e1c0
    360c:	10010000 	.word	0x10010000
    3610:	10030000 	.word	0x10030000
    3614:	00b71b00 	.word	0x00b71b00
    3618:	00f42400 	.word	0x00f42400
    361c:	00393870 	.word	0x00393870
    3620:	002dc6c0 	.word	0x002dc6c0
    3624:	003d0900 	.word	0x003d0900
    3628:	10050000 	.word	0x10050000
    362c:	400fe160 	.word	0x400fe160
    3630:	400fe164 	.word	0x400fe164
    3634:	400fe064 	.word	0x400fe064
                //
                // Compute the PLL output frequency based on its input
                // frequency.  The formula for a Fury-class device is
                // "(xtal * f) / ((r + 1) * 2)".
                //
                ulClk = ((ulClk * ((ulPLL & SYSCTL_PLLCFG_F_M) >>
    3638:	68bb      	ldr	r3, [r7, #8]
    363a:	095b      	lsrs	r3, r3, #5
    363c:	f3c3 0308 	ubfx	r3, r3, #0, #9
    3640:	693a      	ldr	r2, [r7, #16]
    3642:	fb03 f202 	mul.w	r2, r3, r2
                                   SYSCTL_PLLCFG_F_S)) /
                         ((((ulPLL & SYSCTL_PLLCFG_R_M) >>
    3646:	68bb      	ldr	r3, [r7, #8]
    3648:	f003 031f 	and.w	r3, r3, #31
                            SYSCTL_PLLCFG_R_S) + 1) * 2));
    364c:	3301      	adds	r3, #1
    364e:	005b      	lsls	r3, r3, #1
                ulClk = ((ulClk * ((ulPLL & SYSCTL_PLLCFG_F_M) >>
    3650:	fbb2 f3f3 	udiv	r3, r2, r3
    3654:	613b      	str	r3, [r7, #16]
            }

            //
            // See if the optional output divide by 2 is being used.
            //
            if(ulPLL & SYSCTL_PLLCFG_OD_2)
    3656:	68bb      	ldr	r3, [r7, #8]
    3658:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
    365c:	2b00      	cmp	r3, #0
    365e:	d002      	beq.n	3666 <SysCtlClockGet+0x272>
            {
                ulClk /= 2;
    3660:	693b      	ldr	r3, [r7, #16]
    3662:	085b      	lsrs	r3, r3, #1
    3664:	613b      	str	r3, [r7, #16]
            }

            //
            // See if the optional output divide by 4 is being used.
            //
            if(ulPLL & SYSCTL_PLLCFG_OD_4)
    3666:	68bb      	ldr	r3, [r7, #8]
    3668:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
    366c:	2b00      	cmp	r3, #0
    366e:	d002      	beq.n	3676 <SysCtlClockGet+0x282>
            {
                ulClk /= 4;
    3670:	693b      	ldr	r3, [r7, #16]
    3672:	089b      	lsrs	r3, r3, #2
    3674:	613b      	str	r3, [r7, #16]

        //
        // Force the system divider to be enabled.  It is always used when
        // using the PLL, but in some cases it does not read as being enabled.
        //
        ulRCC |= SYSCTL_RCC_USESYSDIV;
    3676:	697b      	ldr	r3, [r7, #20]
    3678:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
    367c:	617b      	str	r3, [r7, #20]
    }

    //
    // See if the system divider is being used.
    //
    if(ulRCC & SYSCTL_RCC_USESYSDIV)
    367e:	697b      	ldr	r3, [r7, #20]
    3680:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
    3684:	2b00      	cmp	r3, #0
    3686:	d035      	beq.n	36f4 <SysCtlClockGet+0x300>
    {
        //
        // Adjust the clock rate by the system clock divider.
        //
        if(ulRCC2 & SYSCTL_RCC2_USERCC2)
    3688:	68fb      	ldr	r3, [r7, #12]
    368a:	2b00      	cmp	r3, #0
    368c:	da29      	bge.n	36e2 <SysCtlClockGet+0x2ee>
        {
            if((ulRCC2 & SYSCTL_RCC2_DIV400) &&
    368e:	68fb      	ldr	r3, [r7, #12]
    3690:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
    3694:	2b00      	cmp	r3, #0
    3696:	d01a      	beq.n	36ce <SysCtlClockGet+0x2da>
               (((ulRCC2 & SYSCTL_RCC2_USERCC2) &&
    3698:	68fb      	ldr	r3, [r7, #12]
            if((ulRCC2 & SYSCTL_RCC2_DIV400) &&
    369a:	2b00      	cmp	r3, #0
    369c:	da04      	bge.n	36a8 <SysCtlClockGet+0x2b4>
                 !(ulRCC2 & SYSCTL_RCC2_BYPASS2)) ||
    369e:	68fb      	ldr	r3, [r7, #12]
    36a0:	f403 6300 	and.w	r3, r3, #2048	; 0x800
               (((ulRCC2 & SYSCTL_RCC2_USERCC2) &&
    36a4:	2b00      	cmp	r3, #0
    36a6:	d007      	beq.n	36b8 <SysCtlClockGet+0x2c4>
                (!(ulRCC2 & SYSCTL_RCC2_USERCC2) &&
    36a8:	68fb      	ldr	r3, [r7, #12]
                 !(ulRCC2 & SYSCTL_RCC2_BYPASS2)) ||
    36aa:	2b00      	cmp	r3, #0
    36ac:	db0f      	blt.n	36ce <SysCtlClockGet+0x2da>
                 !(ulRCC & SYSCTL_RCC_BYPASS))))
    36ae:	697b      	ldr	r3, [r7, #20]
    36b0:	f403 6300 	and.w	r3, r3, #2048	; 0x800
                (!(ulRCC2 & SYSCTL_RCC2_USERCC2) &&
    36b4:	2b00      	cmp	r3, #0
    36b6:	d10a      	bne.n	36ce <SysCtlClockGet+0x2da>

            {
                ulClk = ((ulClk * 2) / (((ulRCC2 & (SYSCTL_RCC2_SYSDIV2_M |
    36b8:	693b      	ldr	r3, [r7, #16]
    36ba:	005a      	lsls	r2, r3, #1
                                                    SYSCTL_RCC2_SYSDIV2LSB)) >>
    36bc:	68fb      	ldr	r3, [r7, #12]
    36be:	0d9b      	lsrs	r3, r3, #22
    36c0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
                                         (SYSCTL_RCC2_SYSDIV2_S - 1)) + 1));
    36c4:	3301      	adds	r3, #1
                ulClk = ((ulClk * 2) / (((ulRCC2 & (SYSCTL_RCC2_SYSDIV2_M |
    36c6:	fbb2 f3f3 	udiv	r3, r2, r3
    36ca:	613b      	str	r3, [r7, #16]
    36cc:	e012      	b.n	36f4 <SysCtlClockGet+0x300>
            }
            else
            {
                ulClk /= (((ulRCC2 & SYSCTL_RCC2_SYSDIV2_M) >>
    36ce:	68fb      	ldr	r3, [r7, #12]
    36d0:	0ddb      	lsrs	r3, r3, #23
    36d2:	f003 033f 	and.w	r3, r3, #63	; 0x3f
                           SYSCTL_RCC2_SYSDIV2_S) + 1);
    36d6:	3301      	adds	r3, #1
                ulClk /= (((ulRCC2 & SYSCTL_RCC2_SYSDIV2_M) >>
    36d8:	693a      	ldr	r2, [r7, #16]
    36da:	fbb2 f3f3 	udiv	r3, r2, r3
    36de:	613b      	str	r3, [r7, #16]
    36e0:	e008      	b.n	36f4 <SysCtlClockGet+0x300>
            }
        }
        else
        {
            ulClk /= (((ulRCC & SYSCTL_RCC_SYSDIV_M) >> SYSCTL_RCC_SYSDIV_S) +
    36e2:	697b      	ldr	r3, [r7, #20]
    36e4:	0ddb      	lsrs	r3, r3, #23
    36e6:	f003 030f 	and.w	r3, r3, #15
    36ea:	3301      	adds	r3, #1
    36ec:	693a      	ldr	r2, [r7, #16]
    36ee:	fbb2 f3f3 	udiv	r3, r2, r3
    36f2:	613b      	str	r3, [r7, #16]
    }

    //
    // Return the computed clock rate.
    //
    return(ulClk);
    36f4:	693b      	ldr	r3, [r7, #16]
}
    36f6:	4618      	mov	r0, r3
    36f8:	371c      	adds	r7, #28
    36fa:	46bd      	mov	sp, r7
    36fc:	f85d 7b04 	ldr.w	r7, [sp], #4
    3700:	4770      	bx	lr
    3702:	bf00      	nop
    3704:	4a325b1b 	.word	0x4a325b1b
    3708:	65746e45 	.word	0x65746e45
    370c:	65742072 	.word	0x65742072
    3710:	203a7478 	.word	0x203a7478
    3714:	00000a0d 	.word	0x00000a0d
    3718:	6c6c6568 	.word	0x6c6c6568
    371c:	726f776f 	.word	0x726f776f
    3720:	0d2e646c 	.word	0x0d2e646c
    3724:	0000000a 	.word	0x0000000a
    3728:	71657266 	.word	0x71657266
    372c:	646c253a 	.word	0x646c253a
    3730:	0a0d7a48 	.word	0x0a0d7a48
    3734:	00000000 	.word	0x00000000
    3738:	33323130 	.word	0x33323130
    373c:	37363534 	.word	0x37363534
    3740:	42413938 	.word	0x42413938
    3744:	46454443 	.word	0x46454443
    3748:	00000000 	.word	0x00000000
    374c:	33323130 	.word	0x33323130
    3750:	37363534 	.word	0x37363534
    3754:	62613938 	.word	0x62613938
    3758:	66656463 	.word	0x66656463
    375c:	00000000 	.word	0x00000000
    3760:	6c756e28 	.word	0x6c756e28
    3764:	0000296c 	.word	0x0000296c

00003768 <blanks.1>:
    3768:	20202020 20202020 20202020 20202020                     

00003778 <zeroes.0>:
    3778:	30303030 30303030 30303030 30303030     0000000000000000
    3788:	0000002e 435f434c 414c4c4f 00004554     ....LC_COLLATE..
    3798:	435f434c 45505954 00000000 4d5f434c     LC_CTYPE....LC_M
    37a8:	54454e4f 00595241 4e5f434c 52454d55     ONETARY.LC_NUMER
    37b8:	00004349 545f434c 00454d49 4d5f434c     IC..LC_TIME.LC_M
    37c8:	41535345 00534547                       ESSAGES.

000037d0 <_ctype_>:
    37d0:	20202000 20202020 28282020 20282828     .         ((((( 
    37e0:	20202020 20202020 20202020 20202020                     
    37f0:	10108820 10101010 10101010 10101010      ...............
    3800:	04040410 04040404 10040404 10101010     ................
    3810:	41411010 41414141 01010101 01010101     ..AAAAAA........
    3820:	01010101 01010101 01010101 10101010     ................
    3830:	42421010 42424242 02020202 02020202     ..BBBBBB........
    3840:	02020202 02020202 02020202 10101010     ................
    3850:	00000020 00000000 00000000 00000000      ...............
	...

000038d4 <g_pulGPIOBaseAddrs>:
    38d4:	40004000 40058000 40005000 40059000     .@.@...@.P.@...@
    38e4:	40006000 4005a000 40007000 4005b000     .`.@...@.p.@...@
    38f4:	40024000 4005c000 40025000 4005d000     .@.@...@.P.@...@
    3904:	40026000 4005e000 40027000 4005f000     .`.@...@.p.@...@
    3914:	4003d000 40060000 40061000 40061000     ...@...@...@...@
    3924:	40062000 40062000 40063000 40063000     . .@. .@.0.@.0.@
    3934:	40064000 40064000 40065000 40065000     .@.@.@.@.P.@.P.@
    3944:	40066000 40066000                       .`.@.`.@

0000394c <g_pulXtals>:
    394c:	000f4240 001c2000 001e8480 00258000     @B... ........%.
    395c:	00369e99 00384000 003d0900 003e8000     ..6..@8...=...>.
    396c:	004b0000 004c4b40 004e2000 005b8d80     ..K.@KL.. N...[.
    397c:	005dc000 00708000 007a1200 007d0000     ..]...p...z...}.
    398c:	00989680 00b71b00 00bb8000 00cee8c0     ................
    399c:	00da7a64 00f42400 00fa0000 0112a880     dz...$..........
    39ac:	01312d00 016e3600 017d7840              .-1..6n.@x}.
